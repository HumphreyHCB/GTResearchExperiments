--- Execution profile ---
Total samples       : 7584
unknown_Java        : 240 (3.16%)
not_walkable_Java   : 1 (0.01%)

--- 20550126340 ns (27.09%), 2055 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 16290569340 ns (21.48%), 1629 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 10790073186 ns (14.22%), 1079 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 3890224282 ns (5.13%), 389 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 2280137960 ns (3.01%), 228 samples
  [ 0] jdk.internal.misc.Unsafe.allocateInstance
  [ 1] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 2] java.lang.invoke.LambdaForm$DMH.0x00007f01fc007400.newInvokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x00007f01fc007c00.linkToTargetMethod
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1950123491 ns (2.57%), 195 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 1720016695 ns (2.27%), 172 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1510063156 ns (1.99%), 151 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 1430090350 ns (1.89%), 143 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 1330046721 ns (1.75%), 133 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1219942008 ns (1.61%), 122 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 1089981203 ns (1.44%), 109 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f01fc004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f01fc004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f01fc004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f01fc004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda.0x00007f01fc004638.apply
  [18] som.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda.0x00007f01fc004638.apply
  [22] som.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 929922104 ns (1.23%), 93 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 679982383 ns (0.90%), 68 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 629988255 ns (0.83%), 63 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 610001537 ns (0.80%), 61 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 600025553 ns (0.79%), 60 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f01fc004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 559951248 ns (0.74%), 56 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f01fc004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 529997163 ns (0.70%), 53 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 500033523 ns (0.66%), 50 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 499996665 ns (0.66%), 50 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 450039482 ns (0.59%), 45 samples
  [ 0] som.Arrays.setAll
  [ 1] [unknown_Java]

--- 449998316 ns (0.59%), 45 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 410041501 ns (0.54%), 41 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 400009155 ns (0.53%), 40 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 350049099 ns (0.46%), 35 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 329987857 ns (0.44%), 33 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 270010692 ns (0.36%), 27 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 149988818 ns (0.20%), 15 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 130999098 ns (0.17%), 13 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParScanThreadState::steal_and_trim_queue
  [ 2] G1ParEvacuateFollowersClosure::do_void
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 130005669 ns (0.17%), 13 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 129983630 ns (0.17%), 13 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f01fc004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 129975903 ns (0.17%), 13 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 120000952 ns (0.16%), 12 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 90801634 ns (0.12%), 9 samples
  [ 0] HeapRegionManager::par_iterate
  [ 1] G1PrepareEvacuationTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 90010168 ns (0.12%), 9 samples
  [ 0] jdk.internal.misc.Unsafe.allocateInstance
  [ 1] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 2] java.lang.invoke.LambdaForm$DMH.0x00007f01fc007400.newInvokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x00007f01fc007c00.linkToTargetMethod
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 89990262 ns (0.12%), 9 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 70571732 ns (0.09%), 7 samples
  [ 0] G1CardSet::reset_table_scanner
  [ 1] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
  [ 2] HeapRegionManager::par_iterate
  [ 3] G1PrepareEvacuationTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 69995464 ns (0.09%), 7 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 60005261 ns (0.08%), 6 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 50386528 ns (0.07%), 5 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 50003005 ns (0.07%), 5 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 50001996 ns (0.07%), 5 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 49997283 ns (0.07%), 5 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 40318931 ns (0.05%), 4 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 40270192 ns (0.05%), 4 samples
  [ 0] G1ScanCollectionSetRegionClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1RemSet::scan_collection_set_regions
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 40007370 ns (0.05%), 4 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 40003426 ns (0.05%), 4 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f01fc004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f01fc004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f01fc004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f01fc004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 40001473 ns (0.05%), 4 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 40000443 ns (0.05%), 4 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 30251306 ns (0.04%), 3 samples
  [ 0] HeapRegion::hr_clear
  [ 1] G1CollectedHeap::free_region
  [ 2] FreeCSetClosure::do_heap_region
  [ 3] G1CollectedHeap::par_iterate_regions_array
  [ 4] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 5] G1BatchedTask::work
  [ 6] WorkerThread::run
  [ 7] Thread::call_run
  [ 8] thread_native_entry
  [ 9] start_thread

--- 30243987 ns (0.04%), 3 samples
  [ 0] G1RemSet::prepare_region_for_scan
  [ 1] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
  [ 2] HeapRegionManager::par_iterate
  [ 3] G1PrepareEvacuationTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 30241135 ns (0.04%), 3 samples
  [ 0] FreeListAllocator::reset
  [ 1] HeapRegionRemSet::clear_locked
  [ 2] HeapRegion::hr_clear
  [ 3] G1CollectedHeap::free_region
  [ 4] FreeCSetClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 7] G1BatchedTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 30239004 ns (0.04%), 3 samples
  [ 0] void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] start_thread

--- 30001206 ns (0.04%), 3 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 30000661 ns (0.04%), 3 samples
  [ 0] SharedRuntime::on_slowpath_allocation_exit
  [ 1] som.Random.next
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f01fc004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.benchmark
  [28] Benchmark.innerBenchmarkLoop
  [29] Run.measure
  [30] Run.doRuns
  [31] Run.runBenchmark
  [32] Harness.main

--- 29999212 ns (0.04%), 3 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 29998515 ns (0.04%), 3 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f01fc004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f01fc004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f01fc004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f01fc004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda.0x00007f01fc004638.apply
  [18] som.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 29994020 ns (0.04%), 3 samples
  [ 0] Storage$$Lambda.0x00007f01fc004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f01fc004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f01fc004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 29983824 ns (0.04%), 3 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 29981174 ns (0.04%), 3 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f01fc004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f01fc004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f01fc004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 20173737 ns (0.03%), 2 samples
  [ 0] FreeCSetClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20172896 ns (0.03%), 2 samples
  [ 0] _int_malloc
  [ 1] [unknown]
  [ 2] [unknown]

--- 20169463 ns (0.03%), 2 samples
  [ 0] malloc_consolidate

--- 20167414 ns (0.03%), 2 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1YoungCollector::evacuate_initial_collection_set
  [ 2] G1YoungCollector::collect
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 5] VM_G1CollectForAllocation::doit
  [ 6] VM_Operation::evaluate
  [ 7] VMThread::evaluate_operation
  [ 8] VMThread::inner_execute
  [ 9] VMThread::run
  [10] Thread::call_run
  [11] thread_native_entry
  [12] start_thread

--- 20167176 ns (0.03%), 2 samples
  [ 0] do_futex_[k]
  [ 1] __x64_sys_futex_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __futex_abstimed_wait_common

--- 20165231 ns (0.03%), 2 samples
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common

--- 20157346 ns (0.03%), 2 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1BatchedTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 20151732 ns (0.03%), 2 samples
  [ 0] Method::bcp_from
  [ 1] JavaThread::oops_do_frames
  [ 2] Thread::oops_do
  [ 3] Threads::possibly_parallel_oops_do
  [ 4] G1RootProcessor::process_java_roots
  [ 5] G1RootProcessor::evacuate_roots
  [ 6] G1EvacuateRegionsTask::scan_roots
  [ 7] G1EvacuateRegionsBaseTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 20101429 ns (0.03%), 2 samples
  [ 0] HandleArea::oops_do
  [ 1] Thread::oops_do
  [ 2] Threads::possibly_parallel_oops_do
  [ 3] G1RootProcessor::process_java_roots
  [ 4] G1RootProcessor::evacuate_roots
  [ 5] G1EvacuateRegionsTask::scan_roots
  [ 6] G1EvacuateRegionsBaseTask::work
  [ 7] WorkerThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] start_thread

--- 20066309 ns (0.03%), 2 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots
  [ 2] G1RemSet::scan_heap_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 20018840 ns (0.03%), 2 samples
  [ 0] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 1] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 2] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 3] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 4] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 5] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 6] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 7] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 8] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 9] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [10] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [11] JNIEnv_::CallNonvirtualObjectMethod
  [12] JVMCIEnv::call_HotSpotJVMCIRuntime_compileMethod
  [13] JVMCIRuntime::compile_method
  [14] CompileBroker::invoke_compiler_on_method
  [15] CompileBroker::compiler_thread_loop
  [16] JavaThread::thread_main_inner
  [17] Thread::call_run
  [18] thread_native_entry
  [19] start_thread

--- 20015130 ns (0.03%), 2 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] folio_batch_move_lru_[k]
  [ 2] folio_add_lru_[k]
  [ 3] do_anonymous_page_[k]
  [ 4] __handle_mm_fault_[k]
  [ 5] handle_mm_fault_[k]
  [ 6] do_user_addr_fault_[k]
  [ 7] exc_page_fault_[k]
  [ 8] asm_exc_page_fault_[k]
  [ 9] jdk.internal.misc.Unsafe.allocateInstance
  [10] java.lang.invoke.DirectMethodHandle.allocateInstance
  [11] java.lang.invoke.LambdaForm$DMH.0x00007f01fc007400.newInvokeSpecial
  [12] java.lang.invoke.LambdaForm$MH.0x00007f01fc007c00.linkToTargetMethod
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f01fc004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f01fc004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f01fc004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.lambda$buildTreeDepth$0
  [27] Storage$$Lambda.0x00007f01fc004638.apply
  [28] som.Arrays.setAll
  [29] Storage.buildTreeDepth
  [30] Storage.lambda$buildTreeDepth$0
  [31] Storage$$Lambda.0x00007f01fc004638.apply
  [32] som.Arrays.setAll
  [33] Storage.buildTreeDepth
  [34] Storage.benchmark
  [35] Benchmark.innerBenchmarkLoop
  [36] Run.measure
  [37] Run.doRuns
  [38] Run.runBenchmark
  [39] Harness.main

--- 20010800 ns (0.03%), 2 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f01fc004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 19996877 ns (0.03%), 2 samples
  [ 0] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 1] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 2] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 3] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 4] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 5] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 6] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 7] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 8] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 9] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [10] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [11] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [12] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [13] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [14] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [15] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [16] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [17] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [18] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [19] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [20] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [21] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [22] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [23] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [24] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [25] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [26] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [27] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [28] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [29] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [30] JNIEnv_::CallNonvirtualObjectMethod
  [31] JVMCIEnv::call_HotSpotJVMCIRuntime_compileMethod
  [32] JVMCIRuntime::compile_method
  [33] CompileBroker::invoke_compiler_on_method
  [34] CompileBroker::compiler_thread_loop
  [35] JavaThread::thread_main_inner
  [36] Thread::call_run
  [37] thread_native_entry
  [38] start_thread

--- 19992709 ns (0.03%), 2 samples
  [ 0] MemAllocator::allocate
  [ 1] InstanceKlass::allocate_objArray
  [ 2] JVMCIRuntime::new_array_common
  [ 3] som.Random.next
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f01fc004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f01fc004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f01fc004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f01fc004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f01fc004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.lambda$buildTreeDepth$0
  [26] Storage$$Lambda.0x00007f01fc004638.apply
  [27] som.Arrays.setAll
  [28] Storage.buildTreeDepth
  [29] Storage.benchmark
  [30] Benchmark.innerBenchmarkLoop
  [31] Run.measure
  [32] Run.doRuns
  [33] Run.runBenchmark
  [34] Harness.main

--- 19989214 ns (0.03%), 2 samples
  [ 0] pthread_mutex_lock@@GLIBC_2.2.5
  [ 1] G1MonitoringSupport::update_eden_size
  [ 2] MutatorAllocRegion::retire
  [ 3] G1CollectedHeap::attempt_allocation_slow
  [ 4] G1CollectedHeap::allocate_new_tlab
  [ 5] MemAllocator::mem_allocate_inside_tlab_slow
  [ 6] MemAllocator::allocate
  [ 7] InstanceKlass::allocate_objArray
  [ 8] JVMCIRuntime::new_array_common
  [ 9] som.Random.next
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f01fc004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f01fc004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda.0x00007f01fc004638.apply
  [29] som.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.lambda$buildTreeDepth$0
  [32] Storage$$Lambda.0x00007f01fc004638.apply
  [33] som.Arrays.setAll
  [34] Storage.buildTreeDepth
  [35] Storage.benchmark
  [36] Benchmark.innerBenchmarkLoop
  [37] Run.measure
  [38] Run.doRuns
  [39] Run.runBenchmark
  [40] Harness.main

--- 19795796 ns (0.03%), 2 samples
  [ 0] rmqueue_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] __folio_alloc_[k]
  [ 4] vma_alloc_folio_[k]
  [ 5] do_anonymous_page_[k]
  [ 6] __handle_mm_fault_[k]
  [ 7] handle_mm_fault_[k]
  [ 8] do_user_addr_fault_[k]
  [ 9] exc_page_fault_[k]
  [10] asm_exc_page_fault_[k]
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f01fc004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda.0x00007f01fc004638.apply
  [18] som.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda.0x00007f01fc004638.apply
  [22] som.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.lambda$buildTreeDepth$0
  [25] Storage$$Lambda.0x00007f01fc004638.apply
  [26] som.Arrays.setAll
  [27] Storage.buildTreeDepth
  [28] Storage.lambda$buildTreeDepth$0
  [29] Storage$$Lambda.0x00007f01fc004638.apply
  [30] som.Arrays.setAll
  [31] Storage.buildTreeDepth
  [32] Storage.lambda$buildTreeDepth$0
  [33] Storage$$Lambda.0x00007f01fc004638.apply
  [34] som.Arrays.setAll
  [35] Storage.buildTreeDepth
  [36] Storage.benchmark
  [37] Benchmark.innerBenchmarkLoop
  [38] Run.measure
  [39] Run.doRuns
  [40] Run.runBenchmark
  [41] Harness.main

--- 10309160 ns (0.01%), 1 sample
  [ 0] __GI___libc_malloc
  [ 1] AnyObj::operator new
  [ 2] G1MonotonicArenaFreeMemoryTask::calculate_return_infos
  [ 3] G1MonotonicArenaFreeMemoryTask::free_excess_arena_memory
  [ 4] G1MonotonicArenaFreeMemoryTask::execute
  [ 5] G1ServiceThread::run_task
  [ 6] G1ServiceThread::run_service
  [ 7] ConcurrentGCThread::run
  [ 8] Thread::call_run
  [ 9] thread_native_entry
  [10] start_thread

--- 10256734 ns (0.01%), 1 sample
  [ 0] clock_gettime@plt
  [ 1] WatcherThread::sleep
  [ 2] WatcherThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 10205604 ns (0.01%), 1 sample
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] rmqueue_bulk_[k]
  [ 2] __rmqueue_pcplist_[k]
  [ 3] rmqueue_[k]
  [ 4] get_page_from_freelist_[k]
  [ 5] __alloc_pages_[k]
  [ 6] __folio_alloc_[k]
  [ 7] vma_alloc_folio_[k]
  [ 8] do_anonymous_page_[k]
  [ 9] __handle_mm_fault_[k]
  [10] handle_mm_fault_[k]
  [11] do_user_addr_fault_[k]
  [12] exc_page_fault_[k]
  [13] asm_exc_page_fault_[k]
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f01fc004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f01fc004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f01fc004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda.0x00007f01fc004638.apply
  [29] som.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.lambda$buildTreeDepth$0
  [32] Storage$$Lambda.0x00007f01fc004638.apply
  [33] som.Arrays.setAll
  [34] Storage.buildTreeDepth
  [35] Storage.benchmark
  [36] Benchmark.innerBenchmarkLoop
  [37] Run.measure
  [38] Run.doRuns
  [39] Run.runBenchmark
  [40] Harness.main

--- 10112421 ns (0.01%), 1 sample
  [ 0] plist_add_[k]
  [ 1] __futex_queue_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] __futex_wait_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_common

--- 10107073 ns (0.01%), 1 sample
  [ 0] TruncatedSeq::add
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10103368 ns (0.01%), 1 sample
  [ 0] HeapRegion::clear_cardtable
  [ 1] G1BatchedTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 10100619 ns (0.01%), 1 sample
  [ 0] __condvar_dec_grefs
  [ 1] [unknown]

--- 10099739 ns (0.01%), 1 sample
  [ 0] exit_to_user_mode_loop_[k]
  [ 1] exit_to_user_mode_prepare_[k]
  [ 2] syscall_exit_to_user_mode_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] __futex_abstimed_wait_common

--- 10099577 ns (0.01%), 1 sample
  [ 0] __GI___libc_malloc

--- 10099167 ns (0.01%), 1 sample
  [ 0] HandleArea::oops_do
  [ 1] JavaThread::oops_do_no_frames
  [ 2] Thread::oops_do
  [ 3] Threads::possibly_parallel_oops_do
  [ 4] G1RootProcessor::process_java_roots
  [ 5] G1RootProcessor::evacuate_roots
  [ 6] G1EvacuateRegionsTask::scan_roots
  [ 7] G1EvacuateRegionsBaseTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 10098204 ns (0.01%), 1 sample
  [ 0] G1RebuildFreeListTask::work
  [ 1] Thread::call_run
  [ 2] thread_native_entry
  [ 3] start_thread

--- 10098190 ns (0.01%), 1 sample
  [ 0] Thread::claim_par_threads_do
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 10096644 ns (0.01%), 1 sample
  [ 0] __audit_syscall_entry_[k]
  [ 1] syscall_trace_enter.constprop.0_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] sem_post@GLIBC_2.2.5
  [ 5] WorkerThreads::run_task
  [ 6] G1RemSet::merge_heap_roots
  [ 7] G1YoungCollector::evacuate_initial_collection_set
  [ 8] G1YoungCollector::collect
  [ 9] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [10] G1CollectedHeap::do_collection_pause_at_safepoint
  [11] VM_G1CollectForAllocation::doit
  [12] VM_Operation::evaluate
  [13] VMThread::evaluate_operation
  [14] VMThread::inner_execute
  [15] VMThread::run
  [16] Thread::call_run
  [17] thread_native_entry
  [18] start_thread

--- 10096145 ns (0.01%), 1 sample
  [ 0] G1CardSet::clear
  [ 1] HeapRegionRemSet::clear_locked
  [ 2] HeapRegion::hr_clear
  [ 3] G1CollectedHeap::free_region
  [ 4] FreeCSetClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 7] G1BatchedTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 10095511 ns (0.01%), 1 sample
  [ 0] G1GCPhaseTimes::average_time_ms
  [ 1] G1Policy::record_young_collection_end
  [ 2] G1YoungCollector::collect
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 5] VM_G1CollectForAllocation::doit
  [ 6] VM_Operation::evaluate
  [ 7] VMThread::evaluate_operation
  [ 8] VMThread::inner_execute
  [ 9] VMThread::run
  [10] Thread::call_run
  [11] thread_native_entry
  [12] start_thread

--- 10094532 ns (0.01%), 1 sample
  [ 0] G1BatchedTask::work
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] start_thread

--- 10094126 ns (0.01%), 1 sample
  [ 0] G1SurvRateGroup::record_surviving_words
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10094061 ns (0.01%), 1 sample
  [ 0] G1ParCopyClosure<(G1Barrier)0, false>::do_oop
  [ 1] G1RootProcessor::evacuate_roots
  [ 2] G1EvacuateRegionsTask::scan_roots
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10093790 ns (0.01%), 1 sample
  [ 0] void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>
  [ 1] G1CollectionSet::finalize_old_part
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] start_thread

--- 10093763 ns (0.01%), 1 sample
  [ 0] G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 10093217 ns (0.01%), 1 sample
  [ 0] futex_wake_[k]
  [ 1] do_futex_[k]
  [ 2] __x64_sys_futex_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] sem_post@GLIBC_2.2.5
  [ 6] WorkerThreads::run_task
  [ 7] G1YoungCollector::post_evacuate_collection_set
  [ 8] G1YoungCollector::collect
  [ 9] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [10] G1CollectedHeap::do_collection_pause_at_safepoint
  [11] VM_G1CollectForAllocation::doit
  [12] VM_Operation::evaluate
  [13] VMThread::evaluate_operation
  [14] VMThread::inner_execute
  [15] VMThread::run
  [16] Thread::call_run
  [17] thread_native_entry
  [18] start_thread

--- 10091510 ns (0.01%), 1 sample
  [ 0] ThreadLocalAllocStats::publish
  [ 1] G1PreEvacuateCollectionSetBatchTask::~G1PreEvacuateCollectionSetBatchTask
  [ 2] G1YoungCollector::pre_evacuate_collection_set
  [ 3] G1YoungCollector::collect
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 5] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 6] VM_G1CollectForAllocation::doit
  [ 7] VM_Operation::evaluate
  [ 8] VMThread::evaluate_operation
  [ 9] VMThread::inner_execute
  [10] VMThread::run
  [11] Thread::call_run
  [12] thread_native_entry
  [13] start_thread

          ns  percent  samples  top
  ----------  -------  -------  ---
 45190697573   59.58%     4519  Storage.buildTreeDepth
 21020669739   27.71%     2102  som.Arrays.setAll
  2639913947    3.48%      264  Storage$$Lambda.0x00007f01fc004638.apply
  2370148128    3.12%      237  jdk.internal.misc.Unsafe.allocateInstance
  1449953174    1.91%      145  som.Random.next
  1169980699    1.54%      117  Storage.lambda$buildTreeDepth$0
   191384338    0.25%       19  G1ParScanThreadState::trim_queue_to_threshold
   170022520    0.22%       17  /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
    90801634    0.12%        9  HeapRegionManager::par_iterate
    70571732    0.09%        7  G1CardSet::reset_table_scanner
    60371034    0.08%        6  _raw_spin_unlock_irqrestore_[k]
    50386528    0.07%        5  G1ParScanThreadState::steal_and_trim_queue
    40324760    0.05%        4  __memset_avx2_unaligned_erms
    40270192    0.05%        4  G1ScanCollectionSetRegionClosure::do_heap_region
    40023295    0.05%        4  clear_page_erms_[k]
    30254602    0.04%        3  _int_malloc
    30251306    0.04%        3  HeapRegion::hr_clear
    30243987    0.04%        3  G1RemSet::prepare_region_for_scan
    30241135    0.04%        3  FreeListAllocator::reset
    30239004    0.04%        3  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    30200596    0.04%        3  HandleArea::oops_do
    30184577    0.04%        3  futex_wake_[k]
    30161981    0.04%        3  G1FromCardCache::clear
    30000661    0.04%        3  SharedRuntime::on_slowpath_allocation_exit
    20408737    0.03%        2  __GI___libc_malloc
    20185313    0.03%        2  G1RebuildFreeListTask::work
    20173737    0.03%        2  FreeCSetClosure::do_heap_region
    20169463    0.03%        2  malloc_consolidate
    20167176    0.03%        2  do_futex_[k]
    20166932    0.03%        2  [vdso]
    20165231    0.03%        2  syscall_enter_from_user_mode_[k]
    20151732    0.03%        2  Method::bcp_from
    20149581    0.03%        2  native_queued_spin_lock_slowpath_[k]
    19992709    0.03%        2  MemAllocator::allocate
    19989858    0.03%        2  ObjArrayAllocator::initialize
    19989214    0.03%        2  pthread_mutex_lock@@GLIBC_2.2.5
    19795796    0.03%        2  rmqueue_[k]
    10256734    0.01%        1  clock_gettime@plt
    10112421    0.01%        1  plist_add_[k]
    10107073    0.01%        1  TruncatedSeq::add
    10103368    0.01%        1  HeapRegion::clear_cardtable
    10100619    0.01%        1  __condvar_dec_grefs
    10099739    0.01%        1  exit_to_user_mode_loop_[k]
    10098190    0.01%        1  Thread::claim_par_threads_do
    10096644    0.01%        1  __audit_syscall_entry_[k]
    10096145    0.01%        1  G1CardSet::clear
    10095511    0.01%        1  G1GCPhaseTimes::average_time_ms
    10094532    0.01%        1  G1BatchedTask::work
    10094126    0.01%        1  G1SurvRateGroup::record_surviving_words
    10094061    0.01%        1  G1ParCopyClosure<(G1Barrier)0, false>::do_oop
    10093790    0.01%        1  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>
    10093763    0.01%        1  G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
    10091510    0.01%        1  ThreadLocalAllocStats::publish
    10090775    0.01%        1  wake_q_add_safe_[k]
    10090395    0.01%        1  __audit_syscall_exit_[k]
    10089561    0.01%        1  __futex_unqueue_[k]
    10088592    0.01%        1  __new_sem_wait_slow64.constprop.0
    10088405    0.01%        1  G1Policy::transfer_survivors_to_cset
    10088288    0.01%        1  _raw_spin_lock_[k]
    10086879    0.01%        1  do_futex_wait.constprop.0
    10086670    0.01%        1  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
    10086329    0.01%        1  GCHeapSummaryEventSender::visit
    10084497    0.01%        1  blkcg_maybe_throttle_current_[k]
    10082860    0.01%        1  sem_post@GLIBC_2.2.5
    10082076    0.01%        1  Monitor::wait_without_safepoint_check
    10081348    0.01%        1  MasterFreeRegionListChecker::check_mt_safety
    10079534    0.01%        1  G1EvacuationClosures::strong_codeblobs
    10079143    0.01%        1  __rseq_handle_notify_resume_[k]
    10079102    0.01%        1  G1MonotonicArena::num_segments
    10077098    0.01%        1  CollectedHeap::create_metaspace_summary
    10076997    0.01%        1  G1GCPhaseTimes::phase_name
    10076696    0.01%        1  PosixSemaphore::wait
    10076266    0.01%        1  __libc_free
    10074622    0.01%        1  __GI___lll_lock_wake
    10072778    0.01%        1  ConstantPool::name_and_type_ref_index_at
    10072604    0.01%        1  CardTable::clear_MemRegion
    10072370    0.01%        1  G1Policy::phase_times
    10070444    0.01%        1  G1ParScanThreadState::flush_stats
    10065766    0.01%        1  G1DirtyCardQueueSet::concatenate_log_and_stats
    10064358    0.01%        1  G1GCPhaseTimes::record_time_secs
    10064180    0.01%        1  __tls_get_addr
    10063368    0.01%        1  G1CollectedHeap::fill_with_dummy_object
    10060852    0.01%        1  Rdtsc::elapsed_counter
    10051900    0.01%        1  pthread_cond_broadcast@@GLIBC_2.3.2
    10025579    0.01%        1  __memmove_sse2_unaligned_erms
    10014077    0.01%        1  jdk.internal.org.objectweb.asm.ByteVector.put12
    10011014    0.01%        1  java.lang.System$2.encodeASCII
    10010966    0.01%        1  InstanceKlass::array_klass
    10010317    0.01%        1  ThreadLocalAllocBuffer::retire_before_allocation
    10009010    0.01%        1  do_user_addr_fault_[k]
    10006284    0.01%        1  G1Allocator::unsafe_max_tlab_alloc
    10006225    0.01%        1  jdk.internal.org.objectweb.asm.SymbolTable$Entry.<init>
    10002343    0.01%        1  jdk.internal.org.objectweb.asm.SymbolTable.<init>
    10002311    0.01%        1  Interpreter
    10001341    0.01%        1  InstanceKlass::allocate_objArray
    10001333    0.01%        1  InterpreterRuntime::newarray
    10001160    0.01%        1  verify_dirent_name_[k]
    10001081    0.01%        1  G1CollectedHeap::allocate_new_tlab
    10000524    0.01%        1  CardTableBarrierSet::on_slowpath_allocation_exit
    10000074    0.01%        1  ___pthread_mutex_trylock
     9999972    0.01%        1  G1NUMA::is_enabled
     9999826    0.01%        1  MemAllocator::mem_allocate_inside_tlab_slow
     9999826    0.01%        1  HandleMark::initialize
     9998835    0.01%        1  JVMCIRuntime::new_array_common
     9998748    0.01%        1  java.nio.HeapCharBuffer.<init>
     9998430    0.01%        1  G1MonitoringSupport::update_eden_size
     9998270    0.01%        1  G1CollectedHeap::attempt_allocation_slow
     9990669    0.01%        1  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     9990040    0.01%        1  JfrObjectAllocationSample::send_event
