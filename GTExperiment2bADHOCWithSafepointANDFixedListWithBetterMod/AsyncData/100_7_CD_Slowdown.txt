--- Execution profile ---
Total samples       : 11075
unknown_Java        : 204 (1.84%)
not_walkable_Java   : 5 (0.05%)

--- 1720008505 ns (1.55%), 172 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1630075750 ns (1.47%), 163 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1630042554 ns (1.47%), 163 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 5] cd.RedBlackTree.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1340083212 ns (1.21%), 134 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1280059820 ns (1.16%), 128 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1250076390 ns (1.13%), 125 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1189999576 ns (1.07%), 119 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1170071595 ns (1.06%), 117 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1070039623 ns (0.97%), 107 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1060000983 ns (0.96%), 106 samples
  [ 0] cd.CollisionDetector$CollectCollisions.apply
  [ 1] cd.CollisionDetector$CollectCollisions.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 950037833 ns (0.86%), 95 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 929977492 ns (0.84%), 93 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 910042881 ns (0.82%), 91 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 819992983 ns (0.74%), 82 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 789994967 ns (0.71%), 79 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 770058127 ns (0.70%), 77 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 759989614 ns (0.69%), 76 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 729973054 ns (0.66%), 73 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 710025497 ns (0.64%), 71 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 699985907 ns (0.63%), 70 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 639989853 ns (0.58%), 64 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 619998018 ns (0.56%), 62 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 610018306 ns (0.55%), 61 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 580043174 ns (0.52%), 58 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 580022737 ns (0.52%), 58 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 570013358 ns (0.51%), 57 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] [unknown_Java]

--- 569989441 ns (0.51%), 57 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 560030263 ns (0.51%), 56 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 550003194 ns (0.50%), 55 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 540046565 ns (0.49%), 54 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 530020834 ns (0.48%), 53 samples
  [ 0] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 1] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 519996401 ns (0.47%), 52 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 519982834 ns (0.47%), 52 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 510016038 ns (0.46%), 51 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 510002788 ns (0.46%), 51 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 500007532 ns (0.45%), 50 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 499974036 ns (0.45%), 50 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 499958283 ns (0.45%), 50 samples
  [ 0] cd.CollisionDetector.handleNewFrame
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 460032380 ns (0.42%), 46 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 459987928 ns (0.42%), 46 samples
  [ 0] cd.RedBlackTree.put
  [ 1] [unknown_Java]

--- 450025411 ns (0.41%), 45 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 449989029 ns (0.41%), 45 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 439955897 ns (0.40%), 44 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 410025407 ns (0.37%), 41 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] [unknown_Java]

--- 409949796 ns (0.37%), 41 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.reduceCollisionSet
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 400061701 ns (0.36%), 40 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 400033918 ns (0.36%), 40 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 400012596 ns (0.36%), 40 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 400005041 ns (0.36%), 40 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 390012059 ns (0.35%), 39 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 380028263 ns (0.34%), 38 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 379977719 ns (0.34%), 38 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 370015712 ns (0.33%), 37 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 359999780 ns (0.33%), 36 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 359965719 ns (0.33%), 36 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 340030658 ns (0.31%), 34 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 340020729 ns (0.31%), 34 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 340001928 ns (0.31%), 34 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 330078780 ns (0.30%), 33 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 330038699 ns (0.30%), 33 samples
  [ 0] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 1] [unknown_Java]

--- 330030534 ns (0.30%), 33 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 330005057 ns (0.30%), 33 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 329928935 ns (0.30%), 33 samples
  [ 0] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 329924635 ns (0.30%), 33 samples
  [ 0] cd.RedBlackTree$Node.successor
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 320003452 ns (0.29%), 32 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 319981610 ns (0.29%), 32 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 310006862 ns (0.28%), 31 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 300023035 ns (0.27%), 30 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 300017833 ns (0.27%), 30 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 290064968 ns (0.26%), 29 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 290016055 ns (0.26%), 29 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 290014856 ns (0.26%), 29 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.findNode
  [ 3] cd.RedBlackTree.get
  [ 4] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 5] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 6] cd.RedBlackTree.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 290004187 ns (0.26%), 29 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 289990581 ns (0.26%), 29 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 3] cd.CollisionDetector$RemoveAbsentAircraft.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 289979841 ns (0.26%), 29 samples
  [ 0] cd.RedBlackTree$Node.successor
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 289979788 ns (0.26%), 29 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 280020527 ns (0.25%), 28 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 280018614 ns (0.25%), 28 samples
  [ 0] itable stub
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 280003283 ns (0.25%), 28 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 279985103 ns (0.25%), 28 samples
  [ 0] cd.CollisionDetector.handleNewFrame
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 279977371 ns (0.25%), 28 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 270037003 ns (0.24%), 27 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 270011858 ns (0.24%), 27 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 270010369 ns (0.24%), 27 samples
  [ 0] cd.RedBlackTree$Node.successor
  [ 1] cd.RedBlackTree.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 270009464 ns (0.24%), 27 samples
  [ 0] cd.CollisionDetector.handleNewFrame
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 270004388 ns (0.24%), 27 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 269965038 ns (0.24%), 27 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 260049946 ns (0.23%), 26 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 260009366 ns (0.23%), 26 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 259993886 ns (0.23%), 26 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 250001418 ns (0.23%), 25 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 249964929 ns (0.23%), 25 samples
  [ 0] cd.CollisionDetector.handleNewFrame
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 240024119 ns (0.22%), 24 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 240010946 ns (0.22%), 24 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 239966938 ns (0.22%), 24 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 230027332 ns (0.21%), 23 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 229966190 ns (0.21%), 23 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 221195263 ns (0.20%), 22 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParScanThreadState::steal_and_trim_queue
  [ 2] G1ParEvacuateFollowersClosure::do_void
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 219988119 ns (0.20%), 22 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 210026386 ns (0.19%), 21 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 22500522547   20.32%     2250  cd.RedBlackTree.treeInsert
 14650143923   13.23%     1465  cd.CollisionDetector.isInVoxel
 12800103115   11.56%     1280  cd.RedBlackTree.put
 10040296557    9.07%     1004  cd.RedBlackTree.findNode
  9580114116    8.65%      958  cd.CallSign.compareTo
  4840026487    4.37%      484  cd.Vector2D.compareTo
  3010158631    2.72%      301  cd.RedBlackTree.treeMinimum
  3000113728    2.71%      300  cd.CollisionDetector.recurse
  2910086097    2.63%      291  cd.RedBlackTree.forEach
  2439999840    2.20%      244  som.Vector.append
  2410009669    2.18%      241  cd.Vector2D.compareNumbers
  2320046492    2.09%      232  cd.RedBlackTree.leftRotate
  2309972242    2.09%      231  cd.CollisionDetector.handleNewFrame
  2230075444    2.01%      223  cd.CollisionDetector.voxelHash
  1999994078    1.81%      200  som.Vector.<init>
  1619948931    1.46%      162  cd.RedBlackTree$Node.successor
  1399982697    1.26%      140  cd.Vector2D.plus
  1300068081    1.17%      130  cd.CollisionDetector$RemoveAbsentAircraft.apply
  1240109821    1.12%      124  cd.Vector2D.minus
  1079990851    0.98%      108  cd.CollisionDetector$CollectCollisions.apply
  1020013180    0.92%      102  cd.CollisionDetector.putIntoMap
   900058070    0.81%       90  cd.RedBlackTree.get
   749976085    0.68%       75  cd.Simulator.simulate
   590056438    0.53%       59  /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
   389992256    0.35%       39  cd.CollisionDetector.reduceCollisionSet
   370017207    0.33%       37  som.Vector.size
   359930686    0.32%       36  cd.CollisionDetector.drawMotionOnVoxelMap
   330016680    0.30%       33  som.Vector.at
   300000512    0.27%       30  cd.Motion.findIntersection
   280018614    0.25%       28  itable stub
   261362283    0.24%       26  G1ParScanThreadState::trim_queue_to_threshold
   239984576    0.22%       24  cd.RedBlackTree.rightRotate
   130011526    0.12%       13  java.util.Arrays.copyOf
    90001692    0.08%        9  oop_disjoint_arraycopy
    59996091    0.05%        6  cd.Vector3D.minus
    59972084    0.05%        6  cd.Vector3D.dot
    50216917    0.05%        5  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
    50053443    0.05%        5  __memset_avx2_unaligned_erms
    40219206    0.04%        4  G1CardSet::reset_table_scanner
    40001614    0.04%        4  G1BarrierSetRuntime::write_ref_array_post_entry
    20291221    0.02%        2  plist_add_[k]
    20116927    0.02%        2  HeapRegionManager::par_iterate
    20105340    0.02%        2  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
    20076929    0.02%        2  update_blocked_averages_[k]
    20068264    0.02%        2  HeapRegion::fill_with_dummy_object
    20063707    0.02%        2  __memmove_sse2_unaligned_erms
    20013387    0.02%        2  clear_page_erms_[k]
    20002379    0.02%        2  __tls_get_addr
    20001105    0.02%        2  MemAllocator::allocate
    20000144    0.02%        2  java.lang.Object.getClass
    10227556    0.01%        1  Mutex::lock_without_safepoint_check
    10085085    0.01%        1  __futex_unqueue_[k]
    10082569    0.01%        1  JvmtiExport::post_garbage_collection_finish
    10081081    0.01%        1  futex_wake_mark_[k]
    10078204    0.01%        1  outputStream::do_vsnprintf_and_write_with_automatic_buffer
    10077843    0.01%        1  syscall_enter_from_user_mode_[k]
    10077587    0.01%        1  HeapRegionType::get_trace_type
    10076830    0.01%        1  metaspace::RunningCounters::reserved_words_nonclass
    10075967    0.01%        1  G1PreEvacuateCollectionSetBatchTask::~G1PreEvacuateCollectionSetBatchTask
    10072825    0.01%        1  HSpaceCounters::update_capacity
    10068608    0.01%        1  G1RemSet::prepare_for_scan_heap_roots
    10068490    0.01%        1  G1CollectedHeap::do_collection_pause_at_safepoint_helper
    10066654    0.01%        1  futex_q_lock_[k]
    10066046    0.01%        1  G1ParCopyClosure<(G1Barrier)0, false>::do_oop
    10063561    0.01%        1  nmethod::oops_do
    10061438    0.01%        1  ClassLoaderDataGraph::roots_cld_do
    10060368    0.01%        1  OopMapCache::lookup
    10059975    0.01%        1  G1EvacuationRootClosures::create_root_closures
    10059189    0.01%        1  JvmtiThreadState::oops_do
    10058817    0.01%        1  JNIHandleBlock::oops_do
    10058617    0.01%        1  Thread::oops_do
    10057198    0.01%        1  __rseq_handle_notify_resume_[k]
    10056412    0.01%        1  G1RemSetScanState::G1ClearCardTableTask::do_work
    10055215    0.01%        1  G1PLABAllocator::flush_and_retire_stats
    10055169    0.01%        1  G1ScanCollectionSetRegionClosure::do_heap_region
    10054442    0.01%        1  __clock_gettime_2
    10053348    0.01%        1  __audit_syscall_entry_[k]
    10049496    0.01%        1  CardTable::clear_MemRegion
    10049138    0.01%        1  FreeListAllocator::reset
    10043135    0.01%        1  G1ParScanThreadState::steal_and_trim_queue
    10038852    0.01%        1  HeapRegionClaimer::claim_region
    10038138    0.01%        1  G1GCPhaseTimes::record_or_add_time_secs
    10018880    0.01%        1  java.lang.AbstractStringBuilder.append
    10007463    0.01%        1  do_user_addr_fault_[k]
    10005204    0.01%        1  java.lang.StringLatin1.indexOf
    10004040    0.01%        1  __do_softirq_[k]
    10003997    0.01%        1  java.io.PrintStream.implWrite
    10002923    0.01%        1  java.lang.invoke.InvokerBytecodeGenerator.emitStoreResult
    10002863    0.01%        1  G1CardTable::is_in_young
    10002553    0.01%        1  java.lang.Boolean.booleanValue
    10001577    0.01%        1  _find_next_and_bit_[k]
    10001060    0.01%        1  java.lang.String.toString
    10000646    0.01%        1  java.lang.invoke.LambdaForm$MH.0x00007f6b44011000.invoke
    10000644    0.01%        1  ConstantPool::klass_ref_index_at
    10000639    0.01%        1  java.lang.invoke.LambdaForm$MH.0x00007f6b4400e400.invoke
    10000543    0.01%        1  cd.Vector3D.times
    10000221    0.01%        1  ThreadInVMfromNative::ThreadInVMfromNative
     9999888    0.01%        1  JfrAllocationTracer::JfrAllocationTracer
     9999781    0.01%        1  java.lang.System.arraycopy
     9999730    0.01%        1  I2C/C2I adapters(0xb)
     9999631    0.01%        1  pthread_mutex_lock@@GLIBC_2.2.5
     9999550    0.01%        1  HandleMark::initialize
     9999336    0.01%        1  CD.benchmark
     9998797    0.01%        1  HeapRegionManager::allocate_free_region
     9997633    0.01%        1  java.lang.Long.getChars
     9990797    0.01%        1  ThreadLocalAllocBuffer::fill
