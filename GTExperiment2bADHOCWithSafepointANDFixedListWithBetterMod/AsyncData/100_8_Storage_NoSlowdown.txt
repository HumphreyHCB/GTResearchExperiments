--- Execution profile ---
Total samples       : 7548
unknown_Java        : 280 (3.71%)
not_walkable_Java   : 1 (0.01%)

--- 19509881015 ns (25.84%), 1951 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 16660301015 ns (22.07%), 1666 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 10860224758 ns (14.39%), 1086 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 3770138758 ns (4.99%), 377 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 2680103782 ns (3.55%), 268 samples
  [ 0] jdk.internal.misc.Unsafe.allocateInstance
  [ 1] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 2] java.lang.invoke.LambdaForm$DMH.0x00007f679c007400.newInvokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x00007f679c007c00.linkToTargetMethod
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 2130321002 ns (2.82%), 213 samples
  [ 0] Storage.buildTreeDepth
  [ 1] [unknown_Java]

--- 1500027547 ns (1.99%), 150 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1410048347 ns (1.87%), 141 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 1319975412 ns (1.75%), 132 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 1120023700 ns (1.48%), 112 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1060147810 ns (1.40%), 106 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f679c004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f679c004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f679c004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f679c004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda.0x00007f679c004638.apply
  [18] som.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.lambda$buildTreeDepth$0
  [21] Storage$$Lambda.0x00007f679c004638.apply
  [22] som.Arrays.setAll
  [23] Storage.buildTreeDepth
  [24] Storage.benchmark
  [25] Benchmark.innerBenchmarkLoop
  [26] Run.measure
  [27] Run.doRuns
  [28] Run.runBenchmark
  [29] Harness.main

--- 1040025557 ns (1.38%), 104 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 1019951125 ns (1.35%), 102 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 670079283 ns (0.89%), 67 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 670000348 ns (0.89%), 67 samples
  [ 0] som.Arrays.setAll
  [ 1] [unknown_Java]

--- 609859162 ns (0.81%), 61 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 599976647 ns (0.79%), 60 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 539992246 ns (0.72%), 54 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 539974913 ns (0.72%), 54 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f679c004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 529968671 ns (0.70%), 53 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 520054177 ns (0.69%), 52 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f679c004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 509980224 ns (0.68%), 51 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.benchmark
  [24] Benchmark.innerBenchmarkLoop
  [25] Run.measure
  [26] Run.doRuns
  [27] Run.runBenchmark
  [28] Harness.main

--- 470028396 ns (0.62%), 47 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 460012307 ns (0.61%), 46 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 379971692 ns (0.50%), 38 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 330019429 ns (0.44%), 33 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 282368424 ns (0.37%), 28 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParScanThreadState::steal_and_trim_queue
  [ 2] G1ParEvacuateFollowersClosure::do_void
  [ 3] G1EvacuateRegionsTask::evacuate_live_objects
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 279990757 ns (0.37%), 28 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.benchmark
  [23] Benchmark.innerBenchmarkLoop
  [24] Run.measure
  [25] Run.doRuns
  [26] Run.runBenchmark
  [27] Harness.main

--- 210022795 ns (0.28%), 21 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 179991581 ns (0.24%), 18 samples
  [ 0] jdk.internal.misc.Unsafe.allocateInstance
  [ 1] java.lang.invoke.DirectMethodHandle.allocateInstance
  [ 2] java.lang.invoke.LambdaForm$DMH.0x00007f679c007400.newInvokeSpecial
  [ 3] java.lang.invoke.LambdaForm$MH.0x00007f679c007c00.linkToTargetMethod
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 179980358 ns (0.24%), 18 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 140016704 ns (0.19%), 14 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.benchmark
  [19] Benchmark.innerBenchmarkLoop
  [20] Run.measure
  [21] Run.doRuns
  [22] Run.runBenchmark
  [23] Harness.main

--- 130013701 ns (0.17%), 13 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.benchmark
  [22] Benchmark.innerBenchmarkLoop
  [23] Run.measure
  [24] Run.doRuns
  [25] Run.runBenchmark
  [26] Harness.main

--- 119992876 ns (0.16%), 12 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 119987740 ns (0.16%), 12 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 110020818 ns (0.15%), 11 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 110012835 ns (0.15%), 11 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 110005952 ns (0.15%), 11 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 109992359 ns (0.15%), 11 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 100002411 ns (0.13%), 10 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.lambda$buildTreeDepth$0
  [18] Storage$$Lambda.0x00007f679c004638.apply
  [19] som.Arrays.setAll
  [20] Storage.buildTreeDepth
  [21] Storage.lambda$buildTreeDepth$0
  [22] Storage$$Lambda.0x00007f679c004638.apply
  [23] som.Arrays.setAll
  [24] Storage.buildTreeDepth
  [25] Storage.benchmark
  [26] Benchmark.innerBenchmarkLoop
  [27] Run.measure
  [28] Run.doRuns
  [29] Run.runBenchmark
  [30] Harness.main

--- 90012199 ns (0.12%), 9 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f679c004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f679c004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f679c004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f679c004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.benchmark
  [17] Benchmark.innerBenchmarkLoop
  [18] Run.measure
  [19] Run.doRuns
  [20] Run.runBenchmark
  [21] Harness.main

--- 60541239 ns (0.08%), 6 samples
  [ 0] HeapRegionManager::par_iterate
  [ 1] G1PrepareEvacuationTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 60009205 ns (0.08%), 6 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f679c004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f679c004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f679c004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.lambda$buildTreeDepth$0
  [13] Storage$$Lambda.0x00007f679c004638.apply
  [14] som.Arrays.setAll
  [15] Storage.buildTreeDepth
  [16] Storage.lambda$buildTreeDepth$0
  [17] Storage$$Lambda.0x00007f679c004638.apply
  [18] som.Arrays.setAll
  [19] Storage.buildTreeDepth
  [20] Storage.benchmark
  [21] Benchmark.innerBenchmarkLoop
  [22] Run.measure
  [23] Run.doRuns
  [24] Run.runBenchmark
  [25] Harness.main

--- 59998801 ns (0.08%), 6 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 59998655 ns (0.08%), 6 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 50471769 ns (0.07%), 5 samples
  [ 0] G1ScanCollectionSetRegionClosure::do_heap_region
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1RemSet::scan_collection_set_regions
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 49995735 ns (0.07%), 5 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 40361936 ns (0.05%), 4 samples
  [ 0] G1CardSet::reset_table_scanner
  [ 1] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
  [ 2] HeapRegionManager::par_iterate
  [ 3] G1PrepareEvacuationTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 40361053 ns (0.05%), 4 samples
  [ 0] G1ParScanThreadState::steal_and_trim_queue
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 39991442 ns (0.05%), 4 samples
  [ 0] som.Random.next
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.lambda$buildTreeDepth$0
  [15] Storage$$Lambda.0x00007f679c004638.apply
  [16] som.Arrays.setAll
  [17] Storage.buildTreeDepth
  [18] Storage.lambda$buildTreeDepth$0
  [19] Storage$$Lambda.0x00007f679c004638.apply
  [20] som.Arrays.setAll
  [21] Storage.buildTreeDepth
  [22] Storage.lambda$buildTreeDepth$0
  [23] Storage$$Lambda.0x00007f679c004638.apply
  [24] som.Arrays.setAll
  [25] Storage.buildTreeDepth
  [26] Storage.benchmark
  [27] Benchmark.innerBenchmarkLoop
  [28] Run.measure
  [29] Run.doRuns
  [30] Run.runBenchmark
  [31] Harness.main

--- 39978416 ns (0.05%), 4 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.lambda$buildTreeDepth$0
  [14] Storage$$Lambda.0x00007f679c004638.apply
  [15] som.Arrays.setAll
  [16] Storage.buildTreeDepth
  [17] Storage.benchmark
  [18] Benchmark.innerBenchmarkLoop
  [19] Run.measure
  [20] Run.doRuns
  [21] Run.runBenchmark
  [22] Harness.main

--- 30274338 ns (0.04%), 3 samples
  [ 0] HeapRegionClaimer::claim_region
  [ 1] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 2] G1BatchedTask::work
  [ 3] WorkerThread::run
  [ 4] Thread::call_run
  [ 5] thread_native_entry
  [ 6] start_thread

--- 30252313 ns (0.04%), 3 samples
  [ 0] __futex_abstimed_wait_common

--- 30083901 ns (0.04%), 3 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots
  [ 2] G1RemSet::scan_heap_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 30013284 ns (0.04%), 3 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 30000733 ns (0.04%), 3 samples
  [ 0] Storage$$Lambda.0x00007f679c004638.apply
  [ 1] som.Arrays.setAll
  [ 2] Storage.buildTreeDepth
  [ 3] Storage.lambda$buildTreeDepth$0
  [ 4] Storage$$Lambda.0x00007f679c004638.apply
  [ 5] som.Arrays.setAll
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.benchmark
  [16] Benchmark.innerBenchmarkLoop
  [17] Run.measure
  [18] Run.doRuns
  [19] Run.runBenchmark
  [20] Harness.main

--- 20202918 ns (0.03%), 2 samples
  [ 0] rseq_ip_fixup_[k]
  [ 1] __rseq_handle_notify_resume_[k]
  [ 2] exit_to_user_mode_loop_[k]
  [ 3] exit_to_user_mode_prepare_[k]
  [ 4] syscall_exit_to_user_mode_[k]
  [ 5] do_syscall_64_[k]
  [ 6] entry_SYSCALL_64_after_hwframe_[k]
  [ 7] __futex_abstimed_wait_common

--- 20201650 ns (0.03%), 2 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold
  [ 1] G1ParEvacuateFollowersClosure::do_void
  [ 2] G1EvacuateRegionsTask::evacuate_live_objects
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20195299 ns (0.03%), 2 samples
  [ 0] G1ParCopyClosure<(G1Barrier)0, false>::do_oop
  [ 1] G1RootProcessor::evacuate_roots
  [ 2] G1EvacuateRegionsTask::scan_roots
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20192246 ns (0.03%), 2 samples
  [ 0] G1RemSet::prepare_region_for_scan
  [ 1] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
  [ 2] HeapRegionManager::par_iterate
  [ 3] G1PrepareEvacuationTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20180643 ns (0.03%), 2 samples
  [ 0] FreeListAllocator::reset
  [ 1] HeapRegionRemSet::clear_locked
  [ 2] HeapRegion::hr_clear
  [ 3] G1CollectedHeap::free_region
  [ 4] FreeCSetClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 7] G1BatchedTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 20173616 ns (0.03%), 2 samples
  [ 0] __GI___libc_malloc

--- 20171966 ns (0.03%), 2 samples
  [ 0] G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
  [ 1] G1MergeHeapRootsTask::G1CombinedClosure::do_heap_region
  [ 2] G1CollectedHeap::par_iterate_regions_array
  [ 3] G1MergeHeapRootsTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20162623 ns (0.03%), 2 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1YoungCollector::evacuate_initial_collection_set
  [ 2] G1YoungCollector::collect
  [ 3] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [ 4] G1CollectedHeap::do_collection_pause_at_safepoint
  [ 5] VM_G1CollectForAllocation::doit
  [ 6] VM_Operation::evaluate
  [ 7] VMThread::evaluate_operation
  [ 8] VMThread::inner_execute
  [ 9] VMThread::run
  [10] Thread::call_run
  [11] thread_native_entry
  [12] start_thread

--- 20155184 ns (0.03%), 2 samples
  [ 0] __tls_get_addr
  [ 1] Thread::call_run
  [ 2] thread_native_entry
  [ 3] start_thread

--- 20154014 ns (0.03%), 2 samples
  [ 0] G1CardSetMemoryManager::memory_stats
  [ 1] HeapRegionRemSet::card_set_memory_stats
  [ 2] G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
  [ 3] HeapRegionManager::par_iterate
  [ 4] G1PrepareEvacuationTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 20151082 ns (0.03%), 2 samples
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] rmqueue_bulk_[k]
  [ 2] __rmqueue_pcplist_[k]
  [ 3] rmqueue_[k]
  [ 4] get_page_from_freelist_[k]
  [ 5] __alloc_pages_[k]
  [ 6] __folio_alloc_[k]
  [ 7] vma_alloc_folio_[k]
  [ 8] do_anonymous_page_[k]
  [ 9] __handle_mm_fault_[k]
  [10] handle_mm_fault_[k]
  [11] do_user_addr_fault_[k]
  [12] exc_page_fault_[k]
  [13] asm_exc_page_fault_[k]
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f679c004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda.0x00007f679c004638.apply
  [29] som.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.lambda$buildTreeDepth$0
  [32] Storage$$Lambda.0x00007f679c004638.apply
  [33] som.Arrays.setAll
  [34] Storage.buildTreeDepth
  [35] Storage.lambda$buildTreeDepth$0
  [36] Storage$$Lambda.0x00007f679c004638.apply
  [37] som.Arrays.setAll
  [38] Storage.buildTreeDepth
  [39] Storage.benchmark
  [40] Benchmark.innerBenchmarkLoop
  [41] Run.measure
  [42] Run.doRuns
  [43] Run.runBenchmark
  [44] Harness.main

--- 20142800 ns (0.03%), 2 samples
  [ 0] _int_malloc
  [ 1] [unknown]
  [ 2] [unknown]

--- 20129931 ns (0.03%), 2 samples
  [ 0] G1CardSet::clear
  [ 1] HeapRegionRemSet::clear_locked
  [ 2] HeapRegion::hr_clear
  [ 3] G1CollectedHeap::free_region
  [ 4] FreeCSetClosure::do_heap_region
  [ 5] G1CollectedHeap::par_iterate_regions_array
  [ 6] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 7] G1BatchedTask::work
  [ 8] WorkerThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 20126285 ns (0.03%), 2 samples
  [ 0] TruncatedSeq::add
  [ 1] G1CollectedHeap::par_iterate_regions_array
  [ 2] G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 20116459 ns (0.03%), 2 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1BatchedTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 20002650 ns (0.03%), 2 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 20002181 ns (0.03%), 2 samples
  [ 0] Storage.lambda$buildTreeDepth$0
  [ 1] Storage$$Lambda.0x00007f679c004638.apply
  [ 2] som.Arrays.setAll
  [ 3] Storage.buildTreeDepth
  [ 4] Storage.lambda$buildTreeDepth$0
  [ 5] Storage$$Lambda.0x00007f679c004638.apply
  [ 6] som.Arrays.setAll
  [ 7] Storage.buildTreeDepth
  [ 8] Storage.lambda$buildTreeDepth$0
  [ 9] Storage$$Lambda.0x00007f679c004638.apply
  [10] som.Arrays.setAll
  [11] Storage.buildTreeDepth
  [12] Storage.benchmark
  [13] Benchmark.innerBenchmarkLoop
  [14] Run.measure
  [15] Run.doRuns
  [16] Run.runBenchmark
  [17] Harness.main

--- 20002158 ns (0.03%), 2 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.lambda$buildTreeDepth$0
  [ 7] Storage$$Lambda.0x00007f679c004638.apply
  [ 8] som.Arrays.setAll
  [ 9] Storage.buildTreeDepth
  [10] Storage.lambda$buildTreeDepth$0
  [11] Storage$$Lambda.0x00007f679c004638.apply
  [12] som.Arrays.setAll
  [13] Storage.buildTreeDepth
  [14] Storage.benchmark
  [15] Benchmark.innerBenchmarkLoop
  [16] Run.measure
  [17] Run.doRuns
  [18] Run.runBenchmark
  [19] Harness.main

--- 20001878 ns (0.03%), 2 samples
  [ 0] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 1] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 2] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 3] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 4] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 5] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 6] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 7] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 8] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [ 9] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [10] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [11] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [12] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [13] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [14] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [15] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [16] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [17] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [18] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [19] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [20] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [21] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [22] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [23] /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
  [24] JNIEnv_::CallNonvirtualObjectMethod
  [25] JVMCIEnv::call_HotSpotJVMCIRuntime_compileMethod
  [26] JVMCIRuntime::compile_method
  [27] CompileBroker::invoke_compiler_on_method
  [28] CompileBroker::compiler_thread_loop
  [29] JavaThread::thread_main_inner
  [30] Thread::call_run
  [31] thread_native_entry
  [32] start_thread

--- 20001860 ns (0.03%), 2 samples
  [ 0] ThreadLocalAllocBuffer::fill
  [ 1] MemAllocator::mem_allocate_inside_tlab_slow
  [ 2] MemAllocator::allocate
  [ 3] InstanceKlass::allocate_objArray
  [ 4] JVMCIRuntime::new_array_common
  [ 5] som.Random.next
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f679c004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda.0x00007f679c004638.apply
  [29] som.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.benchmark
  [32] Benchmark.innerBenchmarkLoop
  [33] Run.measure
  [34] Run.doRuns
  [35] Run.runBenchmark
  [36] Harness.main

--- 20000858 ns (0.03%), 2 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 20000365 ns (0.03%), 2 samples
  [ 0] G1Allocator::unsafe_max_tlab_alloc
  [ 1] MemAllocator::mem_allocate_inside_tlab_slow
  [ 2] MemAllocator::allocate
  [ 3] InstanceKlass::allocate_objArray
  [ 4] JVMCIRuntime::new_array_common
  [ 5] som.Random.next
  [ 6] Storage.buildTreeDepth
  [ 7] Storage.lambda$buildTreeDepth$0
  [ 8] Storage$$Lambda.0x00007f679c004638.apply
  [ 9] som.Arrays.setAll
  [10] Storage.buildTreeDepth
  [11] Storage.lambda$buildTreeDepth$0
  [12] Storage$$Lambda.0x00007f679c004638.apply
  [13] som.Arrays.setAll
  [14] Storage.buildTreeDepth
  [15] Storage.lambda$buildTreeDepth$0
  [16] Storage$$Lambda.0x00007f679c004638.apply
  [17] som.Arrays.setAll
  [18] Storage.buildTreeDepth
  [19] Storage.lambda$buildTreeDepth$0
  [20] Storage$$Lambda.0x00007f679c004638.apply
  [21] som.Arrays.setAll
  [22] Storage.buildTreeDepth
  [23] Storage.lambda$buildTreeDepth$0
  [24] Storage$$Lambda.0x00007f679c004638.apply
  [25] som.Arrays.setAll
  [26] Storage.buildTreeDepth
  [27] Storage.lambda$buildTreeDepth$0
  [28] Storage$$Lambda.0x00007f679c004638.apply
  [29] som.Arrays.setAll
  [30] Storage.buildTreeDepth
  [31] Storage.benchmark
  [32] Benchmark.innerBenchmarkLoop
  [33] Run.measure
  [34] Run.doRuns
  [35] Run.runBenchmark
  [36] Harness.main

--- 20000354 ns (0.03%), 2 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 20000077 ns (0.03%), 2 samples
  [ 0] som.Arrays.setAll
  [ 1] Storage.buildTreeDepth
  [ 2] Storage.lambda$buildTreeDepth$0
  [ 3] Storage$$Lambda.0x00007f679c004638.apply
  [ 4] som.Arrays.setAll
  [ 5] Storage.buildTreeDepth
  [ 6] Storage.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 19989640 ns (0.03%), 2 samples
  [ 0] Storage.buildTreeDepth
  [ 1] Storage.lambda$buildTreeDepth$0
  [ 2] Storage$$Lambda.0x00007f679c004638.apply
  [ 3] som.Arrays.setAll
  [ 4] Storage.buildTreeDepth
  [ 5] Storage.lambda$buildTreeDepth$0
  [ 6] Storage$$Lambda.0x00007f679c004638.apply
  [ 7] som.Arrays.setAll
  [ 8] Storage.buildTreeDepth
  [ 9] Storage.lambda$buildTreeDepth$0
  [10] Storage$$Lambda.0x00007f679c004638.apply
  [11] som.Arrays.setAll
  [12] Storage.buildTreeDepth
  [13] Storage.benchmark
  [14] Benchmark.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 10328343 ns (0.01%), 1 sample
  [ 0] get_task_mm_[k]
  [ 1] getrusage_[k]
  [ 2] __do_sys_getrusage_[k]
  [ 3] do_syscall_64_[k]
  [ 4] entry_SYSCALL_64_after_hwframe_[k]
  [ 5] getrusage
  [ 6] G1ServiceThread::run_task
  [ 7] G1ServiceThread::run_service
  [ 8] ConcurrentGCThread::run
  [ 9] Thread::call_run
  [10] thread_native_entry
  [11] start_thread

--- 10318712 ns (0.01%), 1 sample
  [ 0] syscall_exit_work_[k]
  [ 1] syscall_exit_to_user_mode_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __futex_abstimed_wait_common

--- 10120765 ns (0.01%), 1 sample
  [ 0] __audit_syscall_entry_[k]
  [ 1] syscall_trace_enter.constprop.0_[k]
  [ 2] do_syscall_64_[k]
  [ 3] entry_SYSCALL_64_after_hwframe_[k]
  [ 4] __futex_abstimed_wait_common

--- 10106862 ns (0.01%), 1 sample
  [ 0] __clock_gettime_2
  [ 1] CompositeElapsedCounterSource::now
  [ 2] G1EvacuateRegionsTask::start_work
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10105240 ns (0.01%), 1 sample
  [ 0] G1GCPhaseTimes::record_or_add_time_secs
  [ 1] G1RemSet::scan_heap_roots
  [ 2] G1EvacuateRegionsTask::scan_roots
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10104085 ns (0.01%), 1 sample
  [ 0] Thread::oops_do
  [ 1] Threads::possibly_parallel_oops_do
  [ 2] G1RootProcessor::process_java_roots
  [ 3] G1RootProcessor::evacuate_roots
  [ 4] G1EvacuateRegionsTask::scan_roots
  [ 5] G1EvacuateRegionsBaseTask::work
  [ 6] WorkerThread::run
  [ 7] Thread::call_run
  [ 8] thread_native_entry
  [ 9] start_thread

--- 10103796 ns (0.01%), 1 sample
  [ 0] G1DirtyCardQueueSet::concatenate_log_and_stats
  [ 1] G1PreEvacuateCollectionSetBatchTask::NonJavaThreadFlushLogs::FlushLogsClosure::do_thread
  [ 2] Threads::non_java_threads_do
  [ 3] G1BatchedTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10102950 ns (0.01%), 1 sample
  [ 0] G1EvacuateRegionsBaseTask::work
  [ 1] WorkerThread::run
  [ 2] Thread::call_run
  [ 3] thread_native_entry
  [ 4] start_thread

--- 10100671 ns (0.01%), 1 sample
  [ 0] NonJavaThread::Iterator::~Iterator
  [ 1] G1RootProcessor::process_java_roots
  [ 2] G1RootProcessor::evacuate_roots
  [ 3] G1EvacuateRegionsTask::scan_roots
  [ 4] G1EvacuateRegionsBaseTask::work
  [ 5] WorkerThread::run
  [ 6] Thread::call_run
  [ 7] thread_native_entry
  [ 8] start_thread

--- 10096888 ns (0.01%), 1 sample
  [ 0] CompositeElapsedCounterSource::seconds
  [ 1] G1RootProcessor::evacuate_roots
  [ 2] G1EvacuateRegionsTask::scan_roots
  [ 3] G1EvacuateRegionsBaseTask::work
  [ 4] WorkerThread::run
  [ 5] Thread::call_run
  [ 6] thread_native_entry
  [ 7] start_thread

--- 10096521 ns (0.01%), 1 sample
  [ 0] __x64_sys_futex_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common

--- 10096461 ns (0.01%), 1 sample
  [ 0] futex_q_lock_[k]
  [ 1] futex_wait_setup_[k]
  [ 2] __futex_wait_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___lll_lock_wait
  [ 9] TaskTerminator::offer_termination
  [10] G1ParEvacuateFollowersClosure::do_void
  [11] G1EvacuateRegionsTask::evacuate_live_objects
  [12] G1EvacuateRegionsBaseTask::work
  [13] WorkerThread::run
  [14] Thread::call_run
  [15] thread_native_entry
  [16] start_thread

--- 10095884 ns (0.01%), 1 sample
  [ 0] _raw_spin_unlock_irqrestore_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] sem_post@GLIBC_2.2.5
  [ 9] WorkerThreads::run_task
  [10] G1YoungCollector::pre_evacuate_collection_set
  [11] G1YoungCollector::collect
  [12] G1CollectedHeap::do_collection_pause_at_safepoint_helper
  [13] G1CollectedHeap::do_collection_pause_at_safepoint
  [14] VM_G1CollectForAllocation::doit
  [15] VM_Operation::evaluate
  [16] VMThread::evaluate_operation
  [17] VMThread::inner_execute
  [18] VMThread::run
  [19] Thread::call_run
  [20] thread_native_entry
  [21] start_thread

--- 10095438 ns (0.01%), 1 sample
  [ 0] HeapRegion::clear_cardtable
  [ 1] G1BatchedTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 10095404 ns (0.01%), 1 sample
  [ 0] native_queued_spin_lock_slowpath_[k]
  [ 1] _raw_spin_lock_[k]
  [ 2] futex_q_lock_[k]
  [ 3] futex_wait_setup_[k]
  [ 4] __futex_wait_[k]
  [ 5] futex_wait_[k]
  [ 6] do_futex_[k]
  [ 7] __x64_sys_futex_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __GI___lll_lock_wait
  [11] TaskTerminator::offer_termination
  [12] G1ParEvacuateFollowersClosure::do_void
  [13] G1EvacuateRegionsTask::evacuate_live_objects
  [14] G1EvacuateRegionsBaseTask::work
  [15] WorkerThread::run
  [16] Thread::call_run
  [17] thread_native_entry
  [18] start_thread

--- 10094958 ns (0.01%), 1 sample
  [ 0] G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
  [ 1] G1MergeHeapRootsTask::work
  [ 2] WorkerThread::run
  [ 3] Thread::call_run
  [ 4] thread_native_entry
  [ 5] start_thread

--- 10094877 ns (0.01%), 1 sample
  [ 0] __get_user_nocheck_4_[k]
  [ 1] futex_get_value_locked_[k]
  [ 2] futex_wait_setup_[k]
  [ 3] __futex_wait_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __GI___lll_lock_wait
  [10] TaskTerminator::offer_termination
  [11] G1ParEvacuateFollowersClosure::do_void
  [12] G1EvacuateRegionsTask::evacuate_live_objects
  [13] G1EvacuateRegionsBaseTask::work
  [14] WorkerThread::run
  [15] Thread::call_run
  [16] thread_native_entry
  [17] start_thread

--- 10093676 ns (0.01%), 1 sample
  [ 0] syscall_enter_from_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common

--- 10092584 ns (0.01%), 1 sample
  [ 0] __get_user_8_[k]
  [ 1] rseq_get_rseq_cs_[k]
  [ 2] rseq_ip_fixup_[k]
  [ 3] __rseq_handle_notify_resume_[k]
  [ 4] exit_to_user_mode_loop_[k]
  [ 5] exit_to_user_mode_prepare_[k]
  [ 6] syscall_exit_to_user_mode_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_common

          ns  percent  samples  top
  ----------  -------  -------  ---
 44240614129   58.60%     4424  Storage.buildTreeDepth
 21640273233   28.66%     2164  som.Arrays.setAll
  2870096110    3.80%      287  jdk.internal.misc.Unsafe.allocateInstance
  2259926015    2.99%      226  Storage$$Lambda.0x00007f679c004638.apply
  1240171991    1.64%      124  Storage.lambda$buildTreeDepth$0
  1240037236    1.64%      124  som.Random.next
   332653975    0.44%       33  G1ParScanThreadState::trim_queue_to_threshold
   160025093    0.21%       16  /home/hb478/repos/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
    70539459    0.09%        7  _raw_spin_unlock_irqrestore_[k]
    60541239    0.08%        6  HeapRegionManager::par_iterate
    50471769    0.07%        5  G1ScanCollectionSetRegionClosure::do_heap_region
    50363232    0.07%        5  __memset_avx2_unaligned_erms
    40361936    0.05%        4  G1CardSet::reset_table_scanner
    40361053    0.05%        4  G1ParScanThreadState::steal_and_trim_queue
    30274338    0.04%        3  HeapRegionClaimer::claim_region
    30252313    0.04%        3  __futex_abstimed_wait_common
    30001243    0.04%        3  ThreadLocalAllocBuffer::fill
    20211567    0.03%        2  __audit_syscall_entry_[k]
    20202918    0.03%        2  rseq_ip_fixup_[k]
    20195299    0.03%        2  G1ParCopyClosure<(G1Barrier)0, false>::do_oop
    20192246    0.03%        2  G1RemSet::prepare_region_for_scan
    20180643    0.03%        2  FreeListAllocator::reset
    20179090    0.03%        2  CompositeElapsedCounterSource::seconds
    20173616    0.03%        2  __GI___libc_malloc
    20172683    0.03%        2  G1FromCardCache::clear
    20171966    0.03%        2  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
    20155184    0.03%        2  __tls_get_addr
    20154014    0.03%        2  G1CardSetMemoryManager::memory_stats
    20142800    0.03%        2  _int_malloc
    20129931    0.03%        2  G1CardSet::clear
    20126285    0.03%        2  TruncatedSeq::add
    20021574    0.03%        2  get_mem_cgroup_from_mm_[k]
    20003570    0.03%        2  clear_page_erms_[k]
    20000365    0.03%        2  G1Allocator::unsafe_max_tlab_alloc
    19999826    0.03%        2  MemAllocator::mem_allocate_inside_tlab_slow
    10328343    0.01%        1  get_task_mm_[k]
    10318712    0.01%        1  syscall_exit_work_[k]
    10106862    0.01%        1  __clock_gettime_2
    10105240    0.01%        1  G1GCPhaseTimes::record_or_add_time_secs
    10104085    0.01%        1  Thread::oops_do
    10103796    0.01%        1  G1DirtyCardQueueSet::concatenate_log_and_stats
    10102950    0.01%        1  G1EvacuateRegionsBaseTask::work
    10100671    0.01%        1  NonJavaThread::Iterator::~Iterator
    10096521    0.01%        1  __x64_sys_futex_[k]
    10096461    0.01%        1  futex_q_lock_[k]
    10095438    0.01%        1  HeapRegion::clear_cardtable
    10095404    0.01%        1  native_queued_spin_lock_slowpath_[k]
    10094958    0.01%        1  G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
    10094877    0.01%        1  __get_user_nocheck_4_[k]
    10093676    0.01%        1  syscall_enter_from_user_mode_[k]
    10092584    0.01%        1  __get_user_8_[k]
    10092549    0.01%        1  __new_sem_wait_slow64.constprop.0
    10090637    0.01%        1  G1PLABAllocator::allocate_direct_or_new_plab
    10088617    0.01%        1  G1MonotonicArena::num_segments
    10087907    0.01%        1  Rdtsc::elapsed_counter
    10087260    0.01%        1  FreeCSetClosure::do_heap_region
    10086545    0.01%        1  G1GCPhaseTimes::record_or_add_thread_work_item
    10086377    0.01%        1  G1GCPhaseTimes::record_thread_work_item
    10085253    0.01%        1  __GI___pthread_mutex_unlock_usercnt
    10084468    0.01%        1  G1Policy::predict_eden_copy_time_ms
    10083786    0.01%        1  G1SurvRateGroup::finalize_predictions
    10083681    0.01%        1  exit_to_user_mode_loop_[k]
    10083530    0.01%        1  pthread_mutex_lock@@GLIBC_2.2.5
    10083184    0.01%        1  G1EvacuateRegionsTask::scan_roots
    10081920    0.01%        1  G1MonotonicArenaFreeMemoryTask::notify_new_stats
    10080367    0.01%        1  MemoryPool::record_peak_memory_usage
    10080275    0.01%        1  JNIHandleBlock::oops_do
    10080073    0.01%        1  ConcurrentGCThread::should_terminate
    10079304    0.01%        1  ClassLoaderDataGraph::roots_cld_do
    10079224    0.01%        1  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    10079091    0.01%        1  G1CodeRootSet::contains
    10079001    0.01%        1  metadata_Relocation::fix_metadata_relocation
    10077093    0.01%        1  ConstantPool::name_and_type_ref_index_at
    10074574    0.01%        1  schedule_[k]
    10073910    0.01%        1  __tls_get_addr@plt
    10071728    0.01%        1  G1SurvRateGroup::record_surviving_words
    10071594    0.01%        1  Thread::oops_do_no_frames
    10071537    0.01%        1  HandleArea::oops_do
    10071041    0.01%        1  _raw_spin_lock_[k]
    10069012    0.01%        1  G1ParScanThreadStateSet::flush_stats
    10068612    0.01%        1  syscall_trace_enter.constprop.0_[k]
    10068159    0.01%        1  SpinPause
    10065224    0.01%        1  __audit_syscall_exit_[k]
    10064378    0.01%        1  frame::oops_interpreted_do
    10014992    0.01%        1  Interpreter
    10011122    0.01%        1  HeapRegionRemSet::clear_fcc
    10011015    0.01%        1  JVMCIRuntime::new_instance_common
    10010570    0.01%        1  ObjArrayAllocator::initialize
    10009324    0.01%        1  java.lang.invoke.ClassSpecializer$Factory.findGetter
    10009242    0.01%        1  rmqueue_[k]
    10003906    0.01%        1  java.lang.String.getBytes
    10002743    0.01%        1  plist_del_[k]
    10002626    0.01%        1  __memchr_avx2
    10002232    0.01%        1  mm_account_fault_[k]
    10001480    0.01%        1  sun.nio.cs.US_ASCII$Encoder.encodeLoop
    10001287    0.01%        1  java.lang.Long.getChars
    10001286    0.01%        1  rebalance_domains_[k]
    10001038    0.01%        1  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 598116ul>::oop_access_barrier
    10000723    0.01%        1  java.lang.StringConcatHelper.prepend
    10000557    0.01%        1  /usr/lib64/libz.so.1.2.11
    10000389    0.01%        1  Storage.benchmark
    10000387    0.01%        1  fsnotify_[k]
    10000363    0.01%        1  HeapRegionManager::allocate_free_region
    10000360    0.01%        1  CollectedHeap::fill_with_object
     9999312    0.01%        1  Benchmark.innerBenchmarkLoop
     9998709    0.01%        1  JVMCIRuntime::new_array_common
     9998376    0.01%        1  InstanceKlass::array_klass
     9998057    0.01%        1  do_user_addr_fault_[k]
     9995109    0.01%        1  _raw_spin_unlock_irq_[k]
