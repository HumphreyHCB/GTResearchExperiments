FileName,SlowdownSpeed,Iteration,Benchmark,IsSlowdown,Method1,Percent1,Method2,Percent2,Method3,Percent3,Method4,Percent4,Method5,Percent5,Method6,Percent6,Method7,Percent7,Method8,Percent8,Method9,Percent9,Method10,Percent10,Method11,Percent11,Method12,Percent12,Method13,Percent13,Method14,Percent14,Method15,Percent15,Method16,Percent16,Method17,Percent17,Method18,Percent18,Method19,Percent19,Method20,Percent20
100_10_Bounce_NoSlowdown.xml,100,10,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.1,"Bounce.benchmark",25.7,"java.lang.Math.abs",4.1,"Bounce$Ball.<init>",3.6,"java.util.Arrays.setAll",1.4,"Bounce.lambda$benchmark$0",1.4,"som.Random.next",0.6,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Bounce_Slowdown.xml,100,10,Bounce,Slowdown,"Bounce$Ball.bounce",57.5,"Bounce.benchmark",34.9,"Bounce.lambda$benchmark$0",3.0,"java.lang.Math.abs",2.5,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.6,"som.Random.next",0.3,"Bounce.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_CD_NoSlowdown.xml,100,10,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.9,"cd.CollisionDetector.isInVoxel",12.8,"cd.RedBlackTree.put",10.7,"cd.CallSign.compareTo",8.1,"cd.RedBlackTree.findNode",6.5,"cd.Vector2D.compareTo",4.1,"cd.CallSign.compareTo",2.9,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.9,"cd.RedBlackTree.leftRotate",2.6,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.RedBlackTree.treeMinimum",2.4,"som.Vector.append",2.3,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree$Node.successor",2.1,"som.Vector.<init>",1.7,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.minus",1.2,"cd.Vector2D.<init>",1.1
100_10_CD_Slowdown.xml,100,10,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.3,"cd.CollisionDetector.isInVoxel",14.2,"cd.RedBlackTree.put",12.0,"cd.RedBlackTree.findNode",9.0,"cd.CallSign.compareTo",6.8,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareTo",2.9,"cd.RedBlackTree$Node.successor",2.5,"cd.CollisionDetector.recurse",2.3,"cd.Vector2D.compareNumbers",2.3,"cd.RedBlackTree.leftRotate",2.1,"cd.Vector2D.compareTo",1.9,"cd.CollisionDetector.voxelHash",1.9,"cd.RedBlackTree.treeMinimum",1.9,"cd.CollisionDetector.handleNewFrame",1.9,"cd.RedBlackTree.forEach",1.9,"som.Vector.<init>",1.8,"som.Vector.append",1.8,"cd.Vector2D.plus",1.3,"cd.Vector2D.minus",1.3
100_10_DeltaBlue_NoSlowdown.xml,100,10,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.3,"deltablue.Plan.execute",12.4,"som.Vector.forEach",7.1,"deltablue.EqualityConstraint.execute",6.3,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.1,"som.Vector.append",1.4,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.3,"java.util.Vector.add",1.3,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Variable.setWalkStrength",0.4
100_10_DeltaBlue_Slowdown.xml,100,10,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.3,"deltablue.Plan.execute",11.3,"deltablue.EqualityConstraint.execute",8.7,"som.Vector.forEach",5.8,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.4,"java.util.Vector.add",1.1,"som.Vector.append",0.9,"deltablue.AbstractConstraint.satisfy",0.8,"som.Vector.lambda$remove$0",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Variable.getValue",0.6,"som.Vector.<init>",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.projectionTest",0.4,"deltablue.BinaryConstraint.getOutput",0.4,"som.Vector.removeFirst",0.4,"deltablue.BinaryConstraint.isSatisfied",0.4
100_10_Havlak_NoSlowdown.xml,100,10,Havlak,NoSlowdown,"som.Vector.hasSome",35.9,"som.Vector.<init>",16.1,"som.Vector.append",6.4,"havlak.HavlakLoopFinder.findLoops",5.7,"som.Vector.forEach",4.3,"havlak.UnionFindNode.initNode",3.1,"som.Vector.at",2.5,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder$5.apply",1.8,"som.Dictionary.at",1.8,"havlak.HavlakLoopFinder.stepD",1.3,"havlak.HavlakLoopFinder$2.apply",1.2,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.0,"som.Vector.size",1.0,"havlak.HavlakLoopFinder.identifyEdges",0.9,"som.Dictionary.transferEntries",0.9,"som.Set.<init>",0.9,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"java.lang.Integer.valueOf",0.8
100_10_Havlak_Slowdown.xml,100,10,Havlak,Slowdown,"som.Vector.hasSome",30.1,"som.Vector.<init>",23.2,"som.Vector.append",11.8,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.at",3.7,"som.Vector.forEach",3.0,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.HavlakLoopFinder$5.apply",1.7,"havlak.UnionFindNode.initNode",1.4,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder$1.apply",0.8,"som.Dictionary.at",0.7,"som.Vector.size",0.6,"som.Set.<init>",0.5,"havlak.HavlakLoopFinder$2.apply",0.5,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"havlak.HavlakLoopFinder.identifyEdges",0.5,"som.Dictionary.atPut",0.5
100_10_Json_NoSlowdown.xml,100,10,Json,NoSlowdown,"java.lang.String.equals",35.3,"java.lang.Character.toString",21.0,"json.JsonPureStringParser.read",8.1,"java.lang.StringBuilder.toString",4.0,"java.lang.StringBuilder.append",3.3,"json.JsonPureStringParser.readStringInternal",3.1,"java.lang.String.charAt",2.7,"json.JsonPureStringParser.subStringFromTo",2.4,"som.Vector.append",2.2,"java.lang.String.hashCode",2.0,"som.Vector.<init>",1.9,"json.JsonPureStringParser.readDigit",1.7,"json.JsonPureStringParser.readValue",1.6,"java.lang.StringBuilder.<init>",1.5,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readArray",1.2,"json.JsonPureStringParser.endCapture",1.0,"json.JsonPureStringParser.isDigit",0.6,"json.JsonPureStringParser.readChar",0.6
100_10_Json_Slowdown.xml,100,10,Json,Slowdown,"java.lang.String.equals",35.8,"java.lang.Character.toString",19.0,"json.JsonPureStringParser.read",7.4,"java.lang.String.charAt",3.7,"json.JsonPureStringParser.subStringFromTo",3.5,"java.lang.StringBuilder.append",3.2,"java.lang.StringBuilder.toString",2.9,"json.JsonPureStringParser.readStringInternal",2.3,"json.JsonPureStringParser.isWhiteSpace",2.0,"som.Vector.append",2.0,"som.Vector.<init>",1.8,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.readArray",1.7,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readValue",1.5,"java.lang.String.length",1.3,"json.JsonPureStringParser.isDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.readChar",0.9
100_10_List_NoSlowdown.xml,100,10,List,NoSlowdown,"List$Element.getNext",46.0,"List.isShorterThan",43.8,"List.tail",9.4,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_List_Slowdown.xml,100,10,List,Slowdown,"List.isShorterThan",64.5,"List$Element.getNext",26.1,"List.tail",9.1,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Mandelbrot_NoSlowdown.xml,100,10,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Mandelbrot_Slowdown.xml,100,10,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_NBody_NoSlowdown.xml,100,10,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.6,"nbody.Body.setVX",11.9,"nbody.Body.setVY",3.7,"nbody.Body.getVX",2.8,"nbody.Body.getX",2.6,"nbody.Body.getZ",2.5,"nbody.Body.getVY",1.9,"nbody.Body.setVZ",1.9,"nbody.Body.getY",1.8,"nbody.Body.getVZ",1.7,"java.lang.Math.sqrt",1.6,"nbody.Body.setZ",0.8,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"nbody.Body.getMass",0.1,"Run.printResult",0.0,"Harness.processArguments",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0
100_10_NBody_Slowdown.xml,100,10,NBody,Slowdown,"nbody.NBodySystem.advance",33.2,"NBody.innerBenchmarkLoop",15.0,"nbody.Body.getX",13.6,"nbody.Body.getZ",12.9,"nbody.Body.getY",12.4,"nbody.Body.setVX",5.4,"nbody.Body.setVY",1.6,"nbody.Body.getVX",1.6,"java.lang.Math.sqrt",1.3,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.7,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.4,"nbody.Body.setZ",0.2,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
100_10_Permute_NoSlowdown.xml,100,10,Permute,NoSlowdown,"Permute.permute",69.6,"Permute.swap",30.3,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Permute_Slowdown.xml,100,10,Permute,Slowdown,"Permute.permute",66.0,"Permute.swap",33.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Harness.processArguments",0.0,"Permute.verifyResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Queens_NoSlowdown.xml,100,10,Queens,NoSlowdown,"Queens.getRowColumn",54.2,"Queens.placeQueen",32.1,"Queens.setRowColumn",10.9,"Queens.queens",1.6,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.1,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Queens_Slowdown.xml,100,10,Queens,Slowdown,"Queens.getRowColumn",60.0,"Queens.placeQueen",23.6,"Queens.setRowColumn",14.9,"Queens.queens",1.0,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.2,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Richards_NoSlowdown.xml,100,10,Richards,NoSlowdown,"richards.Scheduler.schedule",25.1,"richards.TaskControlBlock.runTask",18.4,"richards.Scheduler$HandlerProcessFunction.apply",9.7,"richards.TaskState.isTaskHoldingOrWaiting",8.2,"richards.Scheduler$DeviceProcessFunction.apply",4.9,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler$IdleProcessFunction.apply",2.8,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Scheduler.findTask",2.3,"richards.Packet.setLink",2.2,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.RBObject.append",1.7,"richards.TaskControlBlock.getIdentity",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.TaskControlBlock.getLink",1.4,"richards.IdleTaskDataRecord.setControl",1.3,"richards.Scheduler.queuePacket",1.3,"richards.TaskState.setTaskHolding",1.3,"richards.Packet.getIdentity",0.7,"richards.HandlerTaskDataRecord.deviceIn",0.7
100_10_Richards_Slowdown.xml,100,10,Richards,Slowdown,"richards.Scheduler.schedule",27.6,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",7.0,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Scheduler.findTask",5.0,"richards.Packet.setLink",4.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.3,"richards.Scheduler$IdleProcessFunction.apply",2.4,"richards.TaskState.isWaitingWithPacket",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.TaskControlBlock.getIdentity",1.5,"richards.DeviceTaskDataRecord.setPending",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.Scheduler.queuePacket",1.1,"richards.IdleTaskDataRecord.setControl",1.0,"richards.Packet.getDatum",0.9,"richards.TaskState.setTaskHolding",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.RBObject.append",0.8
100_10_Sieve_NoSlowdown.xml,100,10,Sieve,NoSlowdown,"Sieve.sieve",88.4,"java.util.Arrays.fill",10.3,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Sieve_Slowdown.xml,100,10,Sieve,Slowdown,"Sieve.sieve",90.9,"java.util.Arrays.fill",8.1,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Storage_NoSlowdown.xml,100,10,Storage,NoSlowdown,"Storage.buildTreeDepth",60.2,"som.Arrays.setAll",35.6,"som.Random.next",2.3,"Storage.lambda$buildTreeDepth$0",1.8,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Run.runBenchmark",0.0,"Storage.verifyResult",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Storage_Slowdown.xml,100,10,Storage,Slowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",34.6,"som.Random.next",3.4,"Storage.lambda$buildTreeDepth$0",1.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Towers_NoSlowdown.xml,100,10,Towers,NoSlowdown,"Towers.popDiskFrom",31.8,"Towers.moveDisks",20.9,"Towers.pushDisk",18.9,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",7.4,"Towers$TowersDisk.getSize",3.4,"Towers.benchmark",0.1,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_10_Towers_Slowdown.xml,100,10,Towers,Slowdown,"Towers.popDiskFrom",33.8,"Towers.moveDisks",20.0,"Towers$TowersDisk.setNext",18.4,"Towers.pushDisk",17.9,"Towers.moveTopDisk",7.9,"Towers$TowersDisk.getSize",1.8,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Towers.buildTowerAt",0.0,"Towers.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.runBenchmark",0.0,"Towers.verifyResult",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Bounce_NoSlowdown.xml,100,1,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.1,"Bounce.benchmark",25.9,"Bounce$Ball.<init>",3.8,"java.lang.Math.abs",3.8,"java.util.Arrays.setAll",1.5,"Bounce.lambda$benchmark$0",1.0,"som.Random.next",0.9,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Bounce_Slowdown.xml,100,1,Bounce,Slowdown,"Bounce$Ball.bounce",55.8,"Bounce.benchmark",35.9,"Bounce.lambda$benchmark$0",3.2,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.5,"java.util.Arrays.setAll",0.7,"som.Random.next",0.4,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.getSuiteFromName",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0
100_1_CD_NoSlowdown.xml,100,1,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.8,"cd.CollisionDetector.isInVoxel",13.6,"cd.RedBlackTree.put",10.7,"cd.CallSign.compareTo",8.2,"cd.RedBlackTree.findNode",6.7,"cd.Vector2D.compareTo",3.4,"cd.Vector2D.compareTo",3.2,"cd.Vector2D.compareNumbers",3.0,"cd.RedBlackTree.treeMinimum",2.9,"cd.CallSign.compareTo",2.8,"som.Vector.append",2.7,"cd.CollisionDetector.handleNewFrame",2.5,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.recurse",2.3,"cd.RedBlackTree.leftRotate",2.1,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.<init>",1.6,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.plus",1.1,"cd.Vector2D.<init>",1.1
100_1_CD_Slowdown.xml,100,1,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.8,"cd.CollisionDetector.isInVoxel",13.4,"cd.RedBlackTree.put",11.5,"cd.RedBlackTree.findNode",9.0,"cd.CallSign.compareTo",7.1,"cd.CallSign.compareTo",3.3,"cd.RedBlackTree.leftRotate",2.6,"cd.RedBlackTree$Node.successor",2.5,"cd.Vector2D.compareNumbers",2.5,"cd.Vector2D.compareTo",2.5,"cd.RedBlackTree.forEach",2.2,"cd.CollisionDetector.recurse",2.1,"cd.CollisionDetector.voxelHash",2.0,"cd.RedBlackTree.treeMinimum",2.0,"cd.CollisionDetector.handleNewFrame",1.9,"cd.Vector2D.compareTo",1.7,"som.Vector.append",1.7,"som.Vector.<init>",1.6,"cd.Vector2D.plus",1.3,"cd.Vector2D.minus",1.2
100_1_DeltaBlue_NoSlowdown.xml,100,1,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.9,"deltablue.Plan.execute",12.6,"som.Vector.forEach",6.9,"deltablue.EqualityConstraint.execute",6.6,"deltablue.ScaleConstraint.execute",4.3,"deltablue.Planner.addPropagate",2.3,"som.Vector.append",1.3,"java.util.Vector.add",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.1,"deltablue.AbstractConstraint.satisfy",1.1,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.removePropagateFrom",0.4,"deltablue.Variable.setWalkStrength",0.4,"deltablue.AbstractConstraint.inputsKnown",0.4
100_1_DeltaBlue_Slowdown.xml,100,1,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",63.3,"deltablue.Plan.execute",8.6,"deltablue.EqualityConstraint.execute",7.4,"som.Vector.forEach",5.3,"deltablue.ScaleConstraint.execute",1.9,"deltablue.Planner.addPropagate",1.3,"som.Vector.append",1.1,"java.util.Vector.add",1.1,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Variable.getValue",0.7,"deltablue.Planner.makePlan",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.AbstractConstraint.satisfy",0.6,"som.Vector.lambda$remove$0",0.5,"deltablue.BinaryConstraint.getOutput",0.4,"deltablue.Planner.removePropagateFrom",0.4,"som.Vector.removeFirst",0.4,"deltablue.Planner.projectionTest",0.4,"som.Vector.<init>",0.4,"deltablue.Planner.addConstraintsConsumingTo",0.3
100_1_Havlak_NoSlowdown.xml,100,1,Havlak,NoSlowdown,"som.Vector.hasSome",31.7,"som.Vector.<init>",19.9,"havlak.HavlakLoopFinder.findLoops",6.1,"som.Vector.append",6.1,"som.Vector.forEach",4.4,"havlak.UnionFindNode.initNode",3.8,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.stepD",2.0,"havlak.HavlakLoopFinder.doDFS",1.9,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.4,"som.Vector.size",1.3,"som.Dictionary.at",1.3,"havlak.HavlakLoopFinder$2.apply",1.2,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.9,"som.Set.<init>",0.9,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder.isAncestor",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.6
100_1_Havlak_Slowdown.xml,100,1,Havlak,Slowdown,"som.Vector.hasSome",28.9,"som.Vector.<init>",23.3,"som.Vector.append",11.3,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.at",3.7,"som.Vector.forEach",2.9,"havlak.HavlakLoopFinder$5.apply",2.0,"havlak.HavlakLoopFinder.doDFS",1.9,"havlak.UnionFindNode.initNode",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.UnionFindNode.findSet",1.2,"havlak.HavlakLoopFinder$1.apply",1.0,"havlak.UnionFindNode.getBb",0.9,"som.Vector.size",0.8,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"som.Set.<init>",0.6,"java.lang.Integer.valueOf",0.5
100_1_Json_NoSlowdown.xml,100,1,Json,NoSlowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",18.4,"json.JsonPureStringParser.read",8.8,"java.lang.StringBuilder.toString",3.2,"java.lang.StringBuilder.append",3.1,"java.lang.String.charAt",2.8,"json.JsonPureStringParser.readStringInternal",2.7,"java.lang.String.hashCode",2.4,"json.JsonPureStringParser.subStringFromTo",2.4,"som.Vector.<init>",2.4,"som.Vector.append",2.4,"json.JsonPureStringParser.readDigit",1.7,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.readArray",1.6,"json.JsonPureStringParser.readValue",1.4,"json.JsonPureStringParser.endCapture",1.1,"json.JsonPureStringParser.skipWhiteSpace",0.8,"json.JsonPureStringParser.readChar",0.6,"json.JsonPureStringParser.isDigit",0.6
100_1_Json_Slowdown.xml,100,1,Json,Slowdown,"java.lang.String.equals",36.2,"java.lang.Character.toString",19.0,"json.JsonPureStringParser.read",6.4,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.5,"java.lang.StringBuilder.append",2.9,"java.lang.StringBuilder.toString",2.4,"json.JsonPureStringParser.readStringInternal",2.2,"som.Vector.<init>",2.1,"json.JsonPureStringParser.isWhiteSpace",2.0,"som.Vector.append",1.9,"json.JsonPureStringParser.readArray",1.9,"java.lang.String.hashCode",1.8,"java.lang.StringBuilder.<init>",1.8,"json.JsonPureStringParser.readValue",1.8,"json.JsonPureStringParser.skipWhiteSpace",1.5,"json.JsonPureStringParser.isDigit",1.2,"java.lang.String.length",1.1,"json.JsonObject$HashIndexTable.<init>",1.0,"json.JsonPureStringParser.endCapture",1.0
100_1_List_NoSlowdown.xml,100,1,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",44.0,"List.tail",9.3,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_List_Slowdown.xml,100,1,List,Slowdown,"List.isShorterThan",65.0,"List$Element.getNext",25.8,"List.tail",8.8,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Mandelbrot_NoSlowdown.xml,100,1,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Mandelbrot_Slowdown.xml,100,1,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.getSuiteFromName",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_NBody_NoSlowdown.xml,100,1,NBody,NoSlowdown,"nbody.NBodySystem.advance",67.2,"nbody.Body.setVX",11.9,"nbody.Body.setVY",3.3,"nbody.Body.getVX",2.6,"nbody.Body.getX",2.2,"nbody.Body.getZ",2.2,"nbody.Body.getVZ",2.0,"nbody.Body.getY",1.9,"nbody.Body.getVY",1.8,"java.lang.Math.sqrt",1.6,"nbody.Body.setVZ",1.5,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.5,"nbody.Body.getMass",0.1,"java.lang.ClassLoader.loadClass",0.0,"Run.printResult",0.0,"",0,"",0,"",0
100_1_NBody_Slowdown.xml,100,1,NBody,Slowdown,"nbody.NBodySystem.advance",32.5,"NBody.innerBenchmarkLoop",14.9,"nbody.Body.getX",13.9,"nbody.Body.getZ",13.8,"nbody.Body.getY",12.2,"nbody.Body.setVX",5.2,"nbody.Body.getVX",1.6,"java.lang.Math.sqrt",1.5,"nbody.Body.setVY",1.4,"nbody.Body.getVZ",0.8,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.4,"nbody.Body.setX",0.4,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
100_1_Permute_NoSlowdown.xml,100,1,Permute,NoSlowdown,"Permute.permute",68.8,"Permute.swap",30.9,"Permute.benchmark",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Permute_Slowdown.xml,100,1,Permute,Slowdown,"Permute.permute",65.8,"Permute.swap",34.1,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Queens_NoSlowdown.xml,100,1,Queens,NoSlowdown,"Queens.getRowColumn",54.0,"Queens.placeQueen",32.6,"Queens.setRowColumn",10.8,"Queens.queens",1.9,"java.util.Arrays.fill",0.3,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Queens.verifyResult",0.1,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Queens_Slowdown.xml,100,1,Queens,Slowdown,"Queens.getRowColumn",59.1,"Queens.placeQueen",23.7,"Queens.setRowColumn",15.7,"Queens.queens",0.9,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Richards_NoSlowdown.xml,100,1,Richards,NoSlowdown,"richards.Scheduler.schedule",25.2,"richards.TaskControlBlock.runTask",17.5,"richards.Scheduler$HandlerProcessFunction.apply",9.4,"richards.TaskState.isTaskHoldingOrWaiting",8.2,"richards.Scheduler$DeviceProcessFunction.apply",4.8,"richards.TaskControlBlock.addInputAndCheckPriority",4.4,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.5,"richards.TaskState.isWaitingWithPacket",2.3,"richards.Packet.setLink",2.2,"richards.TaskControlBlock.getIdentity",1.8,"richards.DeviceTaskDataRecord.setPending",1.5,"richards.IdleTaskDataRecord.setControl",1.4,"richards.RBObject.append",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.Scheduler.queuePacket",1.4,"richards.TaskControlBlock.getLink",1.3,"richards.TaskState.setTaskHolding",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",1.0
100_1_Richards_Slowdown.xml,100,1,Richards,Slowdown,"richards.Scheduler.schedule",27.5,"richards.TaskControlBlock.runTask",18.9,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",5.9,"richards.Scheduler$DeviceProcessFunction.apply",5.6,"richards.Scheduler.findTask",4.6,"richards.Packet.setLink",4.0,"richards.TaskControlBlock.addInputAndCheckPriority",2.8,"richards.Scheduler$IdleProcessFunction.apply",2.5,"richards.TaskState.isWaitingWithPacket",2.0,"richards.TaskControlBlock.getIdentity",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.IdleTaskDataRecord.setControl",1.1,"richards.Scheduler.queuePacket",1.0,"richards.RBObject.append",0.9,"richards.Packet.getDatum",0.9,"richards.TaskState.setTaskHolding",0.8,"richards.Packet.getIdentity",0.7
100_1_Sieve_NoSlowdown.xml,100,1,Sieve,NoSlowdown,"Sieve.sieve",88.6,"java.util.Arrays.fill",10.2,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Sieve.verifyResult",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Sieve_Slowdown.xml,100,1,Sieve,Slowdown,"Sieve.sieve",90.9,"java.util.Arrays.fill",8.2,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Sieve.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Storage_NoSlowdown.xml,100,1,Storage,NoSlowdown,"Storage.buildTreeDepth",60.9,"som.Arrays.setAll",35.3,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.7,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Storage_Slowdown.xml,100,1,Storage,Slowdown,"Storage.buildTreeDepth",61.3,"som.Arrays.setAll",34.5,"som.Random.next",3.5,"Storage.lambda$buildTreeDepth$0",0.7,"java.lang.ClassLoader.loadClass",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Towers_NoSlowdown.xml,100,1,Towers,NoSlowdown,"Towers.popDiskFrom",32.2,"Towers.moveDisks",21.1,"Towers.pushDisk",18.5,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",7.1,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.0,"Towers.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_1_Towers_Slowdown.xml,100,1,Towers,Slowdown,"Towers.popDiskFrom",33.9,"Towers.moveDisks",20.3,"Towers$TowersDisk.setNext",18.0,"Towers.pushDisk",17.7,"Towers.moveTopDisk",8.0,"Towers$TowersDisk.getSize",1.9,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Towers.benchmark",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Bounce_NoSlowdown.xml,100,2,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.9,"Bounce.benchmark",25.4,"java.lang.Math.abs",3.8,"Bounce$Ball.<init>",3.3,"Bounce.lambda$benchmark$0",1.4,"java.util.Arrays.setAll",1.2,"som.Random.next",0.9,"Bounce.verifyResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Bounce_Slowdown.xml,100,2,Bounce,Slowdown,"Bounce$Ball.bounce",56.4,"Bounce.benchmark",35.3,"Bounce.lambda$benchmark$0",3.1,"java.lang.Math.abs",2.7,"Bounce$Ball.<init>",1.4,"java.util.Arrays.setAll",0.7,"som.Random.next",0.4,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_CD_NoSlowdown.xml,100,2,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",12.7,"cd.RedBlackTree.put",10.8,"cd.CallSign.compareTo",7.7,"cd.RedBlackTree.findNode",7.2,"cd.Vector2D.compareTo",3.7,"cd.RedBlackTree.treeMinimum",2.9,"cd.Vector2D.compareTo",2.9,"cd.CallSign.compareTo",2.8,"cd.Vector2D.compareNumbers",2.7,"cd.CollisionDetector.handleNewFrame",2.7,"cd.RedBlackTree.forEach",2.6,"som.Vector.append",2.6,"cd.RedBlackTree.leftRotate",2.5,"cd.CollisionDetector.recurse",2.3,"som.Vector.<init>",1.9,"cd.RedBlackTree$Node.successor",1.7,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.plus",1.3,"cd.RedBlackTree.get",1.1
100_2_CD_Slowdown.xml,100,2,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.8,"cd.CollisionDetector.isInVoxel",13.4,"cd.RedBlackTree.put",11.6,"cd.RedBlackTree.findNode",9.1,"cd.CallSign.compareTo",6.6,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.6,"cd.RedBlackTree$Node.successor",2.4,"cd.CollisionDetector.voxelHash",2.3,"cd.Vector2D.compareNumbers",2.3,"cd.RedBlackTree.leftRotate",2.3,"cd.CollisionDetector.handleNewFrame",2.3,"cd.RedBlackTree.treeMinimum",2.3,"cd.RedBlackTree.forEach",2.2,"cd.CollisionDetector.recurse",2.1,"cd.Vector2D.compareTo",1.9,"som.Vector.append",1.7,"som.Vector.<init>",1.6,"cd.Vector2D.plus",1.4,"cd.RedBlackTree.get",1.2
100_2_DeltaBlue_NoSlowdown.xml,100,2,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.3,"deltablue.Plan.execute",10.3,"som.Vector.forEach",6.5,"deltablue.EqualityConstraint.execute",5.2,"deltablue.ScaleConstraint.execute",2.4,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.6,"java.util.Vector.add",1.5,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"som.Vector.<init>",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4
100_2_DeltaBlue_Slowdown.xml,100,2,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.3,"deltablue.Plan.execute",10.9,"deltablue.EqualityConstraint.execute",8.7,"som.Vector.forEach",5.5,"deltablue.ScaleConstraint.execute",2.5,"deltablue.Planner.addPropagate",1.4,"java.util.Vector.add",1.0,"som.Vector.append",0.9,"deltablue.AbstractConstraint.satisfy",0.9,"som.Vector.lambda$remove$0",0.8,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Variable.getValue",0.6,"som.Vector.<init>",0.5,"deltablue.Planner.projectionTest",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.BinaryConstraint.getOutput",0.4,"deltablue.BinaryConstraint.isSatisfied",0.4,"som.Vector.removeFirst",0.4
100_2_Havlak_NoSlowdown.xml,100,2,Havlak,NoSlowdown,"som.Vector.hasSome",31.6,"som.Vector.<init>",21.0,"som.Vector.append",5.8,"havlak.HavlakLoopFinder.findLoops",5.8,"som.Vector.forEach",4.1,"havlak.UnionFindNode.initNode",3.9,"som.Vector.at",2.4,"havlak.HavlakLoopFinder.stepD",2.2,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.HavlakLoopFinder.doDFS",1.7,"som.Vector.size",1.3,"som.Dictionary.at",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.7,"havlak.LoopStructureGraph$2.apply",0.7,"som.Dictionary.atPut",0.7
100_2_Havlak_Slowdown.xml,100,2,Havlak,Slowdown,"som.Vector.hasSome",29.1,"som.Vector.<init>",23.1,"som.Vector.append",11.5,"havlak.HavlakLoopFinder.findLoops",7.5,"som.Vector.at",3.4,"som.Vector.forEach",3.1,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder$5.apply",2.0,"havlak.UnionFindNode.initNode",1.9,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.getBb",1.0,"havlak.HavlakLoopFinder$1.apply",0.9,"som.Vector.size",0.8,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"som.Set.<init>",0.5,"havlak.HavlakLoopFinder.identifyEdges",0.5,"havlak.HavlakLoopFinder$2.apply",0.5
100_2_Json_NoSlowdown.xml,100,2,Json,NoSlowdown,"java.lang.String.equals",37.5,"java.lang.Character.toString",17.5,"json.JsonPureStringParser.read",8.0,"java.lang.StringBuilder.append",3.8,"java.lang.StringBuilder.toString",3.3,"som.Vector.append",2.8,"java.lang.String.charAt",2.7,"java.lang.String.hashCode",2.7,"json.JsonPureStringParser.readStringInternal",2.6,"json.JsonPureStringParser.subStringFromTo",2.2,"json.JsonPureStringParser.readArray",1.9,"som.Vector.<init>",1.8,"json.JsonPureStringParser.isWhiteSpace",1.7,"json.JsonPureStringParser.endCapture",1.7,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.readDigit",1.5,"java.lang.StringBuilder.<init>",1.4,"json.JsonPureStringParser.skipWhiteSpace",0.9,"json.JsonPureStringParser.readChar",0.7,"json.JsonPureStringParser.isDigit",0.6
100_2_Json_Slowdown.xml,100,2,Json,Slowdown,"java.lang.String.equals",35.9,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",7.6,"java.lang.String.charAt",3.9,"java.lang.StringBuilder.toString",3.3,"java.lang.StringBuilder.append",3.1,"json.JsonPureStringParser.subStringFromTo",2.7,"som.Vector.<init>",2.1,"som.Vector.append",1.9,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.readStringInternal",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.skipWhiteSpace",1.6,"java.lang.String.hashCode",1.5,"json.JsonPureStringParser.isDigit",1.4,"java.lang.StringBuilder.<init>",1.4,"json.JsonPureStringParser.endCapture",1.1,"json.JsonObject$HashIndexTable.<init>",1.1,"json.JsonPureStringParser.readDigit",1.0
100_2_List_NoSlowdown.xml,100,2,List,NoSlowdown,"List$Element.getNext",45.4,"List.isShorterThan",44.2,"List.tail",9.5,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_List_Slowdown.xml,100,2,List,Slowdown,"List.isShorterThan",64.7,"List$Element.getNext",26.0,"List.tail",8.9,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Mandelbrot_NoSlowdown.xml,100,2,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.runBenchmark",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Mandelbrot_Slowdown.xml,100,2,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_NBody_NoSlowdown.xml,100,2,NBody,NoSlowdown,"nbody.NBodySystem.advance",64.9,"nbody.Body.setVX",13.4,"nbody.Body.setVY",3.6,"nbody.Body.getVX",2.9,"nbody.Body.getX",2.4,"nbody.Body.getZ",2.2,"nbody.Body.getVZ",2.0,"nbody.Body.getY",2.0,"nbody.Body.getVY",1.5,"java.lang.Math.sqrt",1.4,"nbody.Body.setVZ",1.3,"nbody.Body.setZ",0.9,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.5,"nbody.Body.getMass",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0
100_2_NBody_Slowdown.xml,100,2,NBody,Slowdown,"nbody.NBodySystem.advance",33.7,"NBody.innerBenchmarkLoop",14.6,"nbody.Body.getX",13.5,"nbody.Body.getZ",13.3,"nbody.Body.getY",11.9,"nbody.Body.setVX",5.5,"nbody.Body.getVX",1.6,"nbody.Body.setVY",1.4,"java.lang.Math.sqrt",1.3,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.7,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.5,"nbody.Body.setZ",0.4,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.reportBenchmark",0.0,"nbody.Body.setY",0.0
100_2_Permute_NoSlowdown.xml,100,2,Permute,NoSlowdown,"Permute.permute",70.6,"Permute.swap",29.2,"Run.printResult",0.1,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Permute_Slowdown.xml,100,2,Permute,Slowdown,"Permute.permute",65.7,"Permute.swap",34.2,"Permute.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Queens_NoSlowdown.xml,100,2,Queens,NoSlowdown,"Queens.getRowColumn",55.1,"Queens.placeQueen",32.2,"Queens.setRowColumn",10.1,"Queens.queens",1.6,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.2,"Queens.verifyResult",0.1,"Run.reportBenchmark",0.1,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Queens_Slowdown.xml,100,2,Queens,Slowdown,"Queens.getRowColumn",58.7,"Queens.placeQueen",23.6,"Queens.setRowColumn",16.0,"Queens.queens",1.1,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.2,"Run.printResult",0.1,"java.util.Arrays.fill",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Richards_NoSlowdown.xml,100,2,Richards,NoSlowdown,"richards.Scheduler.schedule",24.4,"richards.TaskControlBlock.runTask",17.3,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",7.4,"richards.Scheduler$DeviceProcessFunction.apply",4.9,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler$IdleProcessFunction.apply",2.8,"richards.Scheduler.findTask",2.8,"richards.TaskState.isWaitingWithPacket",2.5,"richards.TaskControlBlock.getIdentity",2.1,"richards.Packet.setLink",2.0,"richards.DeviceTaskDataRecord.setPending",1.9,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.RBObject.append",1.8,"richards.Scheduler.queuePacket",1.7,"richards.TaskState.setTaskHolding",1.5,"richards.TaskControlBlock.getLink",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.IdleTaskDataRecord.setControl",1.3,"richards.HandlerTaskDataRecord.deviceInAdd",1.0
100_2_Richards_Slowdown.xml,100,2,Richards,Slowdown,"richards.Scheduler.schedule",26.4,"richards.TaskControlBlock.runTask",18.7,"richards.Scheduler$HandlerProcessFunction.apply",9.0,"richards.TaskState.isTaskHoldingOrWaiting",6.0,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.Scheduler.findTask",4.8,"richards.Packet.setLink",3.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.1,"richards.Scheduler$IdleProcessFunction.apply",2.6,"richards.TaskState.isWaitingWithPacket",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.TaskControlBlock.getIdentity",1.7,"richards.DeviceTaskDataRecord.setPending",1.5,"richards.IdleTaskDataRecord.setControl",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.Scheduler.queuePacket",1.1,"richards.RBObject.append",0.9,"richards.Packet.getDatum",0.9,"richards.TaskState.setTaskHolding",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.7
100_2_Sieve_NoSlowdown.xml,100,2,Sieve,NoSlowdown,"Sieve.sieve",88.9,"java.util.Arrays.fill",9.8,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.getSuiteFromName",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Sieve_Slowdown.xml,100,2,Sieve,Slowdown,"Sieve.sieve",91.1,"java.util.Arrays.fill",8.0,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Storage_NoSlowdown.xml,100,2,Storage,NoSlowdown,"Storage.buildTreeDepth",59.8,"som.Arrays.setAll",36.3,"som.Random.next",2.1,"Storage.lambda$buildTreeDepth$0",1.7,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Storage_Slowdown.xml,100,2,Storage,Slowdown,"Storage.buildTreeDepth",60.7,"som.Arrays.setAll",35.0,"som.Random.next",3.3,"Storage.lambda$buildTreeDepth$0",0.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Towers_NoSlowdown.xml,100,2,Towers,NoSlowdown,"Towers.popDiskFrom",31.2,"Towers.moveDisks",21.6,"Towers.pushDisk",19.6,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",6.7,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_2_Towers_Slowdown.xml,100,2,Towers,Slowdown,"Towers.popDiskFrom",33.4,"Towers.moveDisks",20.0,"Towers$TowersDisk.setNext",18.3,"Towers.pushDisk",18.2,"Towers.moveTopDisk",8.1,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.0,"Towers.benchmark",0.0,"Run.printResult",0.0,"Towers.verifyResult",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Bounce_NoSlowdown.xml,100,3,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.2,"Bounce.benchmark",25.7,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.7,"Bounce.lambda$benchmark$0",1.1,"java.util.Arrays.setAll",1.0,"som.Random.next",0.8,"Bounce.verifyResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Bounce_Slowdown.xml,100,3,Bounce,Slowdown,"Bounce$Ball.bounce",56.7,"Bounce.benchmark",35.5,"Bounce.lambda$benchmark$0",2.9,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.7,"som.Random.next",0.4,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Bounce.verifyResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0
100_3_CD_NoSlowdown.xml,100,3,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.9,"cd.CollisionDetector.isInVoxel",13.5,"cd.RedBlackTree.put",10.3,"cd.CallSign.compareTo",7.9,"cd.RedBlackTree.findNode",6.9,"cd.Vector2D.compareTo",3.8,"cd.RedBlackTree.treeMinimum",3.3,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareNumbers",3.0,"cd.CollisionDetector.handleNewFrame",2.9,"som.Vector.append",2.7,"cd.Vector2D.compareTo",2.6,"cd.CollisionDetector.recurse",2.4,"cd.RedBlackTree.leftRotate",2.4,"cd.RedBlackTree.forEach",2.1,"som.Vector.<init>",1.8,"cd.RedBlackTree$Node.successor",1.8,"cd.CollisionDetector.voxelHash",1.4,"cd.CollisionDetector.putIntoMap",0.9,"cd.Vector2D.<init>",0.9
100_3_CD_Slowdown.xml,100,3,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.1,"cd.CollisionDetector.isInVoxel",14.3,"cd.RedBlackTree.put",11.2,"cd.RedBlackTree.findNode",9.2,"cd.CallSign.compareTo",6.6,"cd.CallSign.compareTo",3.2,"cd.Vector2D.compareTo",2.8,"cd.Vector2D.compareNumbers",2.6,"cd.RedBlackTree$Node.successor",2.5,"cd.RedBlackTree.leftRotate",2.5,"cd.CollisionDetector.handleNewFrame",2.2,"cd.CollisionDetector.recurse",2.2,"cd.CollisionDetector.voxelHash",2.0,"cd.RedBlackTree.forEach",1.9,"cd.RedBlackTree.treeMinimum",1.8,"cd.Vector2D.compareTo",1.7,"som.Vector.append",1.7,"som.Vector.<init>",1.6,"cd.Vector2D.minus",1.2,"cd.Vector2D.<init>",1.1
100_3_DeltaBlue_NoSlowdown.xml,100,3,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.2,"deltablue.Plan.execute",10.3,"som.Vector.forEach",6.2,"deltablue.EqualityConstraint.execute",4.9,"deltablue.ScaleConstraint.execute",2.6,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.7,"java.util.Vector.add",1.6,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.ScaleConstraint.recalculate",0.9,"som.Vector.lambda$remove$0",0.9,"deltablue.Planner.makePlan",0.7,"som.Vector.<init>",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4,"deltablue.BinaryConstraint.isSatisfied",0.4,"deltablue.Variable.setWalkStrength",0.4
100_3_DeltaBlue_Slowdown.xml,100,3,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.9,"deltablue.Plan.execute",11.0,"deltablue.EqualityConstraint.execute",8.7,"som.Vector.forEach",5.4,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.4,"som.Vector.append",1.1,"java.util.Vector.add",1.0,"deltablue.AbstractConstraint.satisfy",0.9,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.AbstractConstraint.inputsKnown",0.6,"som.Vector.lambda$remove$0",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.projectionTest",0.5,"deltablue.Variable.getValue",0.5,"deltablue.BinaryConstraint.isSatisfied",0.4,"som.Vector.removeFirst",0.4,"deltablue.BinaryConstraint.getOutput",0.4,"som.Vector.<init>",0.4
100_3_Havlak_NoSlowdown.xml,100,3,Havlak,NoSlowdown,"som.Vector.hasSome",35.9,"som.Vector.<init>",15.8,"som.Vector.append",7.0,"havlak.HavlakLoopFinder.findLoops",5.9,"som.Vector.forEach",4.3,"havlak.UnionFindNode.initNode",3.5,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Dictionary.at",1.6,"havlak.HavlakLoopFinder.stepD",1.3,"som.Vector.size",1.1,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"havlak.HavlakLoopFinder.isAncestor",0.7,"java.lang.Integer.valueOf",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.7
100_3_Havlak_Slowdown.xml,100,3,Havlak,Slowdown,"som.Vector.hasSome",29.4,"som.Vector.<init>",23.1,"som.Vector.append",11.4,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.at",3.3,"som.Vector.forEach",3.1,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.UnionFindNode.initNode",2.0,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.findSet",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.getBb",0.8,"havlak.HavlakLoopFinder$1.apply",0.8,"som.Vector.size",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"som.Dictionary.atPut",0.5,"som.Set.<init>",0.5
100_3_Json_NoSlowdown.xml,100,3,Json,NoSlowdown,"java.lang.String.equals",36.5,"java.lang.Character.toString",18.6,"json.JsonPureStringParser.read",8.6,"java.lang.StringBuilder.toString",3.5,"java.lang.StringBuilder.append",3.3,"json.JsonPureStringParser.subStringFromTo",2.7,"java.lang.String.charAt",2.7,"java.lang.String.hashCode",2.5,"som.Vector.<init>",2.3,"som.Vector.append",2.3,"json.JsonPureStringParser.readStringInternal",2.2,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readDigit",1.4,"json.JsonPureStringParser.endCapture",1.3,"json.JsonPureStringParser.readArray",1.1,"json.JsonPureStringParser.readChar",0.7,"java.lang.String.length",0.5
100_3_Json_Slowdown.xml,100,3,Json,Slowdown,"java.lang.String.equals",36.7,"java.lang.Character.toString",18.2,"json.JsonPureStringParser.read",7.7,"java.lang.String.charAt",4.2,"json.JsonPureStringParser.subStringFromTo",3.4,"java.lang.StringBuilder.append",3.2,"java.lang.StringBuilder.toString",2.5,"json.JsonPureStringParser.readStringInternal",2.1,"java.lang.String.hashCode",2.0,"json.JsonPureStringParser.readArray",1.9,"som.Vector.append",1.8,"som.Vector.<init>",1.7,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readValue",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.isDigit",1.3,"json.JsonPureStringParser.endCapture",1.1,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.readDigit",1.0
100_3_List_NoSlowdown.xml,100,3,List,NoSlowdown,"List$Element.getNext",45.8,"List.isShorterThan",43.5,"List.tail",9.8,"List.makeList",0.6,"java.lang.Integer.valueOf",0.2,"List.benchmark",0.1,"List$Element.length",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_List_Slowdown.xml,100,3,List,Slowdown,"List.isShorterThan",64.6,"List$Element.getNext",25.8,"List.tail",9.2,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"java.io.PrintStream.println",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"Run.doRuns",0.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Mandelbrot_NoSlowdown.xml,100,3,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Mandelbrot_Slowdown.xml,100,3,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_NBody_NoSlowdown.xml,100,3,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.9,"nbody.Body.setVX",12.2,"nbody.Body.setVY",3.2,"nbody.Body.getVX",3.1,"nbody.Body.getX",2.5,"nbody.Body.getZ",2.4,"nbody.Body.getY",2.2,"nbody.Body.getVY",2.0,"nbody.Body.getVZ",1.7,"java.lang.Math.sqrt",1.7,"nbody.Body.setVZ",1.4,"nbody.Body.setX",0.6,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.3,"nbody.Body.getMass",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
100_3_NBody_Slowdown.xml,100,3,NBody,Slowdown,"nbody.NBodySystem.advance",32.9,"NBody.innerBenchmarkLoop",14.6,"nbody.Body.getZ",13.6,"nbody.Body.getX",13.3,"nbody.Body.getY",12.0,"nbody.Body.setVX",5.6,"java.lang.Math.sqrt",1.6,"nbody.Body.setVY",1.6,"nbody.Body.getVX",1.6,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.3,"nbody.Body.getMass",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.lang.System.nanoTime",0.0
100_3_Permute_NoSlowdown.xml,100,3,Permute,NoSlowdown,"Permute.permute",70.5,"Permute.swap",29.4,"java.lang.ClassLoader.loadClass",0.0,"Permute.benchmark",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Permute_Slowdown.xml,100,3,Permute,Slowdown,"Permute.permute",65.6,"Permute.swap",34.3,"Permute.benchmark",0.0,"java.io.PrintStream.println",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Queens_NoSlowdown.xml,100,3,Queens,NoSlowdown,"Queens.getRowColumn",55.7,"Queens.placeQueen",30.6,"Queens.setRowColumn",11.1,"Queens.queens",1.5,"java.util.Arrays.fill",0.7,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.1,"java.io.PrintStream.println",0.1,"Queens.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Queens_Slowdown.xml,100,3,Queens,Slowdown,"Queens.getRowColumn",59.0,"Queens.placeQueen",24.2,"Queens.setRowColumn",15.3,"Queens.queens",1.0,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Richards_NoSlowdown.xml,100,3,Richards,NoSlowdown,"richards.Scheduler.schedule",23.4,"richards.TaskControlBlock.runTask",19.8,"richards.Scheduler$HandlerProcessFunction.apply",8.8,"richards.TaskState.isTaskHoldingOrWaiting",7.6,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",2.9,"richards.TaskState.isWaitingWithPacket",2.5,"richards.TaskControlBlock.getIdentity",2.0,"richards.Packet.setLink",1.9,"richards.Scheduler.findTask",1.9,"richards.RBObject.append",1.8,"richards.IdleTaskDataRecord.setControl",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.TaskControlBlock.getLink",1.5,"richards.Scheduler.queuePacket",1.4,"richards.TaskState.setTaskHolding",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Packet.getIdentity",0.9
100_3_Richards_Slowdown.xml,100,3,Richards,Slowdown,"richards.Scheduler.schedule",27.6,"richards.TaskControlBlock.runTask",18.3,"richards.Scheduler$HandlerProcessFunction.apply",8.9,"richards.TaskState.isTaskHoldingOrWaiting",6.5,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.Scheduler.findTask",4.5,"richards.Packet.setLink",3.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.4,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.TaskState.isWaitingWithPacket",1.9,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.TaskControlBlock.getIdentity",1.7,"richards.HandlerTaskDataRecord.deviceIn",1.4,"richards.DeviceTaskDataRecord.setPending",1.3,"richards.IdleTaskDataRecord.setControl",1.1,"richards.RBObject.append",1.0,"richards.Scheduler.queuePacket",0.9,"richards.Packet.getDatum",0.8,"richards.Packet.getIdentity",0.7,"richards.TaskState.setTaskHolding",0.6
100_3_Sieve_NoSlowdown.xml,100,3,Sieve,NoSlowdown,"Sieve.sieve",88.6,"java.util.Arrays.fill",10.4,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Sieve_Slowdown.xml,100,3,Sieve,Slowdown,"Sieve.sieve",90.9,"java.util.Arrays.fill",8.1,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Storage_NoSlowdown.xml,100,3,Storage,NoSlowdown,"Storage.buildTreeDepth",60.3,"som.Arrays.setAll",35.4,"som.Random.next",2.3,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"Storage.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Storage_Slowdown.xml,100,3,Storage,Slowdown,"Storage.buildTreeDepth",61.3,"som.Arrays.setAll",34.4,"som.Random.next",3.4,"Storage.lambda$buildTreeDepth$0",0.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Towers_NoSlowdown.xml,100,3,Towers,NoSlowdown,"Towers.popDiskFrom",30.4,"Towers.moveDisks",21.0,"Towers.pushDisk",19.9,"Towers$TowersDisk.setNext",17.7,"Towers.moveTopDisk",7.3,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_3_Towers_Slowdown.xml,100,3,Towers,Slowdown,"Towers.popDiskFrom",34.3,"Towers.moveDisks",19.1,"Towers.pushDisk",18.4,"Towers$TowersDisk.setNext",18.4,"Towers.moveTopDisk",7.8,"Towers$TowersDisk.getSize",1.9,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"java.lang.Integer.valueOf",0.0,"Run.runBenchmark",0.0,"Towers.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0
100_4_Bounce_NoSlowdown.xml,100,4,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.7,"Bounce.benchmark",25.5,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.2,"Bounce.lambda$benchmark$0",1.1,"java.util.Arrays.setAll",1.1,"som.Random.next",0.9,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.printTotal",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Bounce_Slowdown.xml,100,4,Bounce,Slowdown,"Bounce$Ball.bounce",57.3,"Bounce.benchmark",35.3,"Bounce.lambda$benchmark$0",2.9,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.5,"som.Random.next",0.4,"Bounce.verifyResult",0.0,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_CD_NoSlowdown.xml,100,4,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",12.7,"cd.RedBlackTree.put",10.1,"cd.CallSign.compareTo",7.6,"cd.RedBlackTree.findNode",6.6,"cd.Vector2D.compareTo",3.8,"cd.CallSign.compareTo",3.5,"cd.RedBlackTree.treeMinimum",3.2,"cd.Vector2D.compareNumbers",3.2,"cd.Vector2D.compareTo",2.7,"som.Vector.append",2.5,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.CollisionDetector.handleNewFrame",2.4,"som.Vector.<init>",2.0,"cd.RedBlackTree.leftRotate",2.0,"cd.CollisionDetector.voxelHash",1.5,"cd.RedBlackTree$Node.successor",1.4,"cd.Vector2D.plus",1.3,"cd.Simulator.simulate",1.3
100_4_CD_Slowdown.xml,100,4,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.3,"cd.CollisionDetector.isInVoxel",13.5,"cd.RedBlackTree.put",11.7,"cd.RedBlackTree.findNode",9.8,"cd.CallSign.compareTo",6.9,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.6,"cd.Vector2D.compareNumbers",2.4,"cd.RedBlackTree.leftRotate",2.3,"cd.RedBlackTree$Node.successor",2.3,"cd.CollisionDetector.handleNewFrame",2.3,"cd.CollisionDetector.recurse",2.3,"cd.Vector2D.compareTo",2.1,"cd.RedBlackTree.forEach",2.1,"cd.RedBlackTree.treeMinimum",2.0,"cd.CollisionDetector.voxelHash",1.9,"som.Vector.<init>",1.6,"som.Vector.append",1.6,"cd.Vector2D.plus",1.3,"cd.Vector2D.minus",1.2
100_4_DeltaBlue_NoSlowdown.xml,100,4,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",56.1,"deltablue.Plan.execute",11.5,"som.Vector.forEach",6.4,"deltablue.EqualityConstraint.execute",4.9,"deltablue.ScaleConstraint.execute",2.7,"deltablue.Planner.addPropagate",2.0,"som.Vector.append",1.6,"java.util.Vector.add",1.5,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.0,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.9,"deltablue.Planner.makePlan",0.8,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.projectionTest",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
100_4_DeltaBlue_Slowdown.xml,100,4,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.5,"deltablue.Plan.execute",11.2,"deltablue.EqualityConstraint.execute",8.6,"som.Vector.forEach",5.6,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.3,"som.Vector.append",1.1,"java.util.Vector.add",0.9,"deltablue.ScaleConstraint.recalculate",0.9,"deltablue.AbstractConstraint.satisfy",0.8,"som.Vector.lambda$remove$0",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Variable.getValue",0.5,"deltablue.Planner.projectionTest",0.5,"som.Vector.<init>",0.5,"deltablue.Planner.removePropagateFrom",0.5,"som.Vector.removeFirst",0.5,"deltablue.BinaryConstraint.isSatisfied",0.4,"deltablue.BinaryConstraint.getOutput",0.3
100_4_Havlak_NoSlowdown.xml,100,4,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",19.1,"havlak.HavlakLoopFinder.findLoops",6.1,"som.Vector.append",5.9,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",4.0,"som.Vector.at",2.7,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder.stepD",2.0,"havlak.HavlakLoopFinder$5.apply",2.0,"som.Dictionary.at",1.4,"havlak.HavlakLoopFinder$2.apply",1.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder.isAncestor",0.9,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.7,"havlak.HavlakLoopFinder$2.apply",0.7,"havlak.HavlakLoopFinder$1.apply",0.6
100_4_Havlak_Slowdown.xml,100,4,Havlak,Slowdown,"som.Vector.hasSome",29.2,"som.Vector.<init>",23.3,"som.Vector.append",11.3,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.at",3.4,"som.Vector.forEach",3.0,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.UnionFindNode.initNode",1.9,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",1.0,"som.Vector.size",0.8,"havlak.HavlakLoopFinder$1.apply",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"havlak.HavlakLoopFinder$2.apply",0.5,"havlak.LoopStructureGraph$2.apply",0.5
100_4_Json_NoSlowdown.xml,100,4,Json,NoSlowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",19.4,"json.JsonPureStringParser.read",8.3,"java.lang.StringBuilder.toString",4.1,"java.lang.StringBuilder.append",3.6,"java.lang.String.charAt",2.8,"json.JsonPureStringParser.subStringFromTo",2.4,"som.Vector.<init>",2.4,"som.Vector.append",2.2,"java.lang.String.hashCode",2.0,"json.JsonPureStringParser.readStringInternal",2.0,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readValue",1.3,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.endCapture",1.1,"json.JsonPureStringParser.readChar",0.7,"json.JsonPureStringParser.isDigit",0.6
100_4_Json_Slowdown.xml,100,4,Json,Slowdown,"java.lang.String.equals",37.2,"java.lang.Character.toString",18.4,"json.JsonPureStringParser.read",7.3,"java.lang.String.charAt",3.8,"json.JsonPureStringParser.subStringFromTo",3.3,"java.lang.StringBuilder.toString",3.1,"java.lang.StringBuilder.append",2.8,"json.JsonPureStringParser.isWhiteSpace",2.0,"json.JsonPureStringParser.readValue",1.9,"som.Vector.<init>",1.9,"java.lang.StringBuilder.<init>",1.8,"som.Vector.append",1.7,"java.lang.String.hashCode",1.6,"json.JsonPureStringParser.readStringInternal",1.5,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.isDigit",1.4,"java.lang.String.length",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.readDigit",1.1,"json.JsonObject$HashIndexTable.<init>",0.9
100_4_List_NoSlowdown.xml,100,4,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",44.0,"List.tail",9.4,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"List.benchmark",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_List_Slowdown.xml,100,4,List,Slowdown,"List.isShorterThan",64.7,"List$Element.getNext",26.0,"List.tail",9.0,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"List.benchmark",0.0,"List$Element.length",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Mandelbrot_NoSlowdown.xml,100,4,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Mandelbrot_Slowdown.xml,100,4,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_NBody_NoSlowdown.xml,100,4,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.6,"nbody.Body.setVX",11.9,"nbody.Body.setVY",3.3,"nbody.Body.getVX",2.9,"nbody.Body.getX",2.7,"nbody.Body.getZ",2.5,"nbody.Body.getVY",2.3,"nbody.Body.getY",2.1,"nbody.Body.getVZ",2.0,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.5,"nbody.Body.setZ",0.7,"nbody.Body.setX",0.6,"NBody.innerBenchmarkLoop",0.2,"nbody.Body.getMass",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0
100_4_NBody_Slowdown.xml,100,4,NBody,Slowdown,"nbody.NBodySystem.advance",32.9,"NBody.innerBenchmarkLoop",15.3,"nbody.Body.getZ",13.9,"nbody.Body.getX",13.1,"nbody.Body.getY",11.9,"nbody.Body.setVX",5.7,"nbody.Body.setVY",1.5,"java.lang.Math.sqrt",1.4,"nbody.Body.getVX",1.4,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.9,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.3,"nbody.Body.getMass",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0
100_4_Permute_NoSlowdown.xml,100,4,Permute,NoSlowdown,"Permute.permute",70.0,"Permute.swap",29.8,"Permute.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Permute_Slowdown.xml,100,4,Permute,Slowdown,"Permute.permute",65.7,"Permute.swap",34.2,"Run.printResult",0.0,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.<init>",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Queens_NoSlowdown.xml,100,4,Queens,NoSlowdown,"Queens.getRowColumn",54.0,"Queens.placeQueen",32.0,"Queens.setRowColumn",11.4,"Queens.queens",1.7,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.3,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Queens_Slowdown.xml,100,4,Queens,Slowdown,"Queens.getRowColumn",59.0,"Queens.placeQueen",23.6,"Queens.setRowColumn",15.9,"Queens.queens",1.0,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Richards_NoSlowdown.xml,100,4,Richards,NoSlowdown,"richards.Scheduler.schedule",25.2,"richards.TaskControlBlock.runTask",17.0,"richards.Scheduler$HandlerProcessFunction.apply",9.7,"richards.TaskState.isTaskHoldingOrWaiting",8.4,"richards.Scheduler$DeviceProcessFunction.apply",5.5,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.5,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Packet.setLink",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.TaskControlBlock.getLink",1.7,"richards.RBObject.append",1.6,"richards.IdleTaskDataRecord.setControl",1.6,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.Scheduler.queuePacket",1.3,"richards.TaskState.setTaskHolding",0.9,"richards.HandlerTaskDataRecord.deviceIn",0.8,"richards.Scheduler.holdSelf",0.7
100_4_Richards_Slowdown.xml,100,4,Richards,Slowdown,"richards.Scheduler.schedule",26.9,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",9.5,"richards.TaskState.isTaskHoldingOrWaiting",6.5,"richards.Scheduler.findTask",5.5,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.Packet.setLink",3.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.3,"richards.Scheduler$IdleProcessFunction.apply",2.4,"richards.TaskState.isWaitingWithPacket",1.9,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.TaskControlBlock.getIdentity",1.6,"richards.DeviceTaskDataRecord.setPending",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.IdleTaskDataRecord.setControl",1.0,"richards.RBObject.append",0.9,"richards.TaskState.setTaskHolding",0.9,"richards.Scheduler.queuePacket",0.9,"richards.Packet.getDatum",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.7
100_4_Sieve_NoSlowdown.xml,100,4,Sieve,NoSlowdown,"Sieve.sieve",88.4,"java.util.Arrays.fill",10.4,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.2,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Sieve.verifyResult",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Sieve_Slowdown.xml,100,4,Sieve,Slowdown,"Sieve.sieve",91.2,"java.util.Arrays.fill",7.9,"Sieve.benchmark",0.8,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Storage_NoSlowdown.xml,100,4,Storage,NoSlowdown,"Storage.buildTreeDepth",59.4,"som.Arrays.setAll",36.5,"som.Random.next",2.2,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"Storage.benchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Storage_Slowdown.xml,100,4,Storage,Slowdown,"Storage.buildTreeDepth",60.4,"som.Arrays.setAll",35.2,"som.Random.next",3.5,"Storage.lambda$buildTreeDepth$0",0.9,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Harness.processArguments",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Towers_NoSlowdown.xml,100,4,Towers,NoSlowdown,"Towers.popDiskFrom",31.4,"Towers.moveDisks",20.7,"Towers.pushDisk",19.1,"Towers$TowersDisk.setNext",17.5,"Towers.moveTopDisk",7.5,"Towers$TowersDisk.getSize",3.6,"Towers.buildTowerAt",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Towers.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_4_Towers_Slowdown.xml,100,4,Towers,Slowdown,"Towers.popDiskFrom",32.8,"Towers.moveDisks",19.5,"Towers.pushDisk",19.0,"Towers$TowersDisk.setNext",18.4,"Towers.moveTopDisk",8.3,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"Towers.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Bounce_NoSlowdown.xml,100,5,Bounce,NoSlowdown,"Bounce$Ball.bounce",64.1,"Bounce.benchmark",25.2,"java.lang.Math.abs",3.8,"Bounce$Ball.<init>",3.2,"java.util.Arrays.setAll",1.4,"Bounce.lambda$benchmark$0",1.2,"som.Random.next",0.9,"java.io.PrintStream.println",0.1,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Bounce_Slowdown.xml,100,5,Bounce,Slowdown,"Bounce$Ball.bounce",57.0,"Bounce.benchmark",35.3,"Bounce.lambda$benchmark$0",2.9,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.6,"som.Random.next",0.4,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"som.Random.<init>",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_CD_NoSlowdown.xml,100,5,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",13.4,"cd.RedBlackTree.put",10.6,"cd.CallSign.compareTo",7.7,"cd.RedBlackTree.findNode",6.8,"cd.Vector2D.compareTo",3.9,"cd.CallSign.compareTo",3.4,"cd.Vector2D.compareTo",2.9,"som.Vector.append",2.8,"cd.Vector2D.compareNumbers",2.6,"cd.RedBlackTree.treeMinimum",2.6,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree.leftRotate",2.1,"cd.RedBlackTree$Node.successor",1.7,"som.Vector.<init>",1.7,"cd.Simulator.simulate",1.4,"cd.Vector2D.plus",1.2,"cd.CollisionDetector.voxelHash",1.1
100_5_CD_Slowdown.xml,100,5,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.7,"cd.CollisionDetector.isInVoxel",14.4,"cd.RedBlackTree.put",11.4,"cd.RedBlackTree.findNode",9.7,"cd.CallSign.compareTo",7.1,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.4,"cd.RedBlackTree$Node.successor",2.3,"cd.CollisionDetector.voxelHash",2.2,"cd.RedBlackTree.treeMinimum",2.2,"cd.RedBlackTree.leftRotate",2.1,"cd.CollisionDetector.handleNewFrame",2.1,"cd.CollisionDetector.recurse",2.0,"cd.RedBlackTree.forEach",1.8,"cd.Vector2D.compareTo",1.8,"som.Vector.append",1.7,"som.Vector.<init>",1.3,"cd.Vector2D.minus",1.2,"cd.Vector2D.plus",1.2
100_5_DeltaBlue_NoSlowdown.xml,100,5,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.9,"deltablue.Plan.execute",13.4,"deltablue.EqualityConstraint.execute",7.7,"som.Vector.forEach",6.2,"deltablue.ScaleConstraint.execute",3.3,"deltablue.Planner.addPropagate",2.0,"deltablue.AbstractConstraint.satisfy",1.5,"som.Vector.append",1.5,"java.util.Vector.add",1.3,"som.Vector.lambda$remove$0",1.0,"deltablue.ScaleConstraint.recalculate",1.0,"deltablue.Planner.makePlan",0.7,"som.Vector.<init>",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"som.Vector.with",0.4
100_5_DeltaBlue_Slowdown.xml,100,5,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.7,"deltablue.Plan.execute",11.3,"deltablue.EqualityConstraint.execute",8.4,"som.Vector.forEach",5.5,"deltablue.ScaleConstraint.execute",2.7,"deltablue.Planner.addPropagate",1.4,"som.Vector.append",0.9,"java.util.Vector.add",0.9,"deltablue.AbstractConstraint.satisfy",0.9,"deltablue.Planner.makePlan",0.7,"som.Vector.lambda$remove$0",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.Variable.getValue",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.projectionTest",0.5,"som.Vector.removeFirst",0.5,"deltablue.BinaryConstraint.getOutput",0.4,"som.Vector.<init>",0.4,"deltablue.BinaryConstraint.isSatisfied",0.4
100_5_Havlak_NoSlowdown.xml,100,5,Havlak,NoSlowdown,"som.Vector.hasSome",36.3,"som.Vector.<init>",15.6,"som.Vector.append",6.5,"havlak.HavlakLoopFinder.findLoops",5.6,"som.Vector.forEach",4.6,"havlak.UnionFindNode.initNode",3.2,"havlak.HavlakLoopFinder.doDFS",2.2,"som.Vector.at",2.2,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Dictionary.at",1.6,"som.Vector.size",1.2,"havlak.HavlakLoopFinder.stepD",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",0.9,"havlak.HavlakLoopFinder.isAncestor",0.9,"som.Set.<init>",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"som.Dictionary.transferEntries",0.8
100_5_Havlak_Slowdown.xml,100,5,Havlak,Slowdown,"som.Vector.hasSome",29.0,"som.Vector.<init>",22.9,"som.Vector.append",11.3,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.at",3.7,"som.Vector.forEach",3.2,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder$5.apply",2.0,"havlak.UnionFindNode.initNode",1.8,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",1.0,"havlak.HavlakLoopFinder$1.apply",0.7,"havlak.HavlakLoopFinder.stepD",0.7,"som.Vector.size",0.7,"som.Dictionary.at",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"som.Set.<init>",0.5,"java.lang.Integer.valueOf",0.5,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5
100_5_Json_NoSlowdown.xml,100,5,Json,NoSlowdown,"java.lang.String.equals",36.5,"java.lang.Character.toString",19.0,"json.JsonPureStringParser.read",8.7,"java.lang.StringBuilder.toString",3.9,"java.lang.StringBuilder.append",3.6,"json.JsonPureStringParser.readStringInternal",3.0,"java.lang.String.hashCode",2.4,"java.lang.String.charAt",2.4,"som.Vector.append",2.2,"som.Vector.<init>",2.1,"json.JsonPureStringParser.subStringFromTo",2.1,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.readDigit",1.4,"java.lang.StringBuilder.<init>",1.4,"json.JsonPureStringParser.endCapture",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.0,"json.JsonPureStringParser.isDigit",0.7,"json.JsonPureStringParser.readChar",0.7
100_5_Json_Slowdown.xml,100,5,Json,Slowdown,"java.lang.String.equals",35.5,"java.lang.Character.toString",19.6,"json.JsonPureStringParser.read",7.1,"java.lang.String.charAt",3.9,"java.lang.StringBuilder.append",3.2,"json.JsonPureStringParser.subStringFromTo",3.1,"java.lang.StringBuilder.toString",2.9,"som.Vector.<init>",2.3,"json.JsonPureStringParser.isWhiteSpace",1.9,"json.JsonPureStringParser.readStringInternal",1.9,"som.Vector.append",1.9,"java.lang.String.hashCode",1.8,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.readValue",1.7,"json.JsonPureStringParser.readArray",1.6,"json.JsonPureStringParser.isDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.2,"java.lang.String.length",1.1,"json.JsonPureStringParser.readDigit",1.0,"json.JsonObject$HashIndexTable.<init>",0.9
100_5_List_NoSlowdown.xml,100,5,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",43.8,"List.tail",9.7,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"List.benchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_List_Slowdown.xml,100,5,List,Slowdown,"List.isShorterThan",63.9,"List$Element.getNext",26.5,"List.tail",9.2,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List.benchmark",0.0,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Mandelbrot_NoSlowdown.xml,100,5,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Mandelbrot_Slowdown.xml,100,5,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_NBody_NoSlowdown.xml,100,5,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.5,"nbody.Body.setVX",11.6,"nbody.Body.setVY",3.2,"nbody.Body.getVX",3.1,"nbody.Body.getZ",2.6,"nbody.Body.getX",2.3,"nbody.Body.getVY",2.1,"nbody.Body.getY",2.0,"nbody.Body.getVZ",1.8,"java.lang.Math.sqrt",1.5,"nbody.Body.setVZ",1.5,"nbody.Body.setZ",0.7,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"nbody.Body.getMass",0.0,"",0,"",0,"",0
100_5_NBody_Slowdown.xml,100,5,NBody,Slowdown,"nbody.NBodySystem.advance",33.2,"NBody.innerBenchmarkLoop",14.8,"nbody.Body.getZ",13.4,"nbody.Body.getX",12.9,"nbody.Body.getY",12.8,"nbody.Body.setVX",5.6,"java.lang.Math.sqrt",1.5,"nbody.Body.getVX",1.5,"nbody.Body.setVY",1.4,"nbody.Body.getVZ",0.9,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.4,"nbody.Body.setZ",0.3,"nbody.Body.getMass",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
100_5_Permute_NoSlowdown.xml,100,5,Permute,NoSlowdown,"Permute.permute",71.0,"Permute.swap",28.8,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Run.measure",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Permute_Slowdown.xml,100,5,Permute,Slowdown,"Permute.permute",65.8,"Permute.swap",34.1,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Queens_NoSlowdown.xml,100,5,Queens,NoSlowdown,"Queens.getRowColumn",56.4,"Queens.placeQueen",32.0,"Queens.setRowColumn",8.7,"Queens.queens",2.0,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.1,"Queens.verifyResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Queens_Slowdown.xml,100,5,Queens,Slowdown,"Queens.getRowColumn",59.6,"Queens.placeQueen",23.9,"Queens.setRowColumn",15.1,"Queens.queens",1.0,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"Harness.processArguments",0.0,"Queens.verifyResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Richards_NoSlowdown.xml,100,5,Richards,NoSlowdown,"richards.Scheduler.schedule",25.2,"richards.TaskControlBlock.runTask",18.5,"richards.Scheduler$HandlerProcessFunction.apply",9.6,"richards.TaskState.isTaskHoldingOrWaiting",7.3,"richards.Scheduler$DeviceProcessFunction.apply",4.9,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler$IdleProcessFunction.apply",3.1,"richards.Scheduler.findTask",2.5,"richards.Packet.setLink",2.5,"richards.TaskState.isWaitingWithPacket",2.3,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.TaskControlBlock.getIdentity",1.7,"richards.RBObject.append",1.5,"richards.TaskControlBlock.getLink",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.Scheduler.queuePacket",1.4,"richards.IdleTaskDataRecord.setControl",1.3,"richards.TaskState.setTaskHolding",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Scheduler.holdSelf",0.9
100_5_Richards_Slowdown.xml,100,5,Richards,Slowdown,"richards.Scheduler.schedule",27.2,"richards.TaskControlBlock.runTask",18.8,"richards.Scheduler$HandlerProcessFunction.apply",9.2,"richards.TaskState.isTaskHoldingOrWaiting",6.2,"richards.Scheduler$DeviceProcessFunction.apply",5.0,"richards.Scheduler.findTask",4.5,"richards.Packet.setLink",4.1,"richards.TaskControlBlock.addInputAndCheckPriority",3.4,"richards.Scheduler$IdleProcessFunction.apply",2.5,"richards.TaskState.isWaitingWithPacket",2.0,"richards.Scheduler$WorkerProcessFunction.apply",1.9,"richards.TaskControlBlock.getIdentity",1.7,"richards.DeviceTaskDataRecord.setPending",1.3,"richards.Scheduler.queuePacket",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.RBObject.append",1.0,"richards.IdleTaskDataRecord.setControl",1.0,"richards.TaskState.setTaskHolding",0.9,"richards.Packet.getDatum",0.7,"richards.Packet.getIdentity",0.6
100_5_Sieve_NoSlowdown.xml,100,5,Sieve,NoSlowdown,"Sieve.sieve",88.8,"java.util.Arrays.fill",10.0,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Sieve_Slowdown.xml,100,5,Sieve,Slowdown,"Sieve.sieve",90.9,"java.util.Arrays.fill",8.3,"Sieve.benchmark",0.7,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Storage_NoSlowdown.xml,100,5,Storage,NoSlowdown,"Storage.buildTreeDepth",59.4,"som.Arrays.setAll",36.6,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Storage_Slowdown.xml,100,5,Storage,Slowdown,"Storage.buildTreeDepth",61.4,"som.Arrays.setAll",34.2,"som.Random.next",3.4,"Storage.lambda$buildTreeDepth$0",0.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.getSuiteFromName",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Towers_NoSlowdown.xml,100,5,Towers,NoSlowdown,"Towers.popDiskFrom",31.0,"Towers.moveDisks",20.9,"Towers.pushDisk",19.1,"Towers$TowersDisk.setNext",18.4,"Towers.moveTopDisk",7.0,"Towers$TowersDisk.getSize",3.5,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_5_Towers_Slowdown.xml,100,5,Towers,Slowdown,"Towers.popDiskFrom",33.8,"Towers.moveDisks",20.1,"Towers$TowersDisk.setNext",18.2,"Towers.pushDisk",18.0,"Towers.moveTopDisk",8.0,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Bounce_NoSlowdown.xml,100,6,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.7,"Bounce.benchmark",25.3,"java.lang.Math.abs",4.1,"Bounce$Ball.<init>",3.4,"java.util.Arrays.setAll",1.2,"som.Random.next",1.2,"Bounce.lambda$benchmark$0",1.0,"Bounce.verifyResult",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Bounce_Slowdown.xml,100,6,Bounce,Slowdown,"Bounce$Ball.bounce",56.6,"Bounce.benchmark",35.7,"Bounce.lambda$benchmark$0",2.9,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.7,"som.Random.next",0.3,"Run.printResult",0.0,"som.Random.<init>",0.0,"Bounce.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_CD_NoSlowdown.xml,100,6,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.5,"cd.CollisionDetector.isInVoxel",12.7,"cd.RedBlackTree.put",9.7,"cd.CallSign.compareTo",7.5,"cd.RedBlackTree.findNode",7.0,"cd.Vector2D.compareTo",4.1,"cd.RedBlackTree.treeMinimum",3.1,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareNumbers",3.0,"cd.Vector2D.compareTo",2.7,"cd.RedBlackTree.forEach",2.7,"cd.CollisionDetector.recurse",2.4,"som.Vector.append",2.2,"cd.RedBlackTree.leftRotate",2.2,"cd.CollisionDetector.handleNewFrame",2.1,"cd.RedBlackTree$Node.successor",1.9,"som.Vector.<init>",1.8,"cd.Vector2D.plus",1.6,"cd.RedBlackTree.get",1.5,"cd.Simulator.simulate",1.5
100_6_CD_Slowdown.xml,100,6,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.7,"cd.CollisionDetector.isInVoxel",13.5,"cd.RedBlackTree.put",12.2,"cd.RedBlackTree.findNode",9.2,"cd.CallSign.compareTo",6.9,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",2.8,"cd.RedBlackTree.leftRotate",2.6,"cd.Vector2D.compareNumbers",2.6,"cd.RedBlackTree$Node.successor",2.6,"cd.CollisionDetector.recurse",2.1,"cd.CollisionDetector.handleNewFrame",2.0,"cd.RedBlackTree.treeMinimum",2.0,"cd.CollisionDetector.voxelHash",1.8,"cd.Vector2D.compareTo",1.8,"cd.RedBlackTree.forEach",1.8,"som.Vector.append",1.8,"som.Vector.<init>",1.4,"cd.Vector2D.minus",1.2,"cd.Vector2D.plus",1.2
100_6_DeltaBlue_NoSlowdown.xml,100,6,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.1,"deltablue.Plan.execute",12.5,"som.Vector.forEach",7.0,"deltablue.EqualityConstraint.execute",6.3,"deltablue.ScaleConstraint.execute",4.5,"deltablue.Planner.addPropagate",2.2,"deltablue.AbstractConstraint.satisfy",1.4,"java.util.Vector.add",1.3,"som.Vector.append",1.3,"som.Vector.lambda$remove$0",1.1,"deltablue.ScaleConstraint.recalculate",1.0,"deltablue.Planner.makePlan",1.0,"som.Vector.<init>",0.8,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4,"deltablue.Strength.weakest",0.4
100_6_DeltaBlue_Slowdown.xml,100,6,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.7,"deltablue.Plan.execute",10.9,"deltablue.EqualityConstraint.execute",8.7,"som.Vector.forEach",5.8,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.5,"som.Vector.append",1.0,"deltablue.ScaleConstraint.recalculate",0.9,"som.Vector.lambda$remove$0",0.8,"java.util.Vector.add",0.8,"deltablue.AbstractConstraint.satisfy",0.8,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Variable.getValue",0.6,"deltablue.Planner.removePropagateFrom",0.5,"som.Vector.<init>",0.5,"som.Vector.removeFirst",0.4,"deltablue.BinaryConstraint.getOutput",0.4,"deltablue.Planner.addConstraintsConsumingTo",0.4,"deltablue.Planner.projectionTest",0.4
100_6_Havlak_NoSlowdown.xml,100,6,Havlak,NoSlowdown,"som.Vector.hasSome",31.6,"som.Vector.<init>",19.9,"havlak.HavlakLoopFinder.findLoops",6.1,"som.Vector.append",6.0,"som.Vector.forEach",4.3,"havlak.UnionFindNode.initNode",4.0,"havlak.HavlakLoopFinder.stepD",2.5,"som.Vector.at",2.5,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.HavlakLoopFinder.doDFS",1.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"som.Dictionary.at",1.2,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",0.8,"havlak.HavlakLoopFinder$1.apply",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.7,"havlak.HavlakLoopFinder.isAncestor",0.7,"som.Set.<init>",0.7,"som.Dictionary.transferEntries",0.6
100_6_Havlak_Slowdown.xml,100,6,Havlak,Slowdown,"som.Vector.hasSome",29.1,"som.Vector.<init>",23.5,"som.Vector.append",11.4,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.at",3.3,"som.Vector.forEach",3.1,"havlak.UnionFindNode.initNode",2.0,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.UnionFindNode.findSet",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder.stepD",0.7,"havlak.HavlakLoopFinder$1.apply",0.7,"som.Vector.size",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"havlak.HavlakLoopFinder$2.apply",0.5,"java.lang.Integer.valueOf",0.5
100_6_Json_NoSlowdown.xml,100,6,Json,NoSlowdown,"java.lang.String.equals",35.2,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",8.2,"java.lang.StringBuilder.toString",3.9,"java.lang.StringBuilder.append",3.7,"java.lang.String.hashCode",2.8,"java.lang.String.charAt",2.8,"json.JsonPureStringParser.subStringFromTo",2.5,"json.JsonPureStringParser.readStringInternal",2.4,"som.Vector.<init>",2.2,"som.Vector.append",2.2,"json.JsonPureStringParser.isWhiteSpace",1.7,"java.lang.StringBuilder.<init>",1.5,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.readArray",1.3,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.2,"json.JsonPureStringParser.readChar",0.8,"json.JsonPureStringParser.isDigit",0.7
100_6_Json_Slowdown.xml,100,6,Json,Slowdown,"java.lang.String.equals",37.6,"java.lang.Character.toString",18.6,"json.JsonPureStringParser.read",7.5,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.2,"java.lang.StringBuilder.toString",2.9,"java.lang.StringBuilder.append",2.8,"json.JsonPureStringParser.isWhiteSpace",2.0,"json.JsonPureStringParser.readArray",1.9,"json.JsonPureStringParser.readStringInternal",1.9,"java.lang.String.hashCode",1.8,"som.Vector.append",1.7,"som.Vector.<init>",1.7,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.isDigit",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.1,"json.JsonObject$HashIndexTable.<init>",1.1,"java.lang.String.length",0.8
100_6_List_NoSlowdown.xml,100,6,List,NoSlowdown,"List$Element.getNext",45.0,"List.isShorterThan",44.6,"List.tail",9.7,"List.makeList",0.4,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"Harness.processArguments",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_List_Slowdown.xml,100,6,List,Slowdown,"List.isShorterThan",65.4,"List$Element.getNext",25.3,"List.tail",8.9,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Mandelbrot_NoSlowdown.xml,100,6,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Mandelbrot_Slowdown.xml,100,6,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_NBody_NoSlowdown.xml,100,6,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.5,"nbody.Body.setVX",12.5,"nbody.Body.setVY",2.9,"nbody.Body.getVX",2.8,"nbody.Body.getZ",2.6,"nbody.Body.getX",2.4,"nbody.Body.getY",2.3,"nbody.Body.getVY",1.9,"nbody.Body.getVZ",1.8,"java.lang.Math.sqrt",1.2,"nbody.Body.setVZ",1.2,"nbody.Body.setZ",0.7,"nbody.Body.setX",0.6,"NBody.innerBenchmarkLoop",0.3,"nbody.Body.getMass",0.1,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0
100_6_NBody_Slowdown.xml,100,6,NBody,Slowdown,"nbody.NBodySystem.advance",33.1,"NBody.innerBenchmarkLoop",15.4,"nbody.Body.getZ",13.1,"nbody.Body.getX",12.8,"nbody.Body.getY",12.4,"nbody.Body.setVX",5.8,"java.lang.Math.sqrt",1.6,"nbody.Body.getVX",1.6,"nbody.Body.setVY",1.4,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.7,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.4,"nbody.Body.setX",0.2,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0
100_6_Permute_NoSlowdown.xml,100,6,Permute,NoSlowdown,"Permute.permute",69.9,"Permute.swap",29.7,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"Permute.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Permute_Slowdown.xml,100,6,Permute,Slowdown,"Permute.permute",65.5,"Permute.swap",34.4,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Permute.verifyResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Queens_NoSlowdown.xml,100,6,Queens,NoSlowdown,"Queens.getRowColumn",54.8,"Queens.placeQueen",31.3,"Queens.setRowColumn",11.2,"Queens.queens",1.6,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.3,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.1,"Queens.verifyResult",0.0,"Run.getSuiteFromName",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0
100_6_Queens_Slowdown.xml,100,6,Queens,Slowdown,"Queens.getRowColumn",59.2,"Queens.placeQueen",23.4,"Queens.setRowColumn",15.8,"Queens.queens",1.1,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Richards_NoSlowdown.xml,100,6,Richards,NoSlowdown,"richards.Scheduler.schedule",24.2,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",9.3,"richards.TaskState.isTaskHoldingOrWaiting",8.2,"richards.Scheduler$DeviceProcessFunction.apply",4.9,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Packet.setLink",2.0,"richards.DeviceTaskDataRecord.setPending",1.9,"richards.Scheduler$WorkerProcessFunction.apply",1.9,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskControlBlock.getLink",1.6,"richards.RBObject.append",1.5,"richards.TaskState.setTaskHolding",1.4,"richards.IdleTaskDataRecord.setControl",1.3,"richards.Scheduler.queuePacket",1.2,"richards.Packet.getIdentity",1.0,"richards.Packet.getDatum",0.9
100_6_Richards_Slowdown.xml,100,6,Richards,Slowdown,"richards.Scheduler.schedule",27.0,"richards.TaskControlBlock.runTask",18.8,"richards.Scheduler$HandlerProcessFunction.apply",9.2,"richards.TaskState.isTaskHoldingOrWaiting",6.1,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Scheduler.findTask",5.0,"richards.Packet.setLink",4.1,"richards.TaskControlBlock.addInputAndCheckPriority",3.1,"richards.Scheduler$IdleProcessFunction.apply",2.6,"richards.TaskState.isWaitingWithPacket",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.5,"richards.TaskControlBlock.getIdentity",1.5,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.IdleTaskDataRecord.setControl",1.1,"richards.TaskState.setTaskHolding",1.0,"richards.Scheduler.queuePacket",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.9,"richards.RBObject.append",0.9,"richards.Packet.getDatum",0.8
100_6_Sieve_NoSlowdown.xml,100,6,Sieve,NoSlowdown,"Sieve.sieve",89.1,"java.util.Arrays.fill",9.9,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Sieve_Slowdown.xml,100,6,Sieve,Slowdown,"Sieve.sieve",91.0,"java.util.Arrays.fill",8.1,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.0,"Sieve.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Storage_NoSlowdown.xml,100,6,Storage,NoSlowdown,"Storage.buildTreeDepth",59.9,"som.Arrays.setAll",36.3,"som.Random.next",2.2,"Storage.lambda$buildTreeDepth$0",1.6,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Storage_Slowdown.xml,100,6,Storage,Slowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",34.4,"som.Random.next",3.7,"Storage.lambda$buildTreeDepth$0",0.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Towers_NoSlowdown.xml,100,6,Towers,NoSlowdown,"Towers.popDiskFrom",31.3,"Towers.moveDisks",21.3,"Towers.pushDisk",18.4,"Towers$TowersDisk.setNext",18.3,"Towers.moveTopDisk",7.0,"Towers$TowersDisk.getSize",3.6,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_6_Towers_Slowdown.xml,100,6,Towers,Slowdown,"Towers.popDiskFrom",34.0,"Towers.moveDisks",19.7,"Towers$TowersDisk.setNext",18.5,"Towers.pushDisk",17.9,"Towers.moveTopDisk",7.9,"Towers$TowersDisk.getSize",1.9,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Bounce_NoSlowdown.xml,100,7,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.7,"Bounce.benchmark",25.5,"java.lang.Math.abs",3.9,"Bounce$Ball.<init>",3.6,"Bounce.lambda$benchmark$0",1.2,"java.util.Arrays.setAll",1.0,"som.Random.next",1.0,"Run.printResult",0.1,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Bounce_Slowdown.xml,100,7,Bounce,Slowdown,"Bounce$Ball.bounce",57.5,"Bounce.benchmark",34.7,"Bounce.lambda$benchmark$0",3.2,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.6,"som.Random.next",0.4,"Benchmark.innerBenchmarkLoop",0.1,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_CD_NoSlowdown.xml,100,7,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.6,"cd.CollisionDetector.isInVoxel",13.4,"cd.RedBlackTree.put",9.8,"cd.CallSign.compareTo",7.8,"cd.RedBlackTree.findNode",7.2,"cd.Vector2D.compareTo",3.6,"cd.CallSign.compareTo",3.4,"cd.Vector2D.compareNumbers",3.0,"cd.Vector2D.compareTo",2.8,"cd.RedBlackTree.treeMinimum",2.7,"cd.CollisionDetector.handleNewFrame",2.4,"cd.RedBlackTree.forEach",2.3,"cd.CollisionDetector.recurse",2.2,"cd.RedBlackTree$Node.successor",2.2,"som.Vector.append",2.2,"som.Vector.<init>",2.2,"cd.RedBlackTree.leftRotate",2.0,"cd.CollisionDetector.voxelHash",1.4,"cd.RedBlackTree.get",1.3,"cd.Vector2D.<init>",1.3
100_7_CD_Slowdown.xml,100,7,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.3,"cd.CollisionDetector.isInVoxel",13.3,"cd.RedBlackTree.put",11.2,"cd.RedBlackTree.findNode",8.8,"cd.CallSign.compareTo",6.5,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",2.9,"cd.RedBlackTree.leftRotate",2.5,"cd.RedBlackTree$Node.successor",2.4,"cd.RedBlackTree.forEach",2.4,"cd.Vector2D.compareNumbers",2.3,"cd.CollisionDetector.handleNewFrame",2.2,"cd.CollisionDetector.voxelHash",2.2,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree.treeMinimum",2.1,"cd.Vector2D.compareTo",1.7,"som.Vector.append",1.7,"som.Vector.<init>",1.6,"cd.Vector2D.minus",1.5,"cd.Vector2D.plus",1.4
100_7_DeltaBlue_NoSlowdown.xml,100,7,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.2,"deltablue.Plan.execute",12.9,"som.Vector.forEach",6.8,"deltablue.EqualityConstraint.execute",6.1,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.3,"som.Vector.append",1.4,"java.util.Vector.add",1.4,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.1,"som.Vector.lambda$remove$0",1.1,"deltablue.Planner.makePlan",0.8,"som.Vector.<init>",0.8,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.BinaryConstraint.getOutput",0.4
100_7_DeltaBlue_Slowdown.xml,100,7,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",57.7,"deltablue.Plan.execute",11.3,"deltablue.EqualityConstraint.execute",8.4,"som.Vector.forEach",5.7,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.4,"som.Vector.append",1.1,"java.util.Vector.add",0.9,"deltablue.AbstractConstraint.satisfy",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"som.Vector.lambda$remove$0",0.8,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Planner.makePlan",0.6,"deltablue.Variable.getValue",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.BinaryConstraint.getOutput",0.4,"som.Vector.<init>",0.4,"deltablue.Planner.projectionTest",0.4,"som.Vector.removeFirst",0.3,"deltablue.BinaryConstraint.isSatisfied",0.3
100_7_Havlak_NoSlowdown.xml,100,7,Havlak,NoSlowdown,"som.Vector.hasSome",31.4,"som.Vector.<init>",20.3,"som.Vector.append",6.0,"havlak.HavlakLoopFinder.findLoops",5.7,"som.Vector.forEach",4.5,"havlak.UnionFindNode.initNode",4.1,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder.stepD",2.0,"havlak.HavlakLoopFinder$5.apply",1.9,"som.Dictionary.at",1.3,"havlak.UnionFindNode.findSet",1.2,"som.Vector.size",1.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.HavlakLoopFinder.isAncestor",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.7,"som.Set.<init>",0.7,"havlak.HavlakLoopFinder$1.apply",0.7,"java.lang.Integer.valueOf",0.7
100_7_Havlak_Slowdown.xml,100,7,Havlak,Slowdown,"som.Vector.hasSome",28.8,"som.Vector.<init>",22.8,"som.Vector.append",11.5,"havlak.HavlakLoopFinder.findLoops",7.5,"som.Vector.at",3.6,"som.Vector.forEach",3.0,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.initNode",1.6,"havlak.UnionFindNode.findSet",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder$1.apply",0.9,"som.Vector.size",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"havlak.HavlakLoopFinder$2.apply",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"som.Set.<init>",0.5
100_7_Json_NoSlowdown.xml,100,7,Json,NoSlowdown,"java.lang.String.equals",36.3,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.append",3.4,"json.JsonPureStringParser.subStringFromTo",3.3,"java.lang.StringBuilder.toString",3.2,"json.JsonPureStringParser.readStringInternal",2.5,"java.lang.String.hashCode",2.4,"java.lang.String.charAt",2.4,"som.Vector.<init>",2.1,"som.Vector.append",2.1,"json.JsonPureStringParser.endCapture",1.9,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.readDigit",1.6,"json.JsonPureStringParser.readValue",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.3,"java.lang.StringBuilder.<init>",1.1,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.6
100_7_Json_Slowdown.xml,100,7,Json,Slowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",19.5,"json.JsonPureStringParser.read",7.1,"java.lang.String.charAt",3.6,"json.JsonPureStringParser.subStringFromTo",3.2,"java.lang.StringBuilder.append",2.6,"java.lang.StringBuilder.toString",2.6,"som.Vector.<init>",2.2,"som.Vector.append",2.1,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readStringInternal",1.9,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.isWhiteSpace",1.7,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isDigit",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.endCapture",1.0,"java.lang.String.length",1.0
100_7_List_NoSlowdown.xml,100,7,List,NoSlowdown,"List$Element.getNext",46.1,"List.isShorterThan",43.4,"List.tail",9.8,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_List_Slowdown.xml,100,7,List,Slowdown,"List.isShorterThan",64.5,"List$Element.getNext",26.1,"List.tail",9.0,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Mandelbrot_NoSlowdown.xml,100,7,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Mandelbrot_Slowdown.xml,100,7,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_NBody_NoSlowdown.xml,100,7,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.4,"nbody.Body.setVX",12.4,"nbody.Body.setVY",3.5,"nbody.Body.getZ",2.8,"nbody.Body.getVX",2.8,"nbody.Body.getX",2.5,"nbody.Body.getVY",2.0,"nbody.Body.getY",1.9,"nbody.Body.getVZ",1.8,"java.lang.Math.sqrt",1.5,"nbody.Body.setVZ",1.5,"nbody.Body.setX",0.9,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.2,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"",0,"",0,"",0
100_7_NBody_Slowdown.xml,100,7,NBody,Slowdown,"nbody.NBodySystem.advance",34.0,"NBody.innerBenchmarkLoop",14.6,"nbody.Body.getZ",13.6,"nbody.Body.getX",12.5,"nbody.Body.getY",12.2,"nbody.Body.setVX",5.6,"nbody.Body.setVY",1.7,"nbody.Body.getVX",1.5,"java.lang.Math.sqrt",1.4,"nbody.Body.getVY",0.9,"nbody.Body.getVZ",0.8,"nbody.Body.setVZ",0.6,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.3,"nbody.Body.getMass",0.1,"nbody.Body.setY",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"",0
100_7_Permute_NoSlowdown.xml,100,7,Permute,NoSlowdown,"Permute.permute",70.3,"Permute.swap",29.5,"Permute.benchmark",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Permute_Slowdown.xml,100,7,Permute,Slowdown,"Permute.permute",66.3,"Permute.swap",33.6,"Permute.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.verifyResult",0.0,"Run.doRuns",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Queens_NoSlowdown.xml,100,7,Queens,NoSlowdown,"Queens.getRowColumn",54.7,"Queens.placeQueen",31.7,"Queens.setRowColumn",10.6,"Queens.queens",1.7,"java.util.Arrays.fill",0.7,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.2,"Run.printResult",0.1,"Queens.verifyResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Harness.processArguments",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0
100_7_Queens_Slowdown.xml,100,7,Queens,Slowdown,"Queens.getRowColumn",59.8,"Queens.placeQueen",23.5,"Queens.setRowColumn",15.2,"Queens.queens",0.9,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Richards_NoSlowdown.xml,100,7,Richards,NoSlowdown,"richards.Scheduler.schedule",25.8,"richards.TaskControlBlock.runTask",17.6,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",7.7,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler$IdleProcessFunction.apply",2.9,"richards.TaskState.isWaitingWithPacket",2.5,"richards.Scheduler.findTask",2.4,"richards.Packet.setLink",2.3,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.RBObject.append",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.TaskControlBlock.getLink",1.5,"richards.TaskState.setTaskHolding",1.5,"richards.TaskControlBlock.getIdentity",1.4,"richards.IdleTaskDataRecord.setControl",1.3,"richards.Scheduler.queuePacket",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Scheduler.holdSelf",0.8
100_7_Richards_Slowdown.xml,100,7,Richards,Slowdown,"richards.Scheduler.schedule",27.5,"richards.TaskControlBlock.runTask",18.5,"richards.Scheduler$HandlerProcessFunction.apply",9.2,"richards.TaskState.isTaskHoldingOrWaiting",6.3,"richards.Scheduler.findTask",5.4,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Packet.setLink",3.6,"richards.TaskControlBlock.addInputAndCheckPriority",3.2,"richards.Scheduler$IdleProcessFunction.apply",2.5,"richards.TaskState.isWaitingWithPacket",2.0,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.TaskControlBlock.getIdentity",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.RBObject.append",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.IdleTaskDataRecord.setControl",1.0,"richards.Scheduler.queuePacket",0.9,"richards.Packet.getDatum",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.7,"richards.TaskState.setTaskHolding",0.7
100_7_Sieve_NoSlowdown.xml,100,7,Sieve,NoSlowdown,"Sieve.sieve",88.5,"java.util.Arrays.fill",10.0,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Sieve_Slowdown.xml,100,7,Sieve,Slowdown,"Sieve.sieve",90.7,"java.util.Arrays.fill",8.3,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.getSuiteFromName",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Storage_NoSlowdown.xml,100,7,Storage,NoSlowdown,"Storage.buildTreeDepth",59.8,"som.Arrays.setAll",36.2,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.9,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Storage_Slowdown.xml,100,7,Storage,Slowdown,"Storage.buildTreeDepth",61.5,"som.Arrays.setAll",34.0,"som.Random.next",3.4,"Storage.lambda$buildTreeDepth$0",1.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Towers_NoSlowdown.xml,100,7,Towers,NoSlowdown,"Towers.popDiskFrom",31.6,"Towers.moveDisks",20.3,"Towers.pushDisk",19.4,"Towers$TowersDisk.setNext",17.7,"Towers.moveTopDisk",7.3,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_7_Towers_Slowdown.xml,100,7,Towers,Slowdown,"Towers.popDiskFrom",33.9,"Towers.moveDisks",19.6,"Towers$TowersDisk.setNext",18.5,"Towers.pushDisk",18.5,"Towers.moveTopDisk",7.9,"Towers$TowersDisk.getSize",1.6,"java.io.PrintStream.println",0.0,"Towers.buildTowerAt",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.printResult",0.0,"Towers.benchmark",0.0,"Towers.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Bounce_NoSlowdown.xml,100,8,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.8,"Bounce.benchmark",25.3,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.4,"java.util.Arrays.setAll",1.4,"Bounce.lambda$benchmark$0",0.8,"som.Random.next",0.7,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Bounce_Slowdown.xml,100,8,Bounce,Slowdown,"Bounce$Ball.bounce",56.3,"Bounce.benchmark",36.1,"Bounce.lambda$benchmark$0",3.1,"java.lang.Math.abs",2.1,"Bounce$Ball.<init>",1.4,"java.util.Arrays.setAll",0.5,"som.Random.next",0.4,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.doRuns",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0
100_8_CD_NoSlowdown.xml,100,8,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.9,"cd.CollisionDetector.isInVoxel",12.6,"cd.RedBlackTree.put",10.1,"cd.CallSign.compareTo",7.6,"cd.RedBlackTree.findNode",7.1,"cd.Vector2D.compareTo",4.0,"cd.CallSign.compareTo",3.5,"cd.Vector2D.compareTo",2.8,"cd.Vector2D.compareNumbers",2.8,"cd.RedBlackTree.treeMinimum",2.6,"som.Vector.append",2.5,"cd.CollisionDetector.recurse",2.4,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",1.8,"cd.RedBlackTree$Node.successor",1.8,"cd.CollisionDetector.voxelHash",1.4,"cd.Simulator.simulate",1.4,"cd.Vector2D.plus",1.3
100_8_CD_Slowdown.xml,100,8,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.0,"cd.CollisionDetector.isInVoxel",13.6,"cd.RedBlackTree.put",11.1,"cd.RedBlackTree.findNode",9.4,"cd.CallSign.compareTo",7.0,"cd.Vector2D.compareTo",3.3,"cd.CallSign.compareTo",3.0,"cd.RedBlackTree$Node.successor",2.6,"cd.Vector2D.compareNumbers",2.5,"cd.RedBlackTree.leftRotate",2.4,"cd.RedBlackTree.treeMinimum",2.3,"cd.RedBlackTree.forEach",2.2,"cd.CollisionDetector.voxelHash",2.0,"cd.CollisionDetector.recurse",1.9,"cd.CollisionDetector.handleNewFrame",1.9,"cd.Vector2D.compareTo",1.9,"som.Vector.append",1.8,"som.Vector.<init>",1.5,"cd.Vector2D.plus",1.3,"cd.RedBlackTree.get",1.2
100_8_DeltaBlue_NoSlowdown.xml,100,8,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.5,"deltablue.Plan.execute",12.5,"som.Vector.forEach",7.0,"deltablue.EqualityConstraint.execute",6.2,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.3,"java.util.Vector.add",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"deltablue.AbstractConstraint.satisfy",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",1.0,"deltablue.Planner.removePropagateFrom",0.6,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
100_8_DeltaBlue_Slowdown.xml,100,8,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.3,"deltablue.Plan.execute",10.3,"deltablue.EqualityConstraint.execute",8.6,"som.Vector.forEach",5.4,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.4,"java.util.Vector.add",1.0,"som.Vector.append",0.9,"deltablue.AbstractConstraint.satisfy",0.9,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Planner.makePlan",0.7,"som.Vector.lambda$remove$0",0.6,"deltablue.Variable.getValue",0.6,"deltablue.Planner.removePropagateFrom",0.5,"som.Vector.<init>",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Planner.projectionTest",0.5,"som.Vector.removeFirst",0.4,"deltablue.BinaryConstraint.isSatisfied",0.4
100_8_Havlak_NoSlowdown.xml,100,8,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",20.3,"havlak.HavlakLoopFinder.findLoops",5.8,"som.Vector.append",5.8,"havlak.UnionFindNode.initNode",4.2,"som.Vector.forEach",4.2,"som.Vector.at",2.4,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.HavlakLoopFinder.stepD",2.1,"havlak.HavlakLoopFinder$5.apply",1.9,"som.Dictionary.at",1.3,"som.Vector.size",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.UnionFindNode.findSet",1.0,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"havlak.HavlakLoopFinder$1.apply",0.8,"java.lang.Integer.valueOf",0.7,"havlak.HavlakLoopFinder$2.apply",0.6
100_8_Havlak_Slowdown.xml,100,8,Havlak,Slowdown,"som.Vector.hasSome",29.1,"som.Vector.<init>",22.8,"som.Vector.append",11.8,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.at",3.4,"som.Vector.forEach",3.0,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.UnionFindNode.initNode",1.9,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.UnionFindNode.findSet",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",1.0,"havlak.HavlakLoopFinder$1.apply",0.9,"som.Dictionary.at",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"som.Set.<init>",0.6,"som.Vector.size",0.6,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.identifyEdges",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5
100_8_Json_NoSlowdown.xml,100,8,Json,NoSlowdown,"java.lang.String.equals",37.6,"java.lang.Character.toString",18.1,"json.JsonPureStringParser.read",8.0,"java.lang.StringBuilder.toString",3.5,"java.lang.StringBuilder.append",2.8,"json.JsonPureStringParser.subStringFromTo",2.8,"java.lang.String.charAt",2.5,"java.lang.String.hashCode",2.4,"json.JsonPureStringParser.readStringInternal",2.2,"som.Vector.append",2.1,"som.Vector.<init>",2.0,"json.JsonPureStringParser.readDigit",1.8,"json.JsonPureStringParser.endCapture",1.6,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.1,"java.lang.String.length",0.7,"json.JsonPureStringParser.isDigit",0.6
100_8_Json_Slowdown.xml,100,8,Json,Slowdown,"java.lang.String.equals",36.8,"java.lang.Character.toString",19.5,"json.JsonPureStringParser.read",7.1,"java.lang.String.charAt",4.0,"java.lang.StringBuilder.append",3.2,"json.JsonPureStringParser.subStringFromTo",3.1,"java.lang.StringBuilder.toString",2.7,"som.Vector.append",2.2,"java.lang.String.hashCode",1.9,"json.JsonPureStringParser.readStringInternal",1.9,"som.Vector.<init>",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isDigit",1.5,"java.lang.StringBuilder.<init>",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.readDigit",0.9,"java.lang.String.length",0.8
100_8_List_NoSlowdown.xml,100,8,List,NoSlowdown,"List$Element.getNext",45.5,"List.isShorterThan",43.8,"List.tail",9.8,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_List_Slowdown.xml,100,8,List,Slowdown,"List.isShorterThan",64.8,"List$Element.getNext",25.7,"List.tail",9.1,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"java.io.PrintStream.println",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"Run.measure",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Mandelbrot_NoSlowdown.xml,100,8,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Mandelbrot_Slowdown.xml,100,8,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_NBody_NoSlowdown.xml,100,8,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.8,"nbody.Body.setVX",12.3,"nbody.Body.setVY",3.4,"nbody.Body.getX",2.7,"nbody.Body.getZ",2.6,"nbody.Body.getVX",2.3,"nbody.Body.getVZ",2.1,"nbody.Body.getY",2.0,"nbody.Body.getVY",1.8,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.4,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.8,"NBody.innerBenchmarkLoop",0.3,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0,"",0,"",0
100_8_NBody_Slowdown.xml,100,8,NBody,Slowdown,"nbody.NBodySystem.advance",33.6,"NBody.innerBenchmarkLoop",14.9,"nbody.Body.getX",13.1,"nbody.Body.getZ",13.0,"nbody.Body.getY",11.8,"nbody.Body.setVX",5.9,"nbody.Body.getVX",1.6,"java.lang.Math.sqrt",1.5,"nbody.Body.setVY",1.4,"nbody.Body.getVZ",1.0,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.5,"nbody.Body.setX",0.4,"nbody.Body.getMass",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"",0,"",0
100_8_Permute_NoSlowdown.xml,100,8,Permute,NoSlowdown,"Permute.permute",71.3,"Permute.swap",28.5,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Permute_Slowdown.xml,100,8,Permute,Slowdown,"Permute.permute",64.5,"Permute.swap",35.4,"Run.printResult",0.0,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Queens_NoSlowdown.xml,100,8,Queens,NoSlowdown,"Queens.getRowColumn",54.9,"Queens.placeQueen",32.2,"Queens.setRowColumn",10.4,"Queens.queens",1.6,"java.util.Arrays.fill",0.4,"java.util.Arrays.fill",0.1,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Queens_Slowdown.xml,100,8,Queens,Slowdown,"Queens.getRowColumn",59.0,"Queens.placeQueen",23.8,"Queens.setRowColumn",15.8,"Queens.queens",0.9,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Richards_NoSlowdown.xml,100,8,Richards,NoSlowdown,"richards.Scheduler.schedule",25.2,"richards.TaskControlBlock.runTask",17.5,"richards.Scheduler$HandlerProcessFunction.apply",8.8,"richards.TaskState.isTaskHoldingOrWaiting",7.8,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler$IdleProcessFunction.apply",2.9,"richards.Packet.setLink",2.5,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Scheduler.findTask",2.1,"richards.DeviceTaskDataRecord.setPending",1.9,"richards.TaskControlBlock.getIdentity",1.9,"richards.TaskControlBlock.getLink",1.6,"richards.RBObject.append",1.6,"richards.Scheduler$WorkerProcessFunction.apply",1.5,"richards.TaskState.setTaskHolding",1.5,"richards.Scheduler.queuePacket",1.4,"richards.IdleTaskDataRecord.setControl",1.3,"richards.Packet.getDatum",0.9,"richards.Packet.getIdentity",0.8
100_8_Richards_Slowdown.xml,100,8,Richards,Slowdown,"richards.Scheduler.schedule",26.8,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",8.5,"richards.TaskState.isTaskHoldingOrWaiting",6.3,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.Scheduler.findTask",4.6,"richards.Packet.setLink",4.4,"richards.TaskControlBlock.addInputAndCheckPriority",3.4,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.TaskState.isWaitingWithPacket",1.9,"richards.TaskControlBlock.getIdentity",1.7,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.RBObject.append",1.0,"richards.IdleTaskDataRecord.setControl",1.0,"richards.Scheduler.queuePacket",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",0.9,"richards.Packet.getDatum",0.9,"richards.TaskState.setTaskHolding",0.8
100_8_Sieve_NoSlowdown.xml,100,8,Sieve,NoSlowdown,"Sieve.sieve",88.9,"java.util.Arrays.fill",10.0,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Sieve_Slowdown.xml,100,8,Sieve,Slowdown,"Sieve.sieve",90.4,"java.util.Arrays.fill",8.6,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Storage_NoSlowdown.xml,100,8,Storage,NoSlowdown,"Storage.buildTreeDepth",59.4,"som.Arrays.setAll",36.8,"som.Random.next",2.1,"Storage.lambda$buildTreeDepth$0",1.6,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Storage_Slowdown.xml,100,8,Storage,Slowdown,"Storage.buildTreeDepth",60.8,"som.Arrays.setAll",34.8,"som.Random.next",3.6,"Storage.lambda$buildTreeDepth$0",0.8,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Towers_NoSlowdown.xml,100,8,Towers,NoSlowdown,"Towers.popDiskFrom",32.3,"Towers.moveDisks",20.3,"Towers.pushDisk",18.6,"Towers$TowersDisk.setNext",17.3,"Towers.moveTopDisk",8.0,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_8_Towers_Slowdown.xml,100,8,Towers,Slowdown,"Towers.popDiskFrom",33.7,"Towers.moveDisks",20.2,"Towers$TowersDisk.setNext",18.3,"Towers.pushDisk",18.0,"Towers.moveTopDisk",8.0,"Towers$TowersDisk.getSize",1.8,"Run.printResult",0.0,"Towers.buildTowerAt",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Towers.benchmark",0.0,"Towers.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Bounce_NoSlowdown.xml,100,9,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.7,"Bounce.benchmark",26.4,"java.lang.Math.abs",4.2,"Bounce$Ball.<init>",3.1,"java.util.Arrays.setAll",1.3,"Bounce.lambda$benchmark$0",1.2,"som.Random.next",0.9,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Bounce_Slowdown.xml,100,9,Bounce,Slowdown,"Bounce$Ball.bounce",56.8,"Bounce.benchmark",35.2,"Bounce.lambda$benchmark$0",3.2,"java.lang.Math.abs",2.5,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.6,"som.Random.next",0.4,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_CD_NoSlowdown.xml,100,9,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.1,"cd.CollisionDetector.isInVoxel",13.7,"cd.RedBlackTree.put",10.9,"cd.CallSign.compareTo",8.2,"cd.RedBlackTree.findNode",6.4,"cd.Vector2D.compareTo",4.0,"cd.Vector2D.compareTo",3.5,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareNumbers",2.9,"cd.RedBlackTree.treeMinimum",2.6,"som.Vector.append",2.5,"cd.RedBlackTree.leftRotate",2.4,"cd.CollisionDetector.recurse",2.2,"cd.RedBlackTree.forEach",2.1,"som.Vector.<init>",1.9,"cd.CollisionDetector.handleNewFrame",1.9,"cd.RedBlackTree$Node.successor",1.7,"cd.Vector2D.<init>",1.3,"cd.Vector2D.plus",1.3,"cd.CollisionDetector.voxelHash",1.2
100_9_CD_Slowdown.xml,100,9,CD,Slowdown,"cd.RedBlackTree.treeInsert",17.9,"cd.CollisionDetector.isInVoxel",14.4,"cd.RedBlackTree.put",12.1,"cd.RedBlackTree.findNode",8.9,"cd.CallSign.compareTo",6.9,"cd.Vector2D.compareTo",3.1,"cd.CallSign.compareTo",3.0,"cd.RedBlackTree$Node.successor",2.8,"cd.CollisionDetector.recurse",2.3,"cd.RedBlackTree.leftRotate",2.3,"cd.Vector2D.compareNumbers",2.2,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree.treeMinimum",2.2,"cd.RedBlackTree.forEach",2.0,"cd.CollisionDetector.voxelHash",1.9,"cd.Vector2D.compareTo",1.8,"som.Vector.append",1.7,"som.Vector.<init>",1.4,"cd.Vector2D.plus",1.3,"cd.RedBlackTree$Node.<init>",1.0
100_9_DeltaBlue_NoSlowdown.xml,100,9,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.3,"deltablue.Plan.execute",13.2,"som.Vector.forEach",6.9,"deltablue.EqualityConstraint.execute",6.3,"deltablue.ScaleConstraint.execute",4.4,"deltablue.Planner.addPropagate",2.1,"java.util.Vector.add",1.4,"som.Vector.append",1.3,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.9,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.removePropagateFrom",0.7,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
100_9_DeltaBlue_Slowdown.xml,100,9,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",61.9,"deltablue.Plan.execute",8.9,"deltablue.EqualityConstraint.execute",8.3,"som.Vector.forEach",5.1,"deltablue.ScaleConstraint.execute",2.1,"deltablue.Planner.addPropagate",1.4,"java.util.Vector.add",1.1,"som.Vector.append",1.0,"deltablue.AbstractConstraint.satisfy",0.9,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Planner.makePlan",0.6,"som.Vector.lambda$remove$0",0.6,"deltablue.Variable.getValue",0.5,"som.Vector.removeFirst",0.5,"deltablue.BinaryConstraint.getOutput",0.4,"som.Vector.<init>",0.4,"deltablue.Planner.projectionTest",0.4,"deltablue.Planner.removePropagateFrom",0.4,"deltablue.Planner.addConstraintsConsumingTo",0.3
100_9_Havlak_NoSlowdown.xml,100,9,Havlak,NoSlowdown,"som.Vector.hasSome",33.0,"som.Vector.<init>",17.8,"som.Vector.append",6.1,"havlak.HavlakLoopFinder.findLoops",5.8,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",3.3,"som.Vector.at",2.9,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.HavlakLoopFinder.stepD",1.5,"som.Dictionary.at",1.5,"som.Vector.size",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Dictionary.transferEntries",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder$2.apply",0.8,"havlak.HavlakLoopFinder$1.apply",0.8
100_9_Havlak_Slowdown.xml,100,9,Havlak,Slowdown,"som.Vector.hasSome",29.2,"som.Vector.<init>",23.3,"som.Vector.append",11.0,"havlak.HavlakLoopFinder.findLoops",7.5,"som.Vector.at",3.4,"som.Vector.forEach",3.0,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.HavlakLoopFinder$5.apply",2.0,"havlak.UnionFindNode.initNode",1.9,"havlak.UnionFindNode.findSet",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",1.0,"havlak.HavlakLoopFinder$1.apply",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.6,"som.Vector.size",0.6,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"som.Set.<init>",0.5,"havlak.HavlakLoopFinder$2.apply",0.5
100_9_Json_NoSlowdown.xml,100,9,Json,NoSlowdown,"java.lang.String.equals",35.1,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",7.8,"java.lang.StringBuilder.append",4.0,"java.lang.StringBuilder.toString",3.5,"java.lang.String.hashCode",3.0,"java.lang.String.charAt",2.8,"som.Vector.append",2.7,"json.JsonPureStringParser.readStringInternal",2.4,"json.JsonPureStringParser.subStringFromTo",1.9,"java.lang.StringBuilder.<init>",1.8,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.endCapture",1.6,"json.JsonPureStringParser.readValue",1.6,"som.Vector.<init>",1.6,"json.JsonPureStringParser.readArray",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.6
100_9_Json_Slowdown.xml,100,9,Json,Slowdown,"java.lang.String.equals",35.9,"java.lang.Character.toString",19.8,"json.JsonPureStringParser.read",7.7,"java.lang.String.charAt",4.1,"json.JsonPureStringParser.subStringFromTo",3.4,"java.lang.StringBuilder.append",3.1,"java.lang.StringBuilder.toString",2.5,"som.Vector.<init>",2.1,"json.JsonPureStringParser.readStringInternal",2.0,"json.JsonPureStringParser.isWhiteSpace",1.9,"som.Vector.append",1.9,"json.JsonPureStringParser.readArray",1.6,"java.lang.StringBuilder.<init>",1.6,"java.lang.String.hashCode",1.5,"json.JsonPureStringParser.isDigit",1.5,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonObject$HashIndexTable.<init>",1.0,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.readDigit",0.9
100_9_List_NoSlowdown.xml,100,9,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",43.4,"List.tail",9.9,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_List_Slowdown.xml,100,9,List,Slowdown,"List.isShorterThan",65.0,"List$Element.getNext",25.4,"List.tail",9.1,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Mandelbrot_NoSlowdown.xml,100,9,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Mandelbrot_Slowdown.xml,100,9,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_NBody_NoSlowdown.xml,100,9,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.8,"nbody.Body.setVX",12.2,"nbody.Body.setVY",2.9,"nbody.Body.getVX",2.8,"nbody.Body.getZ",2.2,"nbody.Body.getY",2.0,"nbody.Body.getX",2.0,"nbody.Body.getVY",2.0,"nbody.Body.getVZ",1.9,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.5,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.4,"Run.measure",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0
100_9_NBody_Slowdown.xml,100,9,NBody,Slowdown,"nbody.NBodySystem.advance",33.8,"NBody.innerBenchmarkLoop",15.0,"nbody.Body.getX",14.1,"nbody.Body.getZ",13.0,"nbody.Body.getY",11.7,"nbody.Body.setVX",5.4,"nbody.Body.setVY",1.5,"nbody.Body.getVX",1.5,"java.lang.Math.sqrt",1.4,"nbody.Body.getVZ",0.9,"nbody.Body.getVY",0.7,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.3,"nbody.Body.setX",0.3,"nbody.Body.getMass",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0
100_9_Permute_NoSlowdown.xml,100,9,Permute,NoSlowdown,"Permute.permute",70.4,"Permute.swap",29.4,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Permute_Slowdown.xml,100,9,Permute,Slowdown,"Permute.permute",65.7,"Permute.swap",34.2,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Queens_NoSlowdown.xml,100,9,Queens,NoSlowdown,"Queens.getRowColumn",53.1,"Queens.placeQueen",32.8,"Queens.setRowColumn",11.2,"Queens.queens",1.8,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.3,"java.util.Arrays.fill",0.1,"java.io.PrintStream.println",0.1,"Queens.verifyResult",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Queens_Slowdown.xml,100,9,Queens,Slowdown,"Queens.getRowColumn",58.7,"Queens.placeQueen",23.4,"Queens.setRowColumn",16.7,"Queens.queens",0.8,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Boolean.booleanValue",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Richards_NoSlowdown.xml,100,9,Richards,NoSlowdown,"richards.Scheduler.schedule",24.4,"richards.TaskControlBlock.runTask",16.8,"richards.Scheduler$HandlerProcessFunction.apply",9.5,"richards.TaskState.isTaskHoldingOrWaiting",8.3,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.TaskControlBlock.addInputAndCheckPriority",4.2,"richards.Scheduler.findTask",2.7,"richards.Scheduler$IdleProcessFunction.apply",2.6,"richards.TaskState.isWaitingWithPacket",2.6,"richards.Packet.setLink",2.3,"richards.RBObject.append",2.0,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.TaskControlBlock.getLink",1.7,"richards.IdleTaskDataRecord.setControl",1.7,"richards.TaskControlBlock.getIdentity",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.TaskState.setTaskHolding",1.3,"richards.Scheduler.queuePacket",1.0,"richards.HandlerTaskDataRecord.deviceIn",0.9,"richards.Scheduler.holdSelf",0.8
100_9_Richards_Slowdown.xml,100,9,Richards,Slowdown,"richards.Scheduler.schedule",26.2,"richards.TaskControlBlock.runTask",18.6,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",6.6,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Scheduler.findTask",4.6,"richards.Packet.setLink",4.3,"richards.TaskControlBlock.addInputAndCheckPriority",3.3,"richards.Scheduler$IdleProcessFunction.apply",2.4,"richards.TaskState.isWaitingWithPacket",2.0,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.TaskControlBlock.getIdentity",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.IdleTaskDataRecord.setControl",1.1,"richards.Scheduler.queuePacket",1.1,"richards.RBObject.append",1.0,"richards.TaskState.setTaskHolding",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.Packet.getIdentity",0.8
100_9_Sieve_NoSlowdown.xml,100,9,Sieve,NoSlowdown,"Sieve.sieve",88.3,"java.util.Arrays.fill",10.6,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Sieve_Slowdown.xml,100,9,Sieve,Slowdown,"Sieve.sieve",90.8,"java.util.Arrays.fill",8.3,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Storage_NoSlowdown.xml,100,9,Storage,NoSlowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",35.2,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.8,"Storage.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Storage.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Storage_Slowdown.xml,100,9,Storage,Slowdown,"Storage.buildTreeDepth",61.5,"som.Arrays.setAll",34.3,"som.Random.next",3.4,"Storage.lambda$buildTreeDepth$0",0.7,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Towers_NoSlowdown.xml,100,9,Towers,NoSlowdown,"Towers.popDiskFrom",31.7,"Towers.moveDisks",20.5,"Towers.pushDisk",18.9,"Towers$TowersDisk.setNext",17.7,"Towers.moveTopDisk",7.7,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
100_9_Towers_Slowdown.xml,100,9,Towers,Slowdown,"Towers.popDiskFrom",32.5,"Towers.moveDisks",20.6,"Towers$TowersDisk.setNext",18.5,"Towers.pushDisk",18.1,"Towers.moveTopDisk",8.5,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Bounce_NoSlowdown.xml,150,10,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.9,"Bounce.benchmark",25.8,"java.lang.Math.abs",4.4,"Bounce$Ball.<init>",3.4,"Bounce.lambda$benchmark$0",1.3,"java.util.Arrays.setAll",1.3,"som.Random.next",0.7,"Bounce.verifyResult",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Bounce_Slowdown.xml,150,10,Bounce,Slowdown,"Bounce$Ball.bounce",51.1,"Bounce.benchmark",40.6,"Bounce.lambda$benchmark$0",3.8,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.5,"som.Random.next",0.3,"Run.printResult",0.0,"som.Random.<init>",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_CD_NoSlowdown.xml,150,10,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.7,"cd.CollisionDetector.isInVoxel",13.1,"cd.RedBlackTree.put",9.8,"cd.CallSign.compareTo",7.4,"cd.RedBlackTree.findNode",6.5,"cd.Vector2D.compareTo",3.8,"cd.CallSign.compareTo",3.2,"cd.Vector2D.compareNumbers",3.1,"cd.Vector2D.compareTo",3.1,"cd.RedBlackTree.treeMinimum",2.8,"som.Vector.append",2.5,"cd.CollisionDetector.recurse",2.5,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.handleNewFrame",2.3,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",2.1,"cd.RedBlackTree$Node.successor",1.7,"cd.CollisionDetector.voxelHash",1.4,"cd.Simulator.simulate",1.4,"cd.Vector2D.plus",1.3
150_10_CD_Slowdown.xml,150,10,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.8,"cd.CollisionDetector.isInVoxel",14.2,"cd.RedBlackTree.put",12.7,"cd.RedBlackTree.findNode",10.2,"cd.CallSign.compareTo",5.9,"cd.CallSign.compareTo",3.2,"cd.Vector2D.compareTo",3.1,"cd.Vector2D.compareNumbers",2.8,"cd.CollisionDetector.voxelHash",2.7,"cd.RedBlackTree.leftRotate",2.3,"cd.CollisionDetector.recurse",2.0,"cd.RedBlackTree.treeMinimum",1.5,"cd.Vector2D.compareTo",1.5,"cd.RedBlackTree.get",1.4,"cd.RedBlackTree.forEach",1.3,"cd.Vector2D.minus",1.3,"som.Vector.append",1.3,"cd.RedBlackTree$Node.successor",1.2,"som.Vector.<init>",1.2,"cd.Vector2D.plus",1.1
150_10_DeltaBlue_NoSlowdown.xml,150,10,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.1,"deltablue.Plan.execute",12.3,"som.Vector.forEach",7.1,"deltablue.EqualityConstraint.execute",6.2,"deltablue.ScaleConstraint.execute",4.6,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.4,"deltablue.AbstractConstraint.satisfy",1.4,"java.util.Vector.add",1.2,"deltablue.ScaleConstraint.recalculate",1.1,"som.Vector.lambda$remove$0",1.1,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4,"deltablue.Variable.setWalkStrength",0.4
150_10_DeltaBlue_Slowdown.xml,150,10,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",55.7,"deltablue.Plan.execute",11.9,"deltablue.EqualityConstraint.execute",8.6,"som.Vector.forEach",5.2,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",0.9,"java.util.Vector.add",0.8,"som.Vector.removeFirst",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.AbstractConstraint.satisfy",0.8,"deltablue.AbstractConstraint.inputsKnown",0.8,"som.Vector.<init>",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.projectionTest",0.6,"som.Vector.lambda$remove$0",0.5,"deltablue.Variable.getValue",0.5,"som.Vector.with",0.4
150_10_Havlak_NoSlowdown.xml,150,10,Havlak,NoSlowdown,"som.Vector.hasSome",31.4,"som.Vector.<init>",20.2,"som.Vector.append",6.1,"havlak.HavlakLoopFinder.findLoops",5.9,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",3.9,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder.stepD",1.9,"havlak.HavlakLoopFinder$5.apply",1.8,"som.Dictionary.at",1.6,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",0.9,"havlak.HavlakLoopFinder$1.apply",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder$2.apply",0.6
150_10_Havlak_Slowdown.xml,150,10,Havlak,Slowdown,"som.Vector.hasSome",34.9,"som.Vector.<init>",22.4,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",3.8,"som.Vector.at",3.5,"havlak.HavlakLoopFinder.doDFS",3.5,"som.Vector.forEach",3.3,"havlak.UnionFindNode.initNode",1.9,"havlak.HavlakLoopFinder$5.apply",1.5,"havlak.UnionFindNode.findSet",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"som.Dictionary.at",0.7,"som.Vector.size",0.7,"havlak.HavlakLoopFinder$1.apply",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepD",0.6,"som.Dictionary.atPut",0.6
150_10_Json_NoSlowdown.xml,150,10,Json,NoSlowdown,"java.lang.String.equals",35.1,"java.lang.Character.toString",18.9,"json.JsonPureStringParser.read",8.2,"java.lang.StringBuilder.toString",3.4,"java.lang.StringBuilder.append",3.3,"json.JsonPureStringParser.subStringFromTo",2.7,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.String.hashCode",2.6,"java.lang.String.charAt",2.5,"som.Vector.<init>",2.2,"som.Vector.append",2.2,"json.JsonPureStringParser.readValue",2.1,"json.JsonPureStringParser.isWhiteSpace",2.0,"json.JsonPureStringParser.endCapture",1.7,"json.JsonPureStringParser.readArray",1.7,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.isDigit",0.7,"java.lang.String.length",0.6
150_10_Json_Slowdown.xml,150,10,Json,Slowdown,"java.lang.String.equals",37.0,"java.lang.Character.toString",20.0,"json.JsonPureStringParser.read",6.4,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",2.9,"java.lang.StringBuilder.append",2.8,"json.JsonPureStringParser.readStringInternal",2.5,"java.lang.StringBuilder.toString",2.4,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.String.hashCode",2.1,"json.JsonPureStringParser.readValue",2.0,"som.Vector.append",1.8,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.readArray",1.6,"som.Vector.<init>",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.isDigit",1.3,"java.lang.String.length",1.1,"json.JsonPureStringParser.endCapture",0.9,"json.JsonPureStringParser.readDigit",0.9
150_10_List_NoSlowdown.xml,150,10,List,NoSlowdown,"List$Element.getNext",45.8,"List.isShorterThan",42.9,"List.tail",10.4,"List.makeList",0.6,"java.lang.Integer.valueOf",0.2,"java.io.PrintStream.println",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_List_Slowdown.xml,150,10,List,Slowdown,"List.isShorterThan",67.8,"List$Element.getNext",21.9,"List.tail",9.9,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Mandelbrot_NoSlowdown.xml,150,10,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Mandelbrot_Slowdown.xml,150,10,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Mandelbrot.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_NBody_NoSlowdown.xml,150,10,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.0,"nbody.Body.setVX",12.4,"nbody.Body.setVY",3.1,"nbody.Body.getZ",2.8,"nbody.Body.getVX",2.4,"nbody.Body.getX",2.4,"nbody.Body.getVZ",2.2,"nbody.Body.getY",1.9,"nbody.Body.getVY",1.8,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.5,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"Run.measure",0.0,"Run.printTotal",0.0,"nbody.Body.getMass",0.0,"",0,"",0
150_10_NBody_Slowdown.xml,150,10,NBody,Slowdown,"nbody.NBodySystem.advance",26.5,"NBody.innerBenchmarkLoop",17.3,"nbody.Body.getX",16.5,"nbody.Body.getZ",15.4,"nbody.Body.getY",13.9,"nbody.Body.setVX",4.5,"java.lang.Math.sqrt",1.2,"nbody.Body.getVX",1.2,"nbody.Body.setVY",1.1,"nbody.Body.getVZ",0.7,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.4,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.2,"java.io.PrintStream.println",0.0,"nbody.Body.getMass",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"nbody.Body.setY",0.0
150_10_Permute_NoSlowdown.xml,150,10,Permute,NoSlowdown,"Permute.permute",70.4,"Permute.swap",29.4,"Permute.benchmark",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Permute_Slowdown.xml,150,10,Permute,Slowdown,"Permute.permute",63.9,"Permute.swap",35.8,"Run.measure",0.2,"Permute.verifyResult",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Queens_NoSlowdown.xml,150,10,Queens,NoSlowdown,"Queens.getRowColumn",55.7,"Queens.placeQueen",30.6,"Queens.setRowColumn",11.0,"Queens.queens",1.6,"java.util.Arrays.fill",0.6,"Queens.benchmark",0.2,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Queens_Slowdown.xml,150,10,Queens,Slowdown,"Queens.getRowColumn",61.4,"Queens.placeQueen",22.6,"Queens.setRowColumn",14.7,"Queens.queens",0.8,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"Run.measure",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Richards_NoSlowdown.xml,150,10,Richards,NoSlowdown,"richards.Scheduler.schedule",24.3,"richards.TaskControlBlock.runTask",17.1,"richards.Scheduler$HandlerProcessFunction.apply",8.4,"richards.TaskState.isTaskHoldingOrWaiting",8.2,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",3.5,"richards.Scheduler.findTask",2.9,"richards.TaskState.isWaitingWithPacket",2.6,"richards.Packet.setLink",2.2,"richards.DeviceTaskDataRecord.setPending",2.1,"richards.TaskControlBlock.getLink",1.8,"richards.IdleTaskDataRecord.setControl",1.6,"richards.TaskControlBlock.getIdentity",1.5,"richards.RBObject.append",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.Scheduler.queuePacket",1.3,"richards.TaskState.setTaskHolding",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Scheduler.holdSelf",0.9
150_10_Richards_Slowdown.xml,150,10,Richards,Slowdown,"richards.Scheduler.schedule",27.6,"richards.TaskControlBlock.runTask",20.3,"richards.Scheduler$HandlerProcessFunction.apply",9.0,"richards.TaskState.isTaskHoldingOrWaiting",7.1,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Packet.setLink",4.5,"richards.Scheduler.findTask",3.1,"richards.TaskControlBlock.addInputAndCheckPriority",2.9,"richards.TaskState.isWaitingWithPacket",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.Scheduler.queuePacket",1.5,"richards.Scheduler$IdleProcessFunction.apply",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.RBObject.append",1.2,"richards.Packet.getDatum",1.0,"richards.IdleTaskDataRecord.setControl",0.8,"richards.TaskState.setTaskHolding",0.7,"richards.Scheduler$WorkerProcessFunction.apply",0.7,"richards.Scheduler.holdSelf",0.7
150_10_Sieve_NoSlowdown.xml,150,10,Sieve,NoSlowdown,"Sieve.sieve",88.7,"java.util.Arrays.fill",10.1,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Sieve_Slowdown.xml,150,10,Sieve,Slowdown,"Sieve.sieve",91.4,"java.util.Arrays.fill",7.5,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Sieve.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Storage_NoSlowdown.xml,150,10,Storage,NoSlowdown,"Storage.buildTreeDepth",79.5,"som.Arrays.setAll",12.3,"som.Random.next",6.7,"Storage.lambda$buildTreeDepth$0",1.4,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Storage_Slowdown.xml,150,10,Storage,Slowdown,"Storage.buildTreeDepth",82.4,"som.Arrays.setAll",13.0,"som.Random.next",4.0,"Storage.lambda$buildTreeDepth$0",0.6,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Storage.benchmark",0.0,"Storage.verifyResult",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Towers_NoSlowdown.xml,150,10,Towers,NoSlowdown,"Towers.popDiskFrom",30.6,"Towers.moveDisks",20.7,"Towers.pushDisk",19.7,"Towers$TowersDisk.setNext",18.3,"Towers.moveTopDisk",7.0,"Towers$TowersDisk.getSize",3.4,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_10_Towers_Slowdown.xml,150,10,Towers,Slowdown,"Towers.popDiskFrom",34.1,"Towers.moveDisks",21.0,"Towers$TowersDisk.setNext",18.2,"Towers.pushDisk",16.0,"Towers.moveTopDisk",8.9,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Bounce_NoSlowdown.xml,150,1,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.0,"Bounce.benchmark",25.9,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.3,"Bounce.lambda$benchmark$0",1.3,"java.util.Arrays.setAll",1.2,"som.Random.next",0.7,"Bounce.verifyResult",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Bounce_Slowdown.xml,150,1,Bounce,Slowdown,"Bounce$Ball.bounce",50.9,"Bounce.benchmark",40.8,"Bounce.lambda$benchmark$0",3.5,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.4,"java.util.Arrays.setAll",0.7,"som.Random.next",0.3,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_CD_NoSlowdown.xml,150,1,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",17.0,"cd.CollisionDetector.isInVoxel",12.0,"cd.RedBlackTree.put",10.5,"cd.CallSign.compareTo",7.8,"cd.RedBlackTree.findNode",6.9,"cd.Vector2D.compareTo",3.7,"cd.RedBlackTree.treeMinimum",3.2,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.8,"som.Vector.append",2.7,"cd.Vector2D.compareNumbers",2.7,"cd.CollisionDetector.recurse",2.6,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree.leftRotate",2.2,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.<init>",1.6,"cd.Simulator.simulate",1.6,"cd.Vector2D.plus",1.4,"cd.CollisionDetector.voxelHash",1.2
150_1_CD_Slowdown.xml,150,1,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.7,"cd.CollisionDetector.isInVoxel",14.7,"cd.RedBlackTree.put",12.6,"cd.RedBlackTree.findNode",10.1,"cd.CallSign.compareTo",6.0,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",3.0,"cd.Vector2D.compareNumbers",2.8,"cd.RedBlackTree.leftRotate",2.6,"cd.CollisionDetector.voxelHash",2.3,"cd.CollisionDetector.recurse",2.0,"som.Vector.append",1.5,"cd.Vector2D.compareTo",1.4,"cd.RedBlackTree.treeMinimum",1.4,"som.Vector.<init>",1.3,"cd.RedBlackTree.forEach",1.3,"cd.RedBlackTree$Node.successor",1.3,"cd.CollisionDetector.handleNewFrame",1.1,"cd.RedBlackTree$Node.<init>",1.1,"cd.RedBlackTree.get",1.1
150_1_DeltaBlue_NoSlowdown.xml,150,1,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.1,"deltablue.Plan.execute",10.9,"som.Vector.forEach",6.0,"deltablue.EqualityConstraint.execute",5.0,"deltablue.Planner.addPropagate",2.2,"deltablue.ScaleConstraint.execute",2.2,"som.Vector.append",1.6,"java.util.Vector.add",1.5,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.0,"som.Vector.<init>",0.9,"som.Vector.lambda$remove$0",0.8,"deltablue.Planner.makePlan",0.8,"deltablue.Planner.addConstraintsConsumingTo",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.BinaryConstraint.isSatisfied",0.4,"deltablue.Variable.setWalkStrength",0.4
150_1_DeltaBlue_Slowdown.xml,150,1,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.7,"deltablue.Plan.execute",10.1,"deltablue.EqualityConstraint.execute",6.9,"som.Vector.forEach",5.4,"deltablue.ScaleConstraint.execute",2.7,"deltablue.Planner.addPropagate",1.8,"som.Vector.removeFirst",0.9,"som.Vector.append",0.9,"deltablue.BinaryConstraint.getOutput",0.9,"java.util.Vector.add",0.8,"som.Vector.<init>",0.8,"deltablue.Planner.projectionTest",0.8,"deltablue.AbstractConstraint.satisfy",0.8,"deltablue.Planner.makePlan",0.8,"deltablue.ScaleConstraint.recalculate",0.7,"som.Vector.lambda$remove$0",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Variable.getValue",0.5,"deltablue.Planner.removePropagateFrom",0.4
150_1_Havlak_NoSlowdown.xml,150,1,Havlak,NoSlowdown,"som.Vector.hasSome",36.3,"som.Vector.<init>",15.8,"som.Vector.append",6.7,"havlak.HavlakLoopFinder.findLoops",5.9,"som.Vector.forEach",4.4,"havlak.UnionFindNode.initNode",3.1,"som.Vector.at",2.4,"havlak.HavlakLoopFinder.doDFS",2.3,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.HavlakLoopFinder.stepD",1.5,"som.Dictionary.at",1.4,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Vector.size",0.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",0.9,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.7,"som.Dictionary.insertBucketEntry",0.7
150_1_Havlak_Slowdown.xml,150,1,Havlak,Slowdown,"som.Vector.hasSome",33.0,"som.Vector.<init>",22.8,"havlak.HavlakLoopFinder.findLoops",7.7,"som.Vector.append",3.8,"som.Vector.at",3.7,"havlak.HavlakLoopFinder.doDFS",3.4,"som.Vector.forEach",3.0,"havlak.UnionFindNode.initNode",2.2,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.4,"havlak.UnionFindNode.findSet",1.3,"som.Vector.size",1.0,"havlak.HavlakLoopFinder.stepD",1.0,"havlak.HavlakLoopFinder$1.apply",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.UnionFindNode.getBb",0.8,"som.Dictionary.at",0.6,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"som.Dictionary.atPut",0.5
150_1_Json_NoSlowdown.xml,150,1,Json,NoSlowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",8.3,"java.lang.StringBuilder.append",3.8,"java.lang.StringBuilder.toString",3.5,"json.JsonPureStringParser.readStringInternal",2.6,"som.Vector.append",2.5,"java.lang.String.charAt",2.5,"json.JsonPureStringParser.subStringFromTo",2.2,"som.Vector.<init>",2.1,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.endCapture",1.4,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"java.lang.StringBuilder.<init>",1.2,"json.JsonPureStringParser.readArray",1.1,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.6
150_1_Json_Slowdown.xml,150,1,Json,Slowdown,"java.lang.String.equals",35.8,"java.lang.Character.toString",20.1,"json.JsonPureStringParser.read",6.4,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.1,"java.lang.StringBuilder.append",2.6,"json.JsonPureStringParser.isWhiteSpace",2.6,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.StringBuilder.toString",2.4,"json.JsonPureStringParser.readValue",2.1,"java.lang.String.hashCode",2.0,"java.lang.StringBuilder.<init>",1.8,"som.Vector.<init>",1.8,"json.JsonPureStringParser.readArray",1.7,"som.Vector.append",1.6,"json.JsonPureStringParser.isDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"java.lang.String.length",1.0,"json.JsonPureStringParser.endCapture",1.0,"json.JsonPureStringParser.readChar",0.9
150_1_List_NoSlowdown.xml,150,1,List,NoSlowdown,"List$Element.getNext",46.4,"List.isShorterThan",43.0,"List.tail",9.7,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_List_Slowdown.xml,150,1,List,Slowdown,"List.isShorterThan",68.0,"List$Element.getNext",21.9,"List.tail",9.7,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Mandelbrot_NoSlowdown.xml,150,1,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.reportBenchmark",0.0,"Run.doRuns",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Mandelbrot_Slowdown.xml,150,1,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_NBody_NoSlowdown.xml,150,1,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.4,"nbody.Body.setVX",12.2,"nbody.Body.setVY",3.3,"nbody.Body.getVX",2.7,"nbody.Body.getZ",2.6,"nbody.Body.getX",2.2,"nbody.Body.getY",1.9,"nbody.Body.getVY",1.7,"nbody.Body.getVZ",1.7,"java.lang.Math.sqrt",1.6,"nbody.Body.setVZ",1.4,"nbody.Body.setX",1.0,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.4,"java.io.PrintStream.println",0.1,"nbody.Body.getMass",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0
150_1_NBody_Slowdown.xml,150,1,NBody,Slowdown,"nbody.NBodySystem.advance",26.9,"NBody.innerBenchmarkLoop",17.6,"nbody.Body.getX",16.3,"nbody.Body.getZ",15.7,"nbody.Body.getY",13.4,"nbody.Body.setVX",4.3,"nbody.Body.setVY",1.3,"nbody.Body.getVX",1.3,"java.lang.Math.sqrt",1.0,"nbody.Body.getVZ",0.8,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.2,"nbody.Body.setX",0.2,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0
150_1_Permute_NoSlowdown.xml,150,1,Permute,NoSlowdown,"Permute.permute",69.9,"Permute.swap",29.9,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Permute_Slowdown.xml,150,1,Permute,Slowdown,"Permute.permute",63.2,"Permute.swap",36.6,"Run.measure",0.1,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Permute.benchmark",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Queens_NoSlowdown.xml,150,1,Queens,NoSlowdown,"Queens.getRowColumn",54.6,"Queens.placeQueen",31.9,"Queens.setRowColumn",10.7,"Queens.queens",1.6,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"Run.printResult",0.1,"java.util.Arrays.fill",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Queens.verifyResult",0.1,"java.io.PrintStream.println",0.1,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Queens_Slowdown.xml,150,1,Queens,Slowdown,"Queens.getRowColumn",60.4,"Queens.placeQueen",23.5,"Queens.setRowColumn",14.7,"Queens.queens",0.8,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"Queens.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.util.Arrays.fill",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Richards_NoSlowdown.xml,150,1,Richards,NoSlowdown,"richards.Scheduler.schedule",24.0,"richards.TaskControlBlock.runTask",16.6,"richards.Scheduler$HandlerProcessFunction.apply",9.6,"richards.TaskState.isTaskHoldingOrWaiting",7.8,"richards.Scheduler$DeviceProcessFunction.apply",6.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.5,"richards.Scheduler$IdleProcessFunction.apply",2.8,"richards.Packet.setLink",2.5,"richards.Scheduler.findTask",2.5,"richards.TaskState.isWaitingWithPacket",2.5,"richards.DeviceTaskDataRecord.setPending",2.1,"richards.RBObject.append",1.9,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskControlBlock.getLink",1.7,"richards.Scheduler.queuePacket",1.5,"richards.TaskState.setTaskHolding",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.IdleTaskDataRecord.setControl",1.1,"richards.HandlerTaskDataRecord.deviceInAdd",0.8
150_1_Richards_Slowdown.xml,150,1,Richards,Slowdown,"richards.Scheduler.schedule",28.6,"richards.TaskControlBlock.runTask",19.7,"richards.Scheduler$HandlerProcessFunction.apply",8.3,"richards.TaskState.isTaskHoldingOrWaiting",7.7,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Packet.setLink",4.4,"richards.Scheduler.findTask",3.3,"richards.TaskControlBlock.addInputAndCheckPriority",3.1,"richards.TaskState.isWaitingWithPacket",2.1,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.Scheduler$IdleProcessFunction.apply",1.5,"richards.Scheduler.queuePacket",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Packet.getDatum",1.0,"richards.RBObject.append",1.0,"richards.Scheduler$WorkerProcessFunction.apply",0.9,"richards.IdleTaskDataRecord.setControl",0.8,"richards.TaskState.setTaskHolding",0.7,"richards.HandlerTaskDataRecord.deviceInAdd",0.6
150_1_Sieve_NoSlowdown.xml,150,1,Sieve,NoSlowdown,"Sieve.sieve",88.6,"java.util.Arrays.fill",10.4,"Sieve.benchmark",0.9,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Sieve_Slowdown.xml,150,1,Sieve,Slowdown,"Sieve.sieve",91.5,"java.util.Arrays.fill",7.5,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Storage_NoSlowdown.xml,150,1,Storage,NoSlowdown,"Storage.buildTreeDepth",78.5,"som.Arrays.setAll",12.9,"som.Random.next",7.0,"Storage.lambda$buildTreeDepth$0",1.3,"Run.reportBenchmark",0.0,"Storage.verifyResult",0.0,"Run.printResult",0.0,"Storage.benchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Storage_Slowdown.xml,150,1,Storage,Slowdown,"Storage.buildTreeDepth",81.7,"som.Arrays.setAll",13.4,"som.Random.next",4.2,"Storage.lambda$buildTreeDepth$0",0.6,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Storage.verifyResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"Storage.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Towers_NoSlowdown.xml,150,1,Towers,NoSlowdown,"Towers.popDiskFrom",32.1,"Towers.moveDisks",20.6,"Towers.pushDisk",18.9,"Towers$TowersDisk.setNext",18.2,"Towers.moveTopDisk",6.6,"Towers$TowersDisk.getSize",3.2,"Run.printResult",0.1,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_1_Towers_Slowdown.xml,150,1,Towers,Slowdown,"Towers.popDiskFrom",34.1,"Towers.moveDisks",21.3,"Towers$TowersDisk.setNext",18.0,"Towers.pushDisk",16.0,"Towers.moveTopDisk",8.8,"Towers$TowersDisk.getSize",1.6,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Bounce_NoSlowdown.xml,150,2,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.6,"Bounce.benchmark",26.1,"java.lang.Math.abs",4.7,"Bounce$Ball.<init>",3.4,"Bounce.lambda$benchmark$0",1.3,"java.util.Arrays.setAll",1.0,"som.Random.next",0.7,"java.lang.Integer.valueOf",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Bounce_Slowdown.xml,150,2,Bounce,Slowdown,"Bounce$Ball.bounce",51.6,"Bounce.benchmark",40.1,"Bounce.lambda$benchmark$0",3.7,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.6,"som.Random.next",0.3,"Run.printResult",0.0,"Bounce.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_CD_NoSlowdown.xml,150,2,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",12.3,"cd.RedBlackTree.put",10.3,"cd.CallSign.compareTo",8.1,"cd.RedBlackTree.findNode",6.7,"cd.Vector2D.compareTo",4.0,"cd.RedBlackTree.treeMinimum",3.3,"cd.CallSign.compareTo",2.9,"cd.Vector2D.compareNumbers",2.8,"som.Vector.append",2.6,"cd.Vector2D.compareTo",2.6,"cd.CollisionDetector.handleNewFrame",2.4,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.recurse",2.3,"cd.RedBlackTree$Node.successor",2.0,"cd.RedBlackTree.leftRotate",1.8,"cd.Simulator.simulate",1.6,"som.Vector.<init>",1.6,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.plus",1.4
150_2_CD_Slowdown.xml,150,2,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.8,"cd.CollisionDetector.isInVoxel",14.1,"cd.RedBlackTree.put",12.6,"cd.RedBlackTree.findNode",10.6,"cd.CallSign.compareTo",6.5,"cd.CallSign.compareTo",3.2,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.6,"cd.CollisionDetector.voxelHash",2.4,"cd.RedBlackTree.leftRotate",2.4,"cd.CollisionDetector.recurse",2.2,"som.Vector.append",1.4,"cd.Vector2D.compareTo",1.4,"cd.Vector2D.plus",1.3,"cd.RedBlackTree$Node.successor",1.3,"cd.CollisionDetector.handleNewFrame",1.3,"cd.RedBlackTree.treeMinimum",1.3,"som.Vector.<init>",1.2,"cd.RedBlackTree.get",1.2,"cd.RedBlackTree.forEach",1.2
150_2_DeltaBlue_NoSlowdown.xml,150,2,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.9,"deltablue.Plan.execute",12.6,"deltablue.EqualityConstraint.execute",6.9,"som.Vector.forEach",6.5,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",2.4,"som.Vector.append",1.4,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"java.util.Vector.add",1.2,"deltablue.Planner.makePlan",1.0,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4,"deltablue.Variable.setWalkStrength",0.4
150_2_DeltaBlue_Slowdown.xml,150,2,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.0,"deltablue.Plan.execute",10.4,"deltablue.EqualityConstraint.execute",7.1,"som.Vector.forEach",5.4,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.0,"som.Vector.removeFirst",0.8,"java.util.Vector.add",0.8,"som.Vector.<init>",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.Planner.makePlan",0.8,"deltablue.AbstractConstraint.satisfy",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"som.Vector.lambda$remove$0",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Variable.getValue",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Variable.getStay",0.5
150_2_Havlak_NoSlowdown.xml,150,2,Havlak,NoSlowdown,"som.Vector.hasSome",36.0,"som.Vector.<init>",16.2,"som.Vector.append",6.4,"havlak.HavlakLoopFinder.findLoops",6.2,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",3.1,"som.Vector.at",2.5,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Vector.size",1.5,"som.Dictionary.at",1.5,"havlak.HavlakLoopFinder.stepD",1.4,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",0.8,"som.Dictionary.transferEntries",0.8,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder$1.apply",0.7
150_2_Havlak_Slowdown.xml,150,2,Havlak,Slowdown,"som.Vector.hasSome",33.5,"som.Vector.<init>",23.0,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",3.9,"som.Vector.at",3.7,"havlak.HavlakLoopFinder.doDFS",3.4,"som.Vector.forEach",2.9,"havlak.UnionFindNode.initNode",2.2,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.UnionFindNode.findSet",1.3,"som.Vector.size",1.0,"havlak.HavlakLoopFinder$1.apply",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.UnionFindNode.getBb",0.8,"som.Dictionary.at",0.6,"havlak.HavlakLoopFinder.stepD",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"som.Set.<init>",0.5,"havlak.HavlakLoopFinder.processEdges",0.5
150_2_Json_NoSlowdown.xml,150,2,Json,NoSlowdown,"java.lang.String.equals",37.8,"java.lang.Character.toString",17.9,"json.JsonPureStringParser.read",8.1,"java.lang.StringBuilder.toString",3.4,"java.lang.StringBuilder.append",3.1,"java.lang.String.charAt",2.9,"json.JsonPureStringParser.subStringFromTo",2.4,"json.JsonPureStringParser.readStringInternal",2.3,"som.Vector.<init>",2.3,"java.lang.String.hashCode",2.3,"som.Vector.append",2.0,"json.JsonPureStringParser.readValue",1.8,"json.JsonPureStringParser.readDigit",1.7,"json.JsonPureStringParser.endCapture",1.6,"json.JsonPureStringParser.readArray",1.5,"java.lang.StringBuilder.<init>",1.5,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.readObject",0.7
150_2_Json_Slowdown.xml,150,2,Json,Slowdown,"java.lang.String.equals",36.3,"java.lang.Character.toString",19.8,"json.JsonPureStringParser.read",6.8,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.1,"java.lang.StringBuilder.toString",2.7,"json.JsonPureStringParser.readStringInternal",2.7,"java.lang.StringBuilder.append",2.6,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.String.hashCode",2.0,"som.Vector.append",2.0,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readValue",1.9,"som.Vector.<init>",1.6,"json.JsonPureStringParser.readArray",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.0,"java.lang.String.length",1.0,"json.JsonPureStringParser.endCapture",0.8,"json.JsonPureStringParser.isDigit",0.8
150_2_List_NoSlowdown.xml,150,2,List,NoSlowdown,"List$Element.getNext",46.3,"List.isShorterThan",43.1,"List.tail",9.7,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_List_Slowdown.xml,150,2,List,Slowdown,"List.isShorterThan",68.3,"List$Element.getNext",21.5,"List.tail",9.9,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"List.benchmark",0.0,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Mandelbrot_NoSlowdown.xml,150,2,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Mandelbrot.verifyResult",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Mandelbrot_Slowdown.xml,150,2,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_NBody_NoSlowdown.xml,150,2,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.6,"nbody.Body.setVX",11.8,"nbody.Body.setVY",3.9,"nbody.Body.getX",2.9,"nbody.Body.getZ",2.7,"nbody.Body.getVX",2.6,"nbody.Body.getVY",2.1,"nbody.Body.getVZ",1.9,"nbody.Body.getY",1.9,"java.lang.Math.sqrt",1.5,"nbody.Body.setVZ",1.3,"nbody.Body.setZ",0.6,"nbody.Body.setX",0.6,"NBody.innerBenchmarkLoop",0.2,"nbody.Body.getMass",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
150_2_NBody_Slowdown.xml,150,2,NBody,Slowdown,"nbody.NBodySystem.advance",26.7,"NBody.innerBenchmarkLoop",16.8,"nbody.Body.getX",16.5,"nbody.Body.getZ",15.9,"nbody.Body.getY",13.7,"nbody.Body.setVX",4.6,"nbody.Body.getVX",1.3,"nbody.Body.setVY",1.2,"java.lang.Math.sqrt",1.1,"nbody.Body.getVZ",0.6,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.2,"nbody.Body.setX",0.2,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.measure",0.0,"java.lang.System.nanoTime",0.0,"",0
150_2_Permute_NoSlowdown.xml,150,2,Permute,NoSlowdown,"Permute.permute",70.1,"Permute.swap",29.6,"Run.printResult",0.1,"Run.reportBenchmark",0.1,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Permute_Slowdown.xml,150,2,Permute,Slowdown,"Permute.permute",64.1,"Permute.swap",35.7,"Run.measure",0.2,"Permute.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.benchmark",0.0,"Run.doRuns",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Queens_NoSlowdown.xml,150,2,Queens,NoSlowdown,"Queens.getRowColumn",55.2,"Queens.placeQueen",30.9,"Queens.setRowColumn",11.6,"Queens.queens",1.6,"java.util.Arrays.fill",0.6,"Queens.benchmark",0.1,"Queens.verifyResult",0.1,"Run.printResult",0.1,"Run.printTotal",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Queens_Slowdown.xml,150,2,Queens,Slowdown,"Queens.getRowColumn",61.3,"Queens.placeQueen",23.4,"Queens.setRowColumn",14.1,"Queens.queens",0.8,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Queens.verifyResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Richards_NoSlowdown.xml,150,2,Richards,NoSlowdown,"richards.Scheduler.schedule",24.7,"richards.TaskControlBlock.runTask",17.5,"richards.Scheduler$HandlerProcessFunction.apply",10.2,"richards.TaskState.isTaskHoldingOrWaiting",7.5,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.TaskControlBlock.addInputAndCheckPriority",3.8,"richards.TaskState.isWaitingWithPacket",2.6,"richards.Scheduler$IdleProcessFunction.apply",2.5,"richards.Packet.setLink",2.3,"richards.Scheduler.findTask",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.IdleTaskDataRecord.setControl",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.RBObject.append",1.6,"richards.TaskControlBlock.getLink",1.5,"richards.Scheduler.queuePacket",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.TaskState.setTaskHolding",1.0,"richards.Packet.getIdentity",0.9
150_2_Richards_Slowdown.xml,150,2,Richards,Slowdown,"richards.Scheduler.schedule",28.0,"richards.TaskControlBlock.runTask",20.2,"richards.Scheduler$HandlerProcessFunction.apply",8.9,"richards.TaskState.isTaskHoldingOrWaiting",7.1,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Packet.setLink",4.7,"richards.Scheduler.findTask",3.1,"richards.TaskControlBlock.addInputAndCheckPriority",3.0,"richards.TaskState.isWaitingWithPacket",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.Scheduler.queuePacket",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.Scheduler$IdleProcessFunction.apply",1.3,"richards.RBObject.append",1.1,"richards.Packet.getDatum",1.0,"richards.Scheduler$WorkerProcessFunction.apply",0.8,"richards.IdleTaskDataRecord.setControl",0.8,"richards.TaskState.setTaskHolding",0.7,"richards.HandlerTaskDataRecord.deviceInAdd",0.6
150_2_Sieve_NoSlowdown.xml,150,2,Sieve,NoSlowdown,"Sieve.sieve",88.2,"java.util.Arrays.fill",10.7,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Sieve.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Sieve_Slowdown.xml,150,2,Sieve,Slowdown,"Sieve.sieve",91.6,"java.util.Arrays.fill",7.3,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Storage_NoSlowdown.xml,150,2,Storage,NoSlowdown,"Storage.buildTreeDepth",79.4,"som.Arrays.setAll",12.7,"som.Random.next",6.5,"Storage.lambda$buildTreeDepth$0",1.2,"Run.printResult",0.1,"Storage.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Storage.benchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Storage_Slowdown.xml,150,2,Storage,Slowdown,"Storage.buildTreeDepth",82.4,"som.Arrays.setAll",12.7,"som.Random.next",4.3,"Storage.lambda$buildTreeDepth$0",0.5,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Towers_NoSlowdown.xml,150,2,Towers,NoSlowdown,"Towers.popDiskFrom",31.2,"Towers.moveDisks",20.9,"Towers$TowersDisk.setNext",19.2,"Towers.pushDisk",18.5,"Towers.moveTopDisk",7.1,"Towers$TowersDisk.getSize",2.9,"Towers.buildTowerAt",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Towers$TowersDisk.<init>",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_2_Towers_Slowdown.xml,150,2,Towers,Slowdown,"Towers.popDiskFrom",34.5,"Towers.moveDisks",20.9,"Towers$TowersDisk.setNext",17.9,"Towers.pushDisk",16.1,"Towers.moveTopDisk",8.9,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Run.reportBenchmark",0.0,"Towers.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Bounce_NoSlowdown.xml,150,3,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.6,"Bounce.benchmark",25.3,"java.lang.Math.abs",3.9,"Bounce$Ball.<init>",3.6,"Bounce.lambda$benchmark$0",1.6,"java.util.Arrays.setAll",1.2,"som.Random.next",0.7,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Bounce_Slowdown.xml,150,3,Bounce,Slowdown,"Bounce$Ball.bounce",51.2,"Bounce.benchmark",40.5,"Bounce.lambda$benchmark$0",3.6,"java.lang.Math.abs",2.4,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.6,"som.Random.next",0.4,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_CD_NoSlowdown.xml,150,3,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",12.3,"cd.RedBlackTree.put",10.5,"cd.CallSign.compareTo",7.7,"cd.RedBlackTree.findNode",6.7,"cd.Vector2D.compareTo",3.8,"cd.Vector2D.compareTo",3.1,"cd.Vector2D.compareNumbers",3.0,"cd.CallSign.compareTo",2.9,"cd.RedBlackTree.treeMinimum",2.9,"som.Vector.append",2.7,"cd.CollisionDetector.handleNewFrame",2.6,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.RedBlackTree.leftRotate",2.2,"cd.RedBlackTree$Node.successor",2.0,"som.Vector.<init>",1.8,"cd.Simulator.simulate",1.4,"cd.CollisionDetector.voxelHash",1.3,"cd.Vector2D.minus",1.3
150_3_CD_Slowdown.xml,150,3,CD,Slowdown,"cd.RedBlackTree.treeInsert",21.0,"cd.CollisionDetector.isInVoxel",13.7,"cd.RedBlackTree.put",13.0,"cd.RedBlackTree.findNode",10.1,"cd.CallSign.compareTo",6.0,"cd.Vector2D.compareTo",3.2,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareNumbers",2.8,"cd.RedBlackTree.leftRotate",2.6,"cd.CollisionDetector.voxelHash",2.5,"cd.CollisionDetector.recurse",1.9,"cd.RedBlackTree.treeMinimum",1.6,"cd.RedBlackTree.forEach",1.5,"som.Vector.append",1.5,"cd.Vector2D.plus",1.4,"som.Vector.<init>",1.3,"cd.Vector2D.compareTo",1.2,"cd.Vector2D.minus",1.2,"cd.RedBlackTree$Node.successor",1.2,"cd.CollisionDetector.handleNewFrame",1.1
150_3_DeltaBlue_NoSlowdown.xml,150,3,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.5,"deltablue.Plan.execute",10.6,"som.Vector.forEach",6.1,"deltablue.EqualityConstraint.execute",4.6,"deltablue.ScaleConstraint.execute",2.4,"deltablue.Planner.addPropagate",2.1,"som.Vector.append",1.5,"java.util.Vector.add",1.4,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.ScaleConstraint.recalculate",1.1,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.projectionTest",0.4,"deltablue.Variable.setWalkStrength",0.4
150_3_DeltaBlue_Slowdown.xml,150,3,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",59.5,"deltablue.Plan.execute",9.7,"deltablue.EqualityConstraint.execute",6.4,"som.Vector.forEach",5.3,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.0,"deltablue.AbstractConstraint.satisfy",0.9,"som.Vector.<init>",0.8,"java.util.Vector.add",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"som.Vector.removeFirst",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Variable.getValue",0.6,"som.Vector.lambda$remove$0",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.removePropagateFrom",0.4
150_3_Havlak_NoSlowdown.xml,150,3,Havlak,NoSlowdown,"som.Vector.hasSome",35.8,"som.Vector.<init>",16.0,"som.Vector.append",7.0,"havlak.HavlakLoopFinder.findLoops",6.1,"som.Vector.forEach",4.4,"havlak.UnionFindNode.initNode",3.0,"havlak.HavlakLoopFinder.doDFS",2.3,"som.Vector.at",2.2,"som.Dictionary.at",1.6,"havlak.HavlakLoopFinder$5.apply",1.6,"havlak.HavlakLoopFinder.stepD",1.2,"som.Vector.size",1.2,"havlak.HavlakLoopFinder$2.apply",1.2,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",0.9,"som.Dictionary.transferEntries",0.9,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"java.lang.Integer.valueOf",0.8,"havlak.HavlakLoopFinder.isAncestor",0.7
150_3_Havlak_Slowdown.xml,150,3,Havlak,Slowdown,"som.Vector.hasSome",33.9,"som.Vector.<init>",22.9,"havlak.HavlakLoopFinder.findLoops",7.8,"som.Vector.append",3.8,"som.Vector.at",3.6,"havlak.HavlakLoopFinder.doDFS",3.5,"som.Vector.forEach",2.9,"havlak.UnionFindNode.initNode",2.1,"havlak.HavlakLoopFinder$5.apply",1.6,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.identifyEdges",1.0,"havlak.UnionFindNode.getBb",0.9,"som.Vector.size",0.9,"havlak.HavlakLoopFinder$1.apply",0.8,"havlak.HavlakLoopFinder.stepD",0.8,"som.Dictionary.at",0.6,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"havlak.HavlakLoopFinder$2.apply",0.5
150_3_Json_NoSlowdown.xml,150,3,Json,NoSlowdown,"java.lang.String.equals",36.0,"java.lang.Character.toString",18.7,"json.JsonPureStringParser.read",8.6,"java.lang.StringBuilder.toString",4.0,"java.lang.StringBuilder.append",3.4,"json.JsonPureStringParser.subStringFromTo",2.8,"java.lang.String.charAt",2.6,"json.JsonPureStringParser.readStringInternal",2.5,"som.Vector.<init>",2.2,"java.lang.String.hashCode",2.0,"som.Vector.append",2.0,"json.JsonPureStringParser.isWhiteSpace",1.7,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.readArray",1.4,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.1,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.8
150_3_Json_Slowdown.xml,150,3,Json,Slowdown,"java.lang.String.equals",35.4,"java.lang.Character.toString",20.1,"json.JsonPureStringParser.read",6.3,"java.lang.String.charAt",3.9,"json.JsonPureStringParser.subStringFromTo",3.6,"json.JsonPureStringParser.readStringInternal",2.8,"java.lang.StringBuilder.append",2.7,"java.lang.StringBuilder.toString",2.7,"json.JsonPureStringParser.isWhiteSpace",2.3,"json.JsonPureStringParser.readValue",2.3,"java.lang.StringBuilder.<init>",2.0,"java.lang.String.hashCode",2.0,"som.Vector.append",1.9,"som.Vector.<init>",1.6,"json.JsonPureStringParser.readArray",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.isDigit",1.1,"java.lang.String.length",1.0,"json.JsonPureStringParser.readDigit",1.0,"json.JsonPureStringParser.endCapture",0.8
150_3_List_NoSlowdown.xml,150,3,List,NoSlowdown,"List$Element.getNext",46.2,"List.isShorterThan",43.8,"List.tail",9.3,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"java.io.PrintStream.println",0.1,"List.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_List_Slowdown.xml,150,3,List,Slowdown,"List.isShorterThan",67.7,"List$Element.getNext",22.3,"List.tail",9.6,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Mandelbrot_NoSlowdown.xml,150,3,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Mandelbrot_Slowdown.xml,150,3,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_NBody_NoSlowdown.xml,150,3,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.3,"nbody.Body.setVX",12.2,"nbody.Body.setVY",3.5,"nbody.Body.getVX",3.3,"nbody.Body.getZ",2.4,"nbody.Body.getX",2.0,"nbody.Body.getY",2.0,"nbody.Body.getVZ",1.9,"nbody.Body.getVY",1.6,"nbody.Body.setVZ",1.6,"java.lang.Math.sqrt",1.3,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"nbody.Body.getMass",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0
150_3_NBody_Slowdown.xml,150,3,NBody,Slowdown,"nbody.NBodySystem.advance",26.2,"NBody.innerBenchmarkLoop",17.5,"nbody.Body.getX",16.5,"nbody.Body.getZ",15.8,"nbody.Body.getY",13.7,"nbody.Body.setVX",4.7,"nbody.Body.getVX",1.3,"nbody.Body.setVY",1.1,"java.lang.Math.sqrt",0.8,"nbody.Body.getVZ",0.7,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setX",0.2,"nbody.Body.setZ",0.2,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0
150_3_Permute_NoSlowdown.xml,150,3,Permute,NoSlowdown,"Permute.permute",71.2,"Permute.swap",28.8,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Permute_Slowdown.xml,150,3,Permute,Slowdown,"Permute.permute",63.7,"Permute.swap",36.0,"Run.measure",0.2,"Permute.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Permute.benchmark",0.0,"Run.doRuns",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Queens_NoSlowdown.xml,150,3,Queens,NoSlowdown,"Queens.getRowColumn",54.7,"Queens.placeQueen",31.7,"Queens.setRowColumn",11.1,"Queens.queens",1.7,"java.util.Arrays.fill",0.6,"java.io.PrintStream.println",0.1,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Queens_Slowdown.xml,150,3,Queens,Slowdown,"Queens.getRowColumn",61.1,"Queens.placeQueen",22.7,"Queens.setRowColumn",14.9,"Queens.queens",0.8,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Queens.verifyResult",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Richards_NoSlowdown.xml,150,3,Richards,NoSlowdown,"richards.Scheduler.schedule",24.3,"richards.TaskControlBlock.runTask",17.5,"richards.Scheduler$HandlerProcessFunction.apply",9.6,"richards.TaskState.isTaskHoldingOrWaiting",7.9,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler$IdleProcessFunction.apply",3.0,"richards.Packet.setLink",2.5,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.1,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.RBObject.append",1.6,"richards.IdleTaskDataRecord.setControl",1.5,"richards.TaskControlBlock.getLink",1.5,"richards.Scheduler.queuePacket",1.4,"richards.TaskState.setTaskHolding",1.3,"richards.HandlerTaskDataRecord.deviceIn",0.8,"richards.Packet.getIdentity",0.7
150_3_Richards_Slowdown.xml,150,3,Richards,Slowdown,"richards.Scheduler.schedule",27.4,"richards.TaskControlBlock.runTask",20.6,"richards.Scheduler$HandlerProcessFunction.apply",8.8,"richards.TaskState.isTaskHoldingOrWaiting",7.4,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.Packet.setLink",4.5,"richards.TaskControlBlock.addInputAndCheckPriority",3.1,"richards.Scheduler.findTask",3.1,"richards.TaskState.isWaitingWithPacket",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.Scheduler.queuePacket",1.3,"richards.Scheduler$IdleProcessFunction.apply",1.2,"richards.RBObject.append",1.2,"richards.Packet.getDatum",1.1,"richards.HandlerTaskDataRecord.deviceIn",0.9,"richards.Scheduler$WorkerProcessFunction.apply",0.9,"richards.IdleTaskDataRecord.setControl",0.9,"richards.TaskState.setTaskHolding",0.7,"richards.Packet.setIdentity",0.6
150_3_Sieve_NoSlowdown.xml,150,3,Sieve,NoSlowdown,"Sieve.sieve",88.4,"java.util.Arrays.fill",10.4,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Sieve_Slowdown.xml,150,3,Sieve,Slowdown,"Sieve.sieve",91.1,"java.util.Arrays.fill",7.6,"Sieve.benchmark",1.3,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Storage_NoSlowdown.xml,150,3,Storage,NoSlowdown,"Storage.buildTreeDepth",79.4,"som.Arrays.setAll",12.2,"som.Random.next",7.0,"Storage.lambda$buildTreeDepth$0",1.3,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Storage_Slowdown.xml,150,3,Storage,Slowdown,"Storage.buildTreeDepth",82.0,"som.Arrays.setAll",12.9,"som.Random.next",4.2,"Storage.lambda$buildTreeDepth$0",0.8,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Storage.benchmark",0.0,"Storage.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Towers_NoSlowdown.xml,150,3,Towers,NoSlowdown,"Towers.popDiskFrom",31.7,"Towers.moveDisks",20.8,"Towers.pushDisk",18.6,"Towers$TowersDisk.setNext",18.4,"Towers.moveTopDisk",7.1,"Towers$TowersDisk.getSize",3.1,"Towers.buildTowerAt",0.1,"Run.printResult",0.1,"Towers.benchmark",0.1,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Towers.verifyResult",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_3_Towers_Slowdown.xml,150,3,Towers,Slowdown,"Towers.popDiskFrom",33.7,"Towers.moveDisks",21.0,"Towers$TowersDisk.setNext",18.2,"Towers.pushDisk",16.2,"Towers.moveTopDisk",9.2,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Bounce_NoSlowdown.xml,150,4,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.8,"Bounce.benchmark",25.6,"java.lang.Math.abs",4.6,"Bounce$Ball.<init>",3.5,"java.util.Arrays.setAll",1.4,"som.Random.next",1.0,"Bounce.lambda$benchmark$0",1.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Bounce_Slowdown.xml,150,4,Bounce,Slowdown,"Bounce$Ball.bounce",51.3,"Bounce.benchmark",40.5,"Bounce.lambda$benchmark$0",3.5,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.3,"java.util.Arrays.setAll",0.8,"som.Random.next",0.3,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_CD_NoSlowdown.xml,150,4,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.6,"cd.CollisionDetector.isInVoxel",12.9,"cd.RedBlackTree.put",10.0,"cd.CallSign.compareTo",8.4,"cd.RedBlackTree.findNode",6.5,"cd.Vector2D.compareTo",4.1,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",3.0,"som.Vector.append",2.8,"cd.Vector2D.compareNumbers",2.7,"cd.RedBlackTree.treeMinimum",2.6,"cd.RedBlackTree.forEach",2.6,"cd.CollisionDetector.recurse",2.6,"cd.CollisionDetector.handleNewFrame",2.5,"cd.RedBlackTree.leftRotate",2.2,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.<init>",1.7,"cd.Simulator.simulate",1.5,"cd.Vector2D.plus",1.4,"cd.Vector2D.minus",1.3
150_4_CD_Slowdown.xml,150,4,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.9,"cd.CollisionDetector.isInVoxel",14.3,"cd.RedBlackTree.put",12.6,"cd.RedBlackTree.findNode",9.7,"cd.CallSign.compareTo",6.3,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",3.2,"cd.RedBlackTree.leftRotate",2.5,"cd.Vector2D.compareNumbers",2.5,"cd.CollisionDetector.voxelHash",2.4,"cd.CollisionDetector.recurse",1.9,"som.Vector.append",1.5,"cd.RedBlackTree.treeMinimum",1.5,"cd.RedBlackTree$Node.successor",1.4,"cd.RedBlackTree.forEach",1.4,"cd.Vector2D.compareTo",1.4,"som.Vector.<init>",1.3,"cd.Vector2D.minus",1.3,"cd.Vector2D.plus",1.3,"cd.CollisionDetector.handleNewFrame",1.2
150_4_DeltaBlue_NoSlowdown.xml,150,4,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",55.2,"deltablue.Plan.execute",11.0,"som.Vector.forEach",6.4,"deltablue.EqualityConstraint.execute",6.0,"deltablue.ScaleConstraint.execute",2.7,"deltablue.Planner.addPropagate",1.8,"java.util.Vector.add",1.5,"som.Vector.append",1.5,"deltablue.AbstractConstraint.satisfy",1.2,"som.Vector.lambda$remove$0",0.9,"deltablue.ScaleConstraint.recalculate",0.9,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.9,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Planner.removePropagateFrom",0.5
150_4_DeltaBlue_Slowdown.xml,150,4,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.8,"deltablue.Plan.execute",9.7,"deltablue.EqualityConstraint.execute",7.0,"som.Vector.forEach",5.6,"deltablue.ScaleConstraint.execute",3.0,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.0,"deltablue.AbstractConstraint.satisfy",0.9,"java.util.Vector.add",0.8,"som.Vector.<init>",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"som.Vector.removeFirst",0.8,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"som.Vector.lambda$remove$0",0.6,"deltablue.Variable.getValue",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.removePropagateFrom",0.5
150_4_Havlak_NoSlowdown.xml,150,4,Havlak,NoSlowdown,"som.Vector.hasSome",31.3,"som.Vector.<init>",20.4,"havlak.HavlakLoopFinder.findLoops",5.9,"som.Vector.append",5.8,"havlak.UnionFindNode.initNode",4.0,"som.Vector.forEach",4.0,"havlak.HavlakLoopFinder.doDFS",2.4,"som.Vector.at",2.1,"havlak.HavlakLoopFinder$5.apply",2.0,"havlak.HavlakLoopFinder.stepD",2.0,"som.Dictionary.at",1.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.UnionFindNode.findSet",1.1,"som.Vector.size",1.1,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder.isAncestor",0.7,"java.lang.Integer.valueOf",0.7,"som.Set.<init>",0.7
150_4_Havlak_Slowdown.xml,150,4,Havlak,Slowdown,"som.Vector.hasSome",34.0,"som.Vector.<init>",22.7,"havlak.HavlakLoopFinder.findLoops",7.7,"som.Vector.append",3.9,"som.Vector.at",3.6,"havlak.HavlakLoopFinder.doDFS",3.4,"som.Vector.forEach",3.3,"havlak.UnionFindNode.initNode",2.3,"havlak.HavlakLoopFinder$5.apply",1.7,"havlak.UnionFindNode.findSet",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"som.Vector.size",0.9,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder$1.apply",0.7,"havlak.HavlakLoopFinder.stepD",0.7,"som.Set.<init>",0.6,"som.Dictionary.at",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.6,"som.Dictionary.atPut",0.5
150_4_Json_NoSlowdown.xml,150,4,Json,NoSlowdown,"java.lang.String.equals",36.1,"java.lang.Character.toString",19.1,"json.JsonPureStringParser.read",7.8,"java.lang.StringBuilder.append",3.6,"java.lang.StringBuilder.toString",3.3,"java.lang.String.charAt",2.7,"json.JsonPureStringParser.subStringFromTo",2.6,"java.lang.String.hashCode",2.6,"json.JsonPureStringParser.readStringInternal",2.6,"som.Vector.<init>",2.4,"som.Vector.append",2.4,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.readValue",1.4,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.endCapture",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.0,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.8
150_4_Json_Slowdown.xml,150,4,Json,Slowdown,"java.lang.String.equals",36.3,"java.lang.Character.toString",20.0,"json.JsonPureStringParser.read",6.2,"java.lang.String.charAt",4.1,"json.JsonPureStringParser.subStringFromTo",3.1,"json.JsonPureStringParser.readStringInternal",3.0,"java.lang.StringBuilder.append",2.6,"java.lang.StringBuilder.toString",2.6,"json.JsonPureStringParser.readValue",2.2,"java.lang.String.hashCode",2.1,"json.JsonPureStringParser.isWhiteSpace",2.1,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readArray",1.8,"som.Vector.append",1.7,"json.JsonPureStringParser.skipWhiteSpace",1.3,"som.Vector.<init>",1.2,"json.JsonPureStringParser.readDigit",1.1,"java.lang.String.length",1.0,"json.JsonPureStringParser.isDigit",1.0,"json.JsonPureStringParser.endCapture",0.8
150_4_List_NoSlowdown.xml,150,4,List,NoSlowdown,"List$Element.getNext",45.7,"List.isShorterThan",43.8,"List.tail",9.6,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_List_Slowdown.xml,150,4,List,Slowdown,"List.isShorterThan",67.7,"List$Element.getNext",22.2,"List.tail",9.8,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Mandelbrot_NoSlowdown.xml,150,4,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Mandelbrot_Slowdown.xml,150,4,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_NBody_NoSlowdown.xml,150,4,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.7,"nbody.Body.setVX",12.3,"nbody.Body.setVY",3.1,"nbody.Body.getVX",2.6,"nbody.Body.getZ",2.6,"nbody.Body.getX",2.2,"nbody.Body.getY",1.9,"nbody.Body.getVZ",1.8,"nbody.Body.getVY",1.6,"nbody.Body.setVZ",1.6,"java.lang.Math.sqrt",1.5,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0
150_4_NBody_Slowdown.xml,150,4,NBody,Slowdown,"nbody.NBodySystem.advance",26.7,"nbody.Body.getX",17.5,"NBody.innerBenchmarkLoop",17.4,"nbody.Body.getZ",15.1,"nbody.Body.getY",13.3,"nbody.Body.setVX",4.3,"nbody.Body.getVX",1.1,"java.lang.Math.sqrt",1.1,"nbody.Body.setVY",1.1,"nbody.Body.getVZ",0.7,"nbody.Body.getVY",0.7,"nbody.Body.setVZ",0.4,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.3,"Run.printResult",0.0,"nbody.Body.setY",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0
150_4_Permute_NoSlowdown.xml,150,4,Permute,NoSlowdown,"Permute.permute",69.1,"Permute.swap",30.7,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Permute_Slowdown.xml,150,4,Permute,Slowdown,"Permute.permute",63.2,"Permute.swap",36.6,"Run.measure",0.2,"Permute.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.doRuns",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Queens_NoSlowdown.xml,150,4,Queens,NoSlowdown,"Queens.getRowColumn",54.9,"Queens.placeQueen",32.5,"Queens.setRowColumn",9.6,"Queens.queens",2.0,"java.util.Arrays.fill",0.5,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.2,"Queens.verifyResult",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Queens_Slowdown.xml,150,4,Queens,Slowdown,"Queens.getRowColumn",60.2,"Queens.placeQueen",23.1,"Queens.setRowColumn",15.4,"Queens.queens",0.7,"java.util.Arrays.fill",0.2,"java.io.PrintStream.println",0.1,"Queens.benchmark",0.0,"java.util.Arrays.fill",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Richards_NoSlowdown.xml,150,4,Richards,NoSlowdown,"richards.Scheduler.schedule",24.1,"richards.TaskControlBlock.runTask",18.4,"richards.Scheduler$HandlerProcessFunction.apply",9.7,"richards.TaskState.isTaskHoldingOrWaiting",7.5,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.3,"richards.TaskState.isWaitingWithPacket",2.9,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.5,"richards.Packet.setLink",2.5,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskControlBlock.getLink",1.7,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.IdleTaskDataRecord.setControl",1.6,"richards.Scheduler.queuePacket",1.6,"richards.RBObject.append",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.TaskState.setTaskHolding",1.2,"richards.Packet.getDatum",0.8,"richards.Packet.getIdentity",0.8
150_4_Richards_Slowdown.xml,150,4,Richards,Slowdown,"richards.Scheduler.schedule",27.8,"richards.TaskControlBlock.runTask",20.2,"richards.Scheduler$HandlerProcessFunction.apply",8.4,"richards.TaskState.isTaskHoldingOrWaiting",8.0,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.Packet.setLink",4.8,"richards.Scheduler.findTask",3.0,"richards.TaskControlBlock.addInputAndCheckPriority",2.7,"richards.TaskState.isWaitingWithPacket",2.1,"richards.TaskControlBlock.getIdentity",1.7,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.Scheduler.queuePacket",1.3,"richards.Scheduler$IdleProcessFunction.apply",1.2,"richards.Packet.getDatum",1.0,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.RBObject.append",0.9,"richards.IdleTaskDataRecord.setControl",0.8,"richards.Scheduler$WorkerProcessFunction.apply",0.8,"richards.TaskState.setTaskHolding",0.8,"richards.Scheduler.holdSelf",0.6
150_4_Sieve_NoSlowdown.xml,150,4,Sieve,NoSlowdown,"Sieve.sieve",88.7,"java.util.Arrays.fill",10.1,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.getSuiteFromName",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Sieve_Slowdown.xml,150,4,Sieve,Slowdown,"Sieve.sieve",91.6,"java.util.Arrays.fill",7.4,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Storage_NoSlowdown.xml,150,4,Storage,NoSlowdown,"Storage.buildTreeDepth",79.9,"som.Arrays.setAll",12.3,"som.Random.next",6.2,"Storage.lambda$buildTreeDepth$0",1.4,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Storage.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Storage_Slowdown.xml,150,4,Storage,Slowdown,"Storage.buildTreeDepth",82.1,"som.Arrays.setAll",13.0,"som.Random.next",4.1,"Storage.lambda$buildTreeDepth$0",0.7,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Storage.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Towers_NoSlowdown.xml,150,4,Towers,NoSlowdown,"Towers.popDiskFrom",31.2,"Towers.moveDisks",20.8,"Towers.pushDisk",19.5,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",7.4,"Towers$TowersDisk.getSize",3.4,"Run.printResult",0.1,"Towers.buildTowerAt",0.0,"java.io.PrintStream.println",0.0,"Harness.processArguments",0.0,"Run.runBenchmark",0.0,"Towers.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_4_Towers_Slowdown.xml,150,4,Towers,Slowdown,"Towers.popDiskFrom",34.1,"Towers.moveDisks",21.0,"Towers$TowersDisk.setNext",18.2,"Towers.pushDisk",16.2,"Towers.moveTopDisk",8.8,"Towers$TowersDisk.getSize",1.6,"Towers.buildTowerAt",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"Towers.verifyResult",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Bounce_NoSlowdown.xml,150,5,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.3,"Bounce.benchmark",26.2,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.1,"java.util.Arrays.setAll",1.1,"Bounce.lambda$benchmark$0",0.9,"som.Random.next",0.9,"Bounce.verifyResult",0.1,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Bounce_Slowdown.xml,150,5,Bounce,Slowdown,"Bounce$Ball.bounce",51.3,"Bounce.benchmark",40.5,"Bounce.lambda$benchmark$0",3.6,"java.lang.Math.abs",2.5,"Bounce$Ball.<init>",1.1,"java.util.Arrays.setAll",0.5,"som.Random.next",0.4,"Run.printResult",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_CD_NoSlowdown.xml,150,5,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.2,"cd.CollisionDetector.isInVoxel",13.2,"cd.RedBlackTree.put",10.1,"cd.CallSign.compareTo",7.5,"cd.RedBlackTree.findNode",6.8,"cd.Vector2D.compareTo",3.8,"cd.CallSign.compareTo",3.8,"cd.RedBlackTree.treeMinimum",3.2,"cd.Vector2D.compareNumbers",3.0,"cd.Vector2D.compareTo",2.8,"som.Vector.append",2.7,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.RedBlackTree.leftRotate",2.2,"cd.CollisionDetector.handleNewFrame",2.1,"som.Vector.<init>",2.0,"cd.RedBlackTree$Node.successor",1.9,"cd.CollisionDetector.voxelHash",1.4,"cd.RedBlackTree.get",1.2,"cd.Vector2D.plus",1.2
150_5_CD_Slowdown.xml,150,5,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.9,"cd.CollisionDetector.isInVoxel",14.3,"cd.RedBlackTree.put",13.0,"cd.RedBlackTree.findNode",10.2,"cd.CallSign.compareTo",6.2,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareTo",3.0,"cd.Vector2D.compareNumbers",2.7,"cd.RedBlackTree.leftRotate",2.5,"cd.CollisionDetector.voxelHash",2.4,"cd.CollisionDetector.recurse",1.9,"cd.RedBlackTree.forEach",1.5,"cd.Vector2D.compareTo",1.4,"cd.RedBlackTree.treeMinimum",1.4,"som.Vector.append",1.4,"som.Vector.<init>",1.3,"cd.RedBlackTree$Node.successor",1.3,"cd.RedBlackTree$Node.<init>",1.2,"cd.Vector2D.plus",1.2,"cd.Vector2D.<init>",1.1
150_5_DeltaBlue_NoSlowdown.xml,150,5,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.0,"deltablue.Plan.execute",12.4,"som.Vector.forEach",7.0,"deltablue.EqualityConstraint.execute",6.4,"deltablue.ScaleConstraint.execute",4.4,"deltablue.Planner.addPropagate",2.1,"deltablue.AbstractConstraint.satisfy",1.4,"java.util.Vector.add",1.3,"som.Vector.append",1.2,"deltablue.ScaleConstraint.recalculate",1.1,"deltablue.Planner.makePlan",0.9,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.8,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
150_5_DeltaBlue_Slowdown.xml,150,5,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.1,"deltablue.Plan.execute",10.4,"deltablue.EqualityConstraint.execute",7.0,"som.Vector.forEach",5.3,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.0,"deltablue.ScaleConstraint.recalculate",0.9,"som.Vector.removeFirst",0.8,"java.util.Vector.add",0.8,"som.Vector.<init>",0.8,"deltablue.AbstractConstraint.satisfy",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Variable.getValue",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.Planner.projectionTest",0.7,"som.Vector.lambda$remove$0",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Variable.getStay",0.5
150_5_Havlak_NoSlowdown.xml,150,5,Havlak,NoSlowdown,"som.Vector.hasSome",36.1,"som.Vector.<init>",15.0,"som.Vector.append",6.6,"havlak.HavlakLoopFinder.findLoops",6.2,"som.Vector.forEach",4.8,"havlak.UnionFindNode.initNode",3.1,"havlak.HavlakLoopFinder.doDFS",2.3,"som.Vector.at",2.3,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Dictionary.at",1.6,"havlak.HavlakLoopFinder.stepD",1.3,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.0,"havlak.HavlakLoopFinder$2.apply",0.9,"som.Set.<init>",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"som.Dictionary.transferEntries",0.7
150_5_Havlak_Slowdown.xml,150,5,Havlak,Slowdown,"som.Vector.hasSome",33.7,"som.Vector.<init>",23.5,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",3.9,"havlak.HavlakLoopFinder.doDFS",3.5,"som.Vector.at",3.5,"som.Vector.forEach",3.2,"havlak.UnionFindNode.initNode",2.1,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"som.Vector.size",0.9,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.HavlakLoopFinder$1.apply",0.7,"som.Dictionary.at",0.7,"som.Dictionary.atPut",0.6,"havlak.HavlakLoopFinder$2.apply",0.6,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5
150_5_Json_NoSlowdown.xml,150,5,Json,NoSlowdown,"java.lang.String.equals",37.0,"java.lang.Character.toString",18.3,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.toString",3.7,"java.lang.StringBuilder.append",3.2,"java.lang.String.hashCode",2.8,"json.JsonPureStringParser.readStringInternal",2.7,"json.JsonPureStringParser.subStringFromTo",2.5,"java.lang.String.charAt",2.5,"som.Vector.<init>",2.2,"som.Vector.append",2.0,"json.JsonPureStringParser.isWhiteSpace",1.9,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.endCapture",1.5,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.3,"java.lang.StringBuilder.<init>",1.2,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.isDigit",1.0,"json.JsonPureStringParser.readChar",0.9
150_5_Json_Slowdown.xml,150,5,Json,Slowdown,"java.lang.String.equals",35.4,"java.lang.Character.toString",20.4,"json.JsonPureStringParser.read",6.9,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.6,"java.lang.StringBuilder.toString",2.5,"json.JsonPureStringParser.readStringInternal",2.4,"java.lang.StringBuilder.append",2.3,"java.lang.String.hashCode",2.2,"java.lang.StringBuilder.<init>",2.1,"json.JsonPureStringParser.isWhiteSpace",2.1,"som.Vector.append",1.8,"json.JsonPureStringParser.readValue",1.7,"json.JsonPureStringParser.readArray",1.6,"som.Vector.<init>",1.6,"json.JsonPureStringParser.isDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.0,"json.JsonPureStringParser.readDigit",0.9,"java.lang.String.length",0.7
150_5_List_NoSlowdown.xml,150,5,List,NoSlowdown,"List$Element.getNext",45.3,"List.isShorterThan",44.3,"List.tail",9.6,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"List.benchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_List_Slowdown.xml,150,5,List,Slowdown,"List.isShorterThan",67.8,"List$Element.getNext",22.1,"List.tail",9.8,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.verifyResult",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Mandelbrot_NoSlowdown.xml,150,5,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Mandelbrot_Slowdown.xml,150,5,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_NBody_NoSlowdown.xml,150,5,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.9,"nbody.Body.setVX",12.2,"nbody.Body.setVY",3.7,"nbody.Body.getX",2.8,"nbody.Body.getZ",2.7,"nbody.Body.getVX",2.5,"nbody.Body.getY",2.1,"nbody.Body.getVY",1.8,"nbody.Body.getVZ",1.6,"nbody.Body.setVZ",1.4,"java.lang.Math.sqrt",1.2,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.4,"nbody.Body.getMass",0.2,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
150_5_NBody_Slowdown.xml,150,5,NBody,Slowdown,"nbody.NBodySystem.advance",27.0,"NBody.innerBenchmarkLoop",17.1,"nbody.Body.getZ",15.8,"nbody.Body.getX",15.6,"nbody.Body.getY",14.0,"nbody.Body.setVX",4.3,"nbody.Body.setVY",1.4,"nbody.Body.getVX",1.2,"java.lang.Math.sqrt",1.1,"nbody.Body.getVY",0.7,"nbody.Body.getVZ",0.7,"nbody.Body.setVZ",0.5,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.2,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0
150_5_Permute_NoSlowdown.xml,150,5,Permute,NoSlowdown,"Permute.permute",70.4,"Permute.swap",29.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Permute_Slowdown.xml,150,5,Permute,Slowdown,"Permute.permute",63.6,"Permute.swap",36.2,"Run.measure",0.2,"Permute.verifyResult",0.1,"Run.printResult",0.0,"Permute.benchmark",0.0,"Run.doRuns",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Queens_NoSlowdown.xml,150,5,Queens,NoSlowdown,"Queens.getRowColumn",55.6,"Queens.placeQueen",30.3,"Queens.setRowColumn",11.5,"Queens.queens",1.7,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"Run.measure",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Queens_Slowdown.xml,150,5,Queens,Slowdown,"Queens.getRowColumn",60.8,"Queens.placeQueen",23.0,"Queens.setRowColumn",15.0,"Queens.queens",0.8,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Richards_NoSlowdown.xml,150,5,Richards,NoSlowdown,"richards.Scheduler.schedule",23.1,"richards.TaskControlBlock.runTask",18.8,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",8.1,"richards.Scheduler$DeviceProcessFunction.apply",4.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler.findTask",2.9,"richards.Scheduler$IdleProcessFunction.apply",2.9,"richards.TaskState.isWaitingWithPacket",2.2,"richards.Packet.setLink",2.1,"richards.TaskControlBlock.getIdentity",2.1,"richards.TaskControlBlock.getLink",1.8,"richards.IdleTaskDataRecord.setControl",1.7,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.RBObject.append",1.4,"richards.TaskState.setTaskHolding",1.4,"richards.Scheduler.queuePacket",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.Packet.getDatum",0.9,"richards.HandlerTaskDataRecord.deviceIn",0.9
150_5_Richards_Slowdown.xml,150,5,Richards,Slowdown,"richards.Scheduler.schedule",27.3,"richards.TaskControlBlock.runTask",20.4,"richards.Scheduler$HandlerProcessFunction.apply",9.0,"richards.TaskState.isTaskHoldingOrWaiting",7.7,"richards.Scheduler$DeviceProcessFunction.apply",5.0,"richards.Packet.setLink",4.5,"richards.Scheduler.findTask",3.2,"richards.TaskControlBlock.addInputAndCheckPriority",2.8,"richards.TaskControlBlock.getIdentity",2.3,"richards.TaskState.isWaitingWithPacket",2.2,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.Scheduler.queuePacket",1.5,"richards.Scheduler$IdleProcessFunction.apply",1.3,"richards.Packet.getDatum",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.RBObject.append",0.9,"richards.Scheduler$WorkerProcessFunction.apply",0.9,"richards.IdleTaskDataRecord.setControl",0.7,"richards.Scheduler.holdSelf",0.7,"richards.TaskState.setTaskHolding",0.7
150_5_Sieve_NoSlowdown.xml,150,5,Sieve,NoSlowdown,"Sieve.sieve",89.5,"java.util.Arrays.fill",9.4,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Sieve_Slowdown.xml,150,5,Sieve,Slowdown,"Sieve.sieve",91.3,"java.util.Arrays.fill",7.7,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Storage_NoSlowdown.xml,150,5,Storage,NoSlowdown,"Storage.buildTreeDepth",79.2,"som.Arrays.setAll",12.8,"som.Random.next",6.7,"Storage.lambda$buildTreeDepth$0",1.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Storage_Slowdown.xml,150,5,Storage,Slowdown,"Storage.buildTreeDepth",82.1,"som.Arrays.setAll",12.7,"som.Random.next",4.5,"Storage.lambda$buildTreeDepth$0",0.7,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Towers_NoSlowdown.xml,150,5,Towers,NoSlowdown,"Towers.popDiskFrom",32.3,"Towers.moveDisks",19.8,"Towers.pushDisk",19.1,"Towers$TowersDisk.setNext",17.8,"Towers.moveTopDisk",7.7,"Towers$TowersDisk.getSize",3.2,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Towers.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_5_Towers_Slowdown.xml,150,5,Towers,Slowdown,"Towers.popDiskFrom",35.1,"Towers.moveDisks",20.6,"Towers$TowersDisk.setNext",17.9,"Towers.pushDisk",15.8,"Towers.moveTopDisk",8.7,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Bounce_NoSlowdown.xml,150,6,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.8,"Bounce.benchmark",26.2,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.2,"java.util.Arrays.setAll",1.3,"Bounce.lambda$benchmark$0",1.0,"som.Random.next",1.0,"Run.printResult",0.1,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0
150_6_Bounce_Slowdown.xml,150,6,Bounce,Slowdown,"Bounce$Ball.bounce",51.1,"Bounce.benchmark",40.7,"Bounce.lambda$benchmark$0",3.8,"java.lang.Math.abs",2.2,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.6,"som.Random.next",0.3,"Run.measure",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_CD_NoSlowdown.xml,150,6,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",17.0,"cd.CollisionDetector.isInVoxel",14.1,"cd.RedBlackTree.put",10.7,"cd.CallSign.compareTo",7.1,"cd.RedBlackTree.findNode",6.6,"cd.Vector2D.compareTo",3.2,"cd.CallSign.compareTo",3.1,"som.Vector.append",2.9,"cd.Vector2D.compareNumbers",2.9,"cd.Vector2D.compareTo",2.8,"cd.RedBlackTree.treeMinimum",2.6,"cd.CollisionDetector.handleNewFrame",2.6,"cd.RedBlackTree.forEach",2.2,"som.Vector.<init>",2.1,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree$Node.successor",2.1,"cd.RedBlackTree.leftRotate",1.9,"cd.Vector2D.<init>",1.3,"cd.CollisionDetector.voxelHash",1.2,"cd.Vector2D.plus",1.2
150_6_CD_Slowdown.xml,150,6,CD,Slowdown,"cd.RedBlackTree.treeInsert",21.1,"cd.CollisionDetector.isInVoxel",14.4,"cd.RedBlackTree.put",13.1,"cd.RedBlackTree.findNode",10.4,"cd.CallSign.compareTo",5.7,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.9,"cd.RedBlackTree.leftRotate",2.6,"cd.Vector2D.compareNumbers",2.6,"cd.CollisionDetector.voxelHash",2.5,"cd.CollisionDetector.recurse",1.9,"cd.RedBlackTree.forEach",1.5,"som.Vector.append",1.5,"som.Vector.<init>",1.4,"cd.Vector2D.compareTo",1.3,"cd.RedBlackTree$Node.successor",1.3,"cd.Vector2D.plus",1.3,"cd.RedBlackTree.treeMinimum",1.2,"cd.RedBlackTree.get",1.1,"cd.RedBlackTree$Node.<init>",1.1
150_6_DeltaBlue_NoSlowdown.xml,150,6,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.4,"deltablue.Plan.execute",13.1,"som.Vector.forEach",7.1,"deltablue.EqualityConstraint.execute",6.6,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.0,"java.util.Vector.add",1.5,"som.Vector.append",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.1,"deltablue.AbstractConstraint.satisfy",1.0,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
150_6_DeltaBlue_Slowdown.xml,150,6,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",61.8,"deltablue.Plan.execute",8.6,"deltablue.EqualityConstraint.execute",6.2,"som.Vector.forEach",4.9,"deltablue.ScaleConstraint.execute",2.5,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.1,"java.util.Vector.add",1.0,"som.Vector.removeFirst",0.9,"som.Vector.<init>",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.AbstractConstraint.satisfy",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Variable.getValue",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"som.Vector.lambda$remove$0",0.6,"som.Vector.with",0.4
150_6_Havlak_NoSlowdown.xml,150,6,Havlak,NoSlowdown,"som.Vector.hasSome",31.4,"som.Vector.<init>",20.1,"havlak.HavlakLoopFinder.findLoops",6.0,"som.Vector.append",5.3,"som.Vector.forEach",4.5,"havlak.UnionFindNode.initNode",4.2,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.doDFS",1.8,"havlak.HavlakLoopFinder.stepD",1.8,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Dictionary.at",1.5,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"som.Vector.size",1.1,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"som.Dictionary.transferEntries",0.8,"som.Set.<init>",0.8,"java.lang.Integer.valueOf",0.7,"havlak.HavlakLoopFinder$1.apply",0.7
150_6_Havlak_Slowdown.xml,150,6,Havlak,Slowdown,"som.Vector.hasSome",34.0,"som.Vector.<init>",23.2,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",4.0,"havlak.HavlakLoopFinder.doDFS",3.4,"som.Vector.at",3.4,"som.Vector.forEach",3.2,"havlak.UnionFindNode.initNode",2.3,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.findSet",1.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder$1.apply",0.8,"som.Vector.size",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.7,"havlak.HavlakLoopFinder.stepD",0.7,"som.Dictionary.at",0.7,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"som.Dictionary.atPut",0.5
150_6_Json_NoSlowdown.xml,150,6,Json,NoSlowdown,"java.lang.String.equals",34.3,"java.lang.Character.toString",20.4,"json.JsonPureStringParser.read",7.1,"java.lang.StringBuilder.toString",3.8,"java.lang.StringBuilder.append",3.4,"som.Vector.append",2.8,"java.lang.String.charAt",2.7,"json.JsonPureStringParser.subStringFromTo",2.7,"json.JsonPureStringParser.readStringInternal",2.5,"som.Vector.<init>",2.5,"java.lang.String.hashCode",2.4,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.endCapture",1.5,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.5,"json.JsonPureStringParser.readValue",1.4,"json.JsonPureStringParser.readArray",1.3,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.7
150_6_Json_Slowdown.xml,150,6,Json,Slowdown,"java.lang.String.equals",35.3,"java.lang.Character.toString",20.2,"json.JsonPureStringParser.read",6.6,"java.lang.String.charAt",3.8,"json.JsonPureStringParser.subStringFromTo",3.1,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.StringBuilder.append",2.5,"java.lang.StringBuilder.toString",2.5,"som.Vector.append",2.3,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.String.hashCode",2.2,"json.JsonPureStringParser.readValue",2.0,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readArray",1.5,"som.Vector.<init>",1.4,"json.JsonPureStringParser.isDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.3,"java.lang.String.length",1.0,"json.JsonObject$HashIndexTable.<init>",0.9,"json.JsonPureStringParser.readChar",0.9
150_6_List_NoSlowdown.xml,150,6,List,NoSlowdown,"List$Element.getNext",45.7,"List.isShorterThan",44.1,"List.tail",9.5,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_List_Slowdown.xml,150,6,List,Slowdown,"List.isShorterThan",68.2,"List$Element.getNext",21.9,"List.tail",9.6,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Mandelbrot_NoSlowdown.xml,150,6,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Mandelbrot.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Mandelbrot_Slowdown.xml,150,6,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_NBody_NoSlowdown.xml,150,6,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.2,"nbody.Body.setVX",13.4,"nbody.Body.setVY",3.0,"nbody.Body.getX",2.9,"nbody.Body.getZ",2.7,"nbody.Body.getVX",2.5,"nbody.Body.getVZ",1.9,"nbody.Body.getY",1.8,"nbody.Body.getVY",1.6,"nbody.Body.setVZ",1.4,"java.lang.Math.sqrt",1.3,"nbody.Body.setZ",1.0,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.4,"Run.printResult",0.1,"nbody.Body.getMass",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0
150_6_NBody_Slowdown.xml,150,6,NBody,Slowdown,"nbody.NBodySystem.advance",26.9,"NBody.innerBenchmarkLoop",17.4,"nbody.Body.getX",16.9,"nbody.Body.getZ",14.9,"nbody.Body.getY",13.4,"nbody.Body.setVX",4.7,"nbody.Body.getVX",1.2,"nbody.Body.setVY",1.2,"java.lang.Math.sqrt",1.1,"nbody.Body.getVZ",0.7,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.2,"java.io.PrintStream.println",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
150_6_Permute_NoSlowdown.xml,150,6,Permute,NoSlowdown,"Permute.permute",70.5,"Permute.swap",29.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Permute_Slowdown.xml,150,6,Permute,Slowdown,"Permute.permute",63.6,"Permute.swap",36.2,"Run.measure",0.1,"Permute.verifyResult",0.0,"Run.doRuns",0.0,"Run.printResult",0.0,"Permute.benchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Queens_NoSlowdown.xml,150,6,Queens,NoSlowdown,"Queens.getRowColumn",53.5,"Queens.placeQueen",33.5,"Queens.setRowColumn",10.2,"Queens.queens",2.2,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Queens_Slowdown.xml,150,6,Queens,Slowdown,"Queens.getRowColumn",60.2,"Queens.placeQueen",23.2,"Queens.setRowColumn",15.5,"Queens.queens",0.7,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Richards_NoSlowdown.xml,150,6,Richards,NoSlowdown,"richards.Scheduler.schedule",25.0,"richards.TaskControlBlock.runTask",17.4,"richards.Scheduler$HandlerProcessFunction.apply",9.5,"richards.TaskState.isTaskHoldingOrWaiting",8.3,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Packet.setLink",2.3,"richards.IdleTaskDataRecord.setControl",1.9,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.RBObject.append",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.TaskControlBlock.getIdentity",1.5,"richards.TaskControlBlock.getLink",1.4,"richards.TaskState.setTaskHolding",1.4,"richards.Scheduler.queuePacket",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Scheduler.holdSelf",0.8
150_6_Richards_Slowdown.xml,150,6,Richards,Slowdown,"richards.Scheduler.schedule",27.6,"richards.TaskControlBlock.runTask",21.2,"richards.Scheduler$HandlerProcessFunction.apply",8.6,"richards.TaskState.isTaskHoldingOrWaiting",7.0,"richards.Scheduler$DeviceProcessFunction.apply",5.5,"richards.Packet.setLink",4.8,"richards.Scheduler.findTask",3.4,"richards.TaskControlBlock.addInputAndCheckPriority",2.7,"richards.TaskState.isWaitingWithPacket",2.2,"richards.TaskControlBlock.getIdentity",2.0,"richards.DeviceTaskDataRecord.setPending",1.6,"richards.Scheduler.queuePacket",1.4,"richards.Scheduler$IdleProcessFunction.apply",1.2,"richards.RBObject.append",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Packet.getDatum",0.9,"richards.IdleTaskDataRecord.setControl",0.9,"richards.Scheduler$WorkerProcessFunction.apply",0.8,"richards.Scheduler.holdSelf",0.6,"richards.HandlerTaskDataRecord.deviceInAdd",0.6
150_6_Sieve_NoSlowdown.xml,150,6,Sieve,NoSlowdown,"Sieve.sieve",88.8,"java.util.Arrays.fill",9.8,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Sieve_Slowdown.xml,150,6,Sieve,Slowdown,"Sieve.sieve",91.4,"java.util.Arrays.fill",7.5,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Storage_NoSlowdown.xml,150,6,Storage,NoSlowdown,"Storage.buildTreeDepth",80.1,"som.Arrays.setAll",12.8,"som.Random.next",5.7,"Storage.lambda$buildTreeDepth$0",1.3,"Storage.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Storage_Slowdown.xml,150,6,Storage,Slowdown,"Storage.buildTreeDepth",81.9,"som.Arrays.setAll",13.1,"som.Random.next",4.4,"Storage.lambda$buildTreeDepth$0",0.5,"Run.printResult",0.0,"som.Random.<init>",0.0,"Run.reportBenchmark",0.0,"Storage.benchmark",0.0,"Storage.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Towers_NoSlowdown.xml,150,6,Towers,NoSlowdown,"Towers.popDiskFrom",30.3,"Towers.moveDisks",22.0,"Towers.pushDisk",19.1,"Towers$TowersDisk.setNext",17.3,"Towers.moveTopDisk",7.5,"Towers$TowersDisk.getSize",3.7,"Towers.buildTowerAt",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_6_Towers_Slowdown.xml,150,6,Towers,Slowdown,"Towers.popDiskFrom",33.5,"Towers.moveDisks",21.2,"Towers$TowersDisk.setNext",18.6,"Towers.pushDisk",15.7,"Towers.moveTopDisk",9.0,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0
150_7_Bounce_NoSlowdown.xml,150,7,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.7,"Bounce.benchmark",25.1,"java.lang.Math.abs",4.4,"Bounce$Ball.<init>",3.4,"Bounce.lambda$benchmark$0",1.2,"java.util.Arrays.setAll",1.1,"som.Random.next",1.0,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Bounce_Slowdown.xml,150,7,Bounce,Slowdown,"Bounce$Ball.bounce",51.4,"Bounce.benchmark",40.6,"Bounce.lambda$benchmark$0",3.3,"java.lang.Math.abs",2.5,"Bounce$Ball.<init>",1.1,"java.util.Arrays.setAll",0.6,"som.Random.next",0.4,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_CD_NoSlowdown.xml,150,7,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.5,"cd.CollisionDetector.isInVoxel",13.1,"cd.RedBlackTree.put",9.9,"cd.CallSign.compareTo",7.2,"cd.RedBlackTree.findNode",6.7,"cd.Vector2D.compareTo",3.3,"cd.CallSign.compareTo",3.2,"cd.RedBlackTree.treeMinimum",3.1,"cd.Vector2D.compareTo",2.9,"som.Vector.append",2.9,"cd.RedBlackTree.forEach",2.8,"cd.CollisionDetector.handleNewFrame",2.8,"cd.Vector2D.compareNumbers",2.7,"cd.CollisionDetector.recurse",2.6,"som.Vector.<init>",2.2,"cd.RedBlackTree.leftRotate",1.8,"cd.RedBlackTree$Node.successor",1.8,"cd.CollisionDetector.voxelHash",1.5,"cd.Simulator.simulate",1.4,"cd.Vector2D.minus",1.2
150_7_CD_Slowdown.xml,150,7,CD,Slowdown,"cd.RedBlackTree.treeInsert",21.2,"cd.CollisionDetector.isInVoxel",14.1,"cd.RedBlackTree.put",12.2,"cd.RedBlackTree.findNode",10.1,"cd.CallSign.compareTo",5.8,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",3.0,"cd.Vector2D.compareNumbers",2.7,"cd.CollisionDetector.voxelHash",2.6,"cd.RedBlackTree.leftRotate",2.2,"cd.CollisionDetector.recurse",1.9,"cd.RedBlackTree.forEach",1.7,"cd.RedBlackTree.treeMinimum",1.5,"cd.Vector2D.compareTo",1.5,"som.Vector.<init>",1.5,"cd.RedBlackTree$Node.successor",1.5,"cd.Vector2D.plus",1.4,"som.Vector.append",1.3,"cd.RedBlackTree.get",1.3,"cd.Vector2D.minus",1.1
150_7_DeltaBlue_NoSlowdown.xml,150,7,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.2,"deltablue.Plan.execute",10.4,"som.Vector.forEach",6.3,"deltablue.EqualityConstraint.execute",4.9,"deltablue.ScaleConstraint.execute",2.5,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.4,"deltablue.AbstractConstraint.satisfy",1.4,"java.util.Vector.add",1.3,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4
150_7_DeltaBlue_Slowdown.xml,150,7,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.5,"deltablue.Plan.execute",10.0,"deltablue.EqualityConstraint.execute",6.9,"som.Vector.forEach",5.5,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",0.9,"java.util.Vector.add",0.9,"som.Vector.<init>",0.9,"som.Vector.removeFirst",0.8,"deltablue.AbstractConstraint.satisfy",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Planner.makePlan",0.6,"som.Vector.lambda$remove$0",0.6,"deltablue.Variable.getValue",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.removePropagateFrom",0.5
150_7_Havlak_NoSlowdown.xml,150,7,Havlak,NoSlowdown,"som.Vector.hasSome",36.0,"som.Vector.<init>",15.9,"som.Vector.append",6.9,"havlak.HavlakLoopFinder.findLoops",6.0,"som.Vector.forEach",4.5,"havlak.UnionFindNode.initNode",3.1,"som.Vector.at",2.3,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Dictionary.at",1.6,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.stepD",1.2,"havlak.HavlakLoopFinder$2.apply",1.2,"som.Vector.size",1.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.0,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.HavlakLoopFinder$2.apply",0.8,"havlak.HavlakLoopFinder.processEdges",0.7,"havlak.HavlakLoopFinder$1.apply",0.7,"java.lang.Integer.valueOf",0.7
150_7_Havlak_Slowdown.xml,150,7,Havlak,Slowdown,"som.Vector.hasSome",34.1,"som.Vector.<init>",23.0,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",3.7,"som.Vector.at",3.5,"havlak.HavlakLoopFinder.doDFS",3.4,"som.Vector.forEach",3.2,"havlak.UnionFindNode.initNode",2.3,"havlak.HavlakLoopFinder$5.apply",1.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.4,"havlak.UnionFindNode.findSet",1.4,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder$1.apply",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder.stepD",0.7,"som.Vector.size",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder$2.apply",0.6,"som.Set.<init>",0.6,"som.Dictionary.getBucketIdx",0.5
150_7_Json_NoSlowdown.xml,150,7,Json,NoSlowdown,"java.lang.String.equals",36.5,"java.lang.Character.toString",19.9,"json.JsonPureStringParser.read",7.7,"java.lang.StringBuilder.toString",3.4,"json.JsonPureStringParser.subStringFromTo",3.0,"java.lang.StringBuilder.append",2.9,"java.lang.String.charAt",2.7,"json.JsonPureStringParser.readStringInternal",2.5,"som.Vector.append",2.5,"java.lang.String.hashCode",2.3,"som.Vector.<init>",2.1,"java.lang.StringBuilder.<init>",2.0,"json.JsonPureStringParser.readDigit",1.6,"json.JsonPureStringParser.isWhiteSpace",1.3,"json.JsonPureStringParser.readValue",1.3,"json.JsonPureStringParser.readArray",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.endCapture",1.0,"json.JsonPureStringParser.isDigit",0.8,"json.JsonPureStringParser.readChar",0.7
150_7_Json_Slowdown.xml,150,7,Json,Slowdown,"java.lang.String.equals",35.7,"java.lang.Character.toString",20.2,"json.JsonPureStringParser.read",6.2,"java.lang.String.charAt",4.4,"json.JsonPureStringParser.subStringFromTo",3.3,"json.JsonPureStringParser.readStringInternal",2.9,"java.lang.StringBuilder.append",2.7,"java.lang.StringBuilder.toString",2.6,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.StringBuilder.<init>",1.9,"som.Vector.append",1.9,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.readValue",1.7,"json.JsonPureStringParser.readArray",1.5,"som.Vector.<init>",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.isDigit",1.3,"json.JsonPureStringParser.readDigit",0.9,"json.JsonPureStringParser.endCapture",0.9,"java.lang.String.length",0.9
150_7_List_NoSlowdown.xml,150,7,List,NoSlowdown,"List$Element.getNext",46.5,"List.isShorterThan",42.9,"List.tail",9.7,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_List_Slowdown.xml,150,7,List,Slowdown,"List.isShorterThan",68.3,"List$Element.getNext",21.8,"List.tail",9.6,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Mandelbrot_NoSlowdown.xml,150,7,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Mandelbrot_Slowdown.xml,150,7,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_NBody_NoSlowdown.xml,150,7,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.5,"nbody.Body.setVX",13.3,"nbody.Body.setVY",3.0,"nbody.Body.getVX",2.8,"nbody.Body.getZ",2.5,"nbody.Body.getX",2.4,"nbody.Body.getVZ",1.9,"nbody.Body.getY",1.8,"nbody.Body.getVY",1.7,"nbody.Body.setVZ",1.2,"java.lang.Math.sqrt",1.2,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"nbody.Body.getMass",0.1,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
150_7_NBody_Slowdown.xml,150,7,NBody,Slowdown,"nbody.NBodySystem.advance",27.0,"NBody.innerBenchmarkLoop",17.1,"nbody.Body.getX",16.3,"nbody.Body.getZ",15.5,"nbody.Body.getY",13.9,"nbody.Body.setVX",4.5,"nbody.Body.getVX",1.2,"java.lang.Math.sqrt",1.1,"nbody.Body.setVY",1.0,"nbody.Body.getVZ",0.7,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.3,"nbody.Body.setX",0.3,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"",0,"",0
150_7_Permute_NoSlowdown.xml,150,7,Permute,NoSlowdown,"Permute.permute",69.1,"Permute.swap",30.6,"Run.printResult",0.1,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Permute_Slowdown.xml,150,7,Permute,Slowdown,"Permute.permute",63.8,"Permute.swap",35.9,"Run.measure",0.2,"Permute.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Permute.verifyResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Queens_NoSlowdown.xml,150,7,Queens,NoSlowdown,"Queens.getRowColumn",55.7,"Queens.placeQueen",31.6,"Queens.setRowColumn",10.2,"Queens.queens",2.0,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Queens_Slowdown.xml,150,7,Queens,Slowdown,"Queens.getRowColumn",59.9,"Queens.placeQueen",23.5,"Queens.setRowColumn",15.2,"Queens.queens",0.8,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"Queens.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Richards_NoSlowdown.xml,150,7,Richards,NoSlowdown,"richards.Scheduler.schedule",24.1,"richards.TaskControlBlock.runTask",17.5,"richards.Scheduler$HandlerProcessFunction.apply",9.4,"richards.TaskState.isTaskHoldingOrWaiting",7.8,"richards.Scheduler$DeviceProcessFunction.apply",6.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.8,"richards.TaskState.isWaitingWithPacket",2.7,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.5,"richards.Packet.setLink",2.2,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.TaskControlBlock.getLink",1.7,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.TaskControlBlock.getIdentity",1.5,"richards.TaskState.setTaskHolding",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.4,"richards.RBObject.append",1.4,"richards.IdleTaskDataRecord.setControl",1.4,"richards.Scheduler.queuePacket",1.2,"richards.Packet.getDatum",0.9
150_7_Richards_Slowdown.xml,150,7,Richards,Slowdown,"richards.Scheduler.schedule",28.4,"richards.TaskControlBlock.runTask",20.3,"richards.Scheduler$HandlerProcessFunction.apply",8.7,"richards.TaskState.isTaskHoldingOrWaiting",7.2,"richards.Scheduler$DeviceProcessFunction.apply",4.9,"richards.Packet.setLink",4.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.0,"richards.Scheduler.findTask",2.9,"richards.TaskControlBlock.getIdentity",2.4,"richards.TaskState.isWaitingWithPacket",2.3,"richards.DeviceTaskDataRecord.setPending",1.5,"richards.Scheduler$IdleProcessFunction.apply",1.2,"richards.Packet.getDatum",1.2,"richards.Scheduler.queuePacket",1.2,"richards.RBObject.append",1.1,"richards.HandlerTaskDataRecord.deviceIn",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.IdleTaskDataRecord.setControl",0.7,"richards.TaskState.setTaskHolding",0.7,"richards.Scheduler$WorkerProcessFunction.apply",0.6
150_7_Sieve_NoSlowdown.xml,150,7,Sieve,NoSlowdown,"Sieve.sieve",88.6,"java.util.Arrays.fill",10.0,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Sieve_Slowdown.xml,150,7,Sieve,Slowdown,"Sieve.sieve",91.7,"java.util.Arrays.fill",7.2,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.getSuiteFromName",0.0,"Run.reportBenchmark",0.0,"Sieve.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Storage_NoSlowdown.xml,150,7,Storage,NoSlowdown,"Storage.buildTreeDepth",79.8,"som.Arrays.setAll",12.1,"som.Random.next",6.5,"Storage.lambda$buildTreeDepth$0",1.4,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Storage.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Storage_Slowdown.xml,150,7,Storage,Slowdown,"Storage.buildTreeDepth",81.7,"som.Arrays.setAll",13.2,"som.Random.next",4.4,"Storage.lambda$buildTreeDepth$0",0.6,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.doRuns",0.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Towers_NoSlowdown.xml,150,7,Towers,NoSlowdown,"Towers.popDiskFrom",31.5,"Towers.moveDisks",20.4,"Towers.pushDisk",18.4,"Towers$TowersDisk.setNext",17.9,"Towers.moveTopDisk",7.3,"Towers$TowersDisk.getSize",4.3,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_7_Towers_Slowdown.xml,150,7,Towers,Slowdown,"Towers.popDiskFrom",34.0,"Towers.moveDisks",21.1,"Towers$TowersDisk.setNext",18.1,"Towers.pushDisk",16.1,"Towers.moveTopDisk",9.1,"Towers$TowersDisk.getSize",1.5,"Run.printResult",0.0,"Towers.buildTowerAt",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Bounce_NoSlowdown.xml,150,8,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.6,"Bounce.benchmark",25.6,"java.lang.Math.abs",4.5,"Bounce$Ball.<init>",3.3,"Bounce.lambda$benchmark$0",1.2,"java.util.Arrays.setAll",1.1,"som.Random.next",0.7,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Bounce_Slowdown.xml,150,8,Bounce,Slowdown,"Bounce$Ball.bounce",51.6,"Bounce.benchmark",40.0,"Bounce.lambda$benchmark$0",3.8,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.2,"java.util.Arrays.setAll",0.7,"som.Random.next",0.4,"Bounce.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0
150_8_CD_NoSlowdown.xml,150,8,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",17.7,"cd.CollisionDetector.isInVoxel",13.2,"cd.RedBlackTree.put",10.0,"cd.CallSign.compareTo",7.3,"cd.RedBlackTree.findNode",6.4,"cd.Vector2D.compareTo",3.6,"cd.CallSign.compareTo",3.2,"cd.RedBlackTree.treeMinimum",3.0,"cd.Vector2D.compareNumbers",3.0,"cd.RedBlackTree.forEach",2.6,"som.Vector.append",2.4,"cd.Vector2D.compareTo",2.4,"cd.CollisionDetector.handleNewFrame",2.3,"cd.CollisionDetector.recurse",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",2.0,"cd.RedBlackTree$Node.successor",1.8,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.<init>",1.3,"cd.RedBlackTree.get",1.3
150_8_CD_Slowdown.xml,150,8,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.9,"cd.CollisionDetector.isInVoxel",14.5,"cd.RedBlackTree.put",13.1,"cd.RedBlackTree.findNode",9.8,"cd.CallSign.compareTo",6.0,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.6,"cd.RedBlackTree.leftRotate",2.6,"cd.CollisionDetector.voxelHash",2.5,"cd.CollisionDetector.recurse",1.7,"cd.Vector2D.compareTo",1.7,"cd.RedBlackTree.forEach",1.6,"som.Vector.<init>",1.4,"cd.Vector2D.plus",1.4,"som.Vector.append",1.4,"cd.RedBlackTree$Node.successor",1.4,"cd.RedBlackTree.treeMinimum",1.3,"cd.RedBlackTree$Node.<init>",1.1,"cd.Vector2D.minus",1.1
150_8_DeltaBlue_NoSlowdown.xml,150,8,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.7,"deltablue.Plan.execute",12.9,"som.Vector.forEach",6.9,"deltablue.EqualityConstraint.execute",6.6,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.4,"java.util.Vector.add",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.Planner.makePlan",0.9,"som.Vector.lambda$remove$0",0.9,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.4,"deltablue.Variable.setWalkStrength",0.4
150_8_DeltaBlue_Slowdown.xml,150,8,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",58.0,"deltablue.Plan.execute",10.4,"deltablue.EqualityConstraint.execute",7.2,"som.Vector.forEach",5.5,"deltablue.ScaleConstraint.execute",2.8,"deltablue.Planner.addPropagate",1.9,"som.Vector.append",1.0,"som.Vector.<init>",0.8,"som.Vector.removeFirst",0.8,"deltablue.Planner.makePlan",0.8,"java.util.Vector.add",0.8,"deltablue.ScaleConstraint.recalculate",0.8,"deltablue.AbstractConstraint.satisfy",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.7,"som.Vector.lambda$remove$0",0.6,"deltablue.Variable.getValue",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Variable.getStay",0.4
150_8_Havlak_NoSlowdown.xml,150,8,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",19.8,"som.Vector.append",6.1,"havlak.HavlakLoopFinder.findLoops",5.8,"som.Vector.forEach",4.3,"havlak.UnionFindNode.initNode",4.0,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.stepD",2.2,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder$5.apply",1.7,"som.Vector.size",1.3,"som.Dictionary.at",1.2,"havlak.HavlakLoopFinder$2.apply",1.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.UnionFindNode.findSet",1.0,"som.Set.<init>",0.9,"som.Dictionary.transferEntries",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.8,"java.lang.Integer.valueOf",0.7
150_8_Havlak_Slowdown.xml,150,8,Havlak,Slowdown,"som.Vector.hasSome",34.0,"som.Vector.<init>",22.9,"havlak.HavlakLoopFinder.findLoops",7.7,"som.Vector.append",3.8,"havlak.HavlakLoopFinder.doDFS",3.5,"som.Vector.at",3.4,"som.Vector.forEach",3.2,"havlak.UnionFindNode.initNode",2.4,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.findSet",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.HavlakLoopFinder.identifyEdges",0.9,"som.Vector.size",0.8,"havlak.HavlakLoopFinder.stepD",0.7,"havlak.UnionFindNode.getBb",0.7,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder$1.apply",0.6,"som.Set.<init>",0.6,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.5,"som.Vector.removeAll",0.5
150_8_Json_NoSlowdown.xml,150,8,Json,NoSlowdown,"java.lang.String.equals",35.0,"java.lang.Character.toString",18.7,"json.JsonPureStringParser.read",8.1,"java.lang.StringBuilder.append",3.8,"java.lang.StringBuilder.toString",3.8,"json.JsonPureStringParser.subStringFromTo",3.3,"java.lang.String.charAt",2.8,"som.Vector.<init>",2.5,"som.Vector.append",2.5,"json.JsonPureStringParser.readStringInternal",2.4,"java.lang.String.hashCode",2.3,"java.lang.StringBuilder.<init>",2.0,"json.JsonPureStringParser.readArray",1.9,"json.JsonPureStringParser.endCapture",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.0,"json.JsonPureStringParser.readChar",0.5,"json.JsonPureStringParser.readNumber",0.5
150_8_Json_Slowdown.xml,150,8,Json,Slowdown,"java.lang.String.equals",34.9,"java.lang.Character.toString",21.1,"json.JsonPureStringParser.read",5.9,"java.lang.String.charAt",4.0,"json.JsonPureStringParser.subStringFromTo",3.7,"json.JsonPureStringParser.readStringInternal",2.8,"java.lang.StringBuilder.toString",2.7,"java.lang.StringBuilder.append",2.6,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.String.hashCode",2.0,"som.Vector.append",2.0,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readArray",1.8,"json.JsonPureStringParser.readValue",1.8,"json.JsonPureStringParser.skipWhiteSpace",1.3,"som.Vector.<init>",1.2,"json.JsonPureStringParser.isDigit",1.2,"json.JsonPureStringParser.endCapture",1.0,"java.lang.String.length",0.9,"json.JsonPureStringParser.readChar",0.9
150_8_List_NoSlowdown.xml,150,8,List,NoSlowdown,"List$Element.getNext",45.7,"List.isShorterThan",44.0,"List.tail",9.5,"List.makeList",0.4,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"Run.printResult",0.0,"List.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_List_Slowdown.xml,150,8,List,Slowdown,"List.isShorterThan",68.3,"List$Element.getNext",21.8,"List.tail",9.5,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Mandelbrot_NoSlowdown.xml,150,8,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Mandelbrot_Slowdown.xml,150,8,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_NBody_NoSlowdown.xml,150,8,NBody,NoSlowdown,"nbody.NBodySystem.advance",64.7,"nbody.Body.setVX",12.6,"nbody.Body.setVY",3.4,"nbody.Body.getX",3.2,"nbody.Body.getZ",2.9,"nbody.Body.getVX",2.7,"nbody.Body.getVZ",2.1,"nbody.Body.getY",1.7,"nbody.Body.getVY",1.6,"nbody.Body.setVZ",1.5,"java.lang.Math.sqrt",1.3,"nbody.Body.setZ",0.8,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.5,"Run.printResult",0.1,"nbody.Body.getMass",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
150_8_NBody_Slowdown.xml,150,8,NBody,Slowdown,"nbody.NBodySystem.advance",26.6,"NBody.innerBenchmarkLoop",16.7,"nbody.Body.getX",16.4,"nbody.Body.getZ",15.8,"nbody.Body.getY",13.6,"nbody.Body.setVX",4.4,"nbody.Body.setVY",1.4,"java.lang.Math.sqrt",1.3,"nbody.Body.getVX",1.2,"nbody.Body.getVZ",0.8,"nbody.Body.getVY",0.6,"nbody.Body.setVZ",0.5,"nbody.Body.setZ",0.3,"nbody.Body.setX",0.3,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"nbody.Body.getMass",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0
150_8_Permute_NoSlowdown.xml,150,8,Permute,NoSlowdown,"Permute.permute",69.3,"Permute.swap",30.5,"Permute.benchmark",0.1,"Run.printResult",0.1,"Permute.verifyResult",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Permute_Slowdown.xml,150,8,Permute,Slowdown,"Permute.permute",63.4,"Permute.swap",36.4,"Run.measure",0.1,"Run.printResult",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Queens_NoSlowdown.xml,150,8,Queens,NoSlowdown,"Queens.getRowColumn",54.9,"Queens.placeQueen",32.4,"Queens.setRowColumn",10.2,"Queens.queens",1.3,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.4,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.reportBenchmark",0.1,"java.util.Arrays.fill",0.1,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Queens_Slowdown.xml,150,8,Queens,Slowdown,"Queens.getRowColumn",60.5,"Queens.placeQueen",23.7,"Queens.setRowColumn",14.7,"Queens.queens",0.6,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Richards_NoSlowdown.xml,150,8,Richards,NoSlowdown,"richards.Scheduler.schedule",24.3,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",9.5,"richards.TaskState.isTaskHoldingOrWaiting",7.8,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.TaskControlBlock.addInputAndCheckPriority",4.1,"richards.Scheduler$IdleProcessFunction.apply",2.9,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.0,"richards.Packet.setLink",2.0,"richards.TaskControlBlock.getIdentity",1.9,"richards.RBObject.append",1.7,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.IdleTaskDataRecord.setControl",1.6,"richards.Scheduler.queuePacket",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.TaskControlBlock.getLink",1.3,"richards.TaskState.setTaskHolding",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Scheduler.holdSelf",0.9
150_8_Richards_Slowdown.xml,150,8,Richards,Slowdown,"richards.Scheduler.schedule",27.6,"richards.TaskControlBlock.runTask",19.9,"richards.Scheduler$HandlerProcessFunction.apply",8.6,"richards.TaskState.isTaskHoldingOrWaiting",7.5,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.Packet.setLink",4.5,"richards.Scheduler.findTask",3.7,"richards.TaskControlBlock.addInputAndCheckPriority",3.0,"richards.TaskState.isWaitingWithPacket",2.4,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.Scheduler.queuePacket",1.3,"richards.Scheduler$IdleProcessFunction.apply",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Packet.getDatum",1.0,"richards.IdleTaskDataRecord.setControl",0.9,"richards.RBObject.append",0.9,"richards.Scheduler$WorkerProcessFunction.apply",0.7,"richards.Scheduler.holdSelf",0.7,"richards.Packet.setIdentity",0.6
150_8_Sieve_NoSlowdown.xml,150,8,Sieve,NoSlowdown,"Sieve.sieve",89.2,"java.util.Arrays.fill",9.6,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.2,"Run.printResult",0.0,"Run.printTotal",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Sieve_Slowdown.xml,150,8,Sieve,Slowdown,"Sieve.sieve",91.4,"java.util.Arrays.fill",7.5,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Storage_NoSlowdown.xml,150,8,Storage,NoSlowdown,"Storage.buildTreeDepth",80.7,"som.Arrays.setAll",12.4,"som.Random.next",5.7,"Storage.lambda$buildTreeDepth$0",1.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Storage_Slowdown.xml,150,8,Storage,Slowdown,"Storage.buildTreeDepth",81.7,"som.Arrays.setAll",13.3,"som.Random.next",4.2,"Storage.lambda$buildTreeDepth$0",0.6,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Storage.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Towers_NoSlowdown.xml,150,8,Towers,NoSlowdown,"Towers.popDiskFrom",31.5,"Towers.moveDisks",20.9,"Towers.pushDisk",19.3,"Towers$TowersDisk.setNext",17.6,"Towers.moveTopDisk",7.5,"Towers$TowersDisk.getSize",3.1,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_8_Towers_Slowdown.xml,150,8,Towers,Slowdown,"Towers.popDiskFrom",34.2,"Towers.moveDisks",21.5,"Towers$TowersDisk.setNext",17.9,"Towers.pushDisk",15.8,"Towers.moveTopDisk",8.8,"Towers$TowersDisk.getSize",1.6,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Towers.benchmark",0.0,"Towers.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Bounce_NoSlowdown.xml,150,9,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.4,"Bounce.benchmark",25.6,"java.lang.Math.abs",4.5,"Bounce$Ball.<init>",3.6,"java.util.Arrays.setAll",1.0,"Bounce.lambda$benchmark$0",0.9,"som.Random.next",0.8,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Bounce_Slowdown.xml,150,9,Bounce,Slowdown,"Bounce$Ball.bounce",51.2,"Bounce.benchmark",41.0,"Bounce.lambda$benchmark$0",3.5,"java.lang.Math.abs",2.3,"Bounce$Ball.<init>",1.1,"java.util.Arrays.setAll",0.5,"som.Random.next",0.4,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_CD_NoSlowdown.xml,150,9,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.7,"cd.CollisionDetector.isInVoxel",12.2,"cd.RedBlackTree.put",10.7,"cd.RedBlackTree.findNode",7.2,"cd.CallSign.compareTo",7.0,"cd.Vector2D.compareTo",4.1,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareTo",3.0,"cd.RedBlackTree.treeMinimum",3.0,"cd.Vector2D.compareNumbers",2.8,"som.Vector.append",2.5,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.handleNewFrame",2.3,"cd.CollisionDetector.recurse",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",2.0,"cd.RedBlackTree$Node.successor",1.8,"cd.Simulator.simulate",1.6,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.plus",1.3
150_9_CD_Slowdown.xml,150,9,CD,Slowdown,"cd.RedBlackTree.treeInsert",20.5,"cd.CollisionDetector.isInVoxel",14.4,"cd.RedBlackTree.put",12.2,"cd.RedBlackTree.findNode",10.1,"cd.CallSign.compareTo",6.7,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareTo",3.0,"cd.CollisionDetector.voxelHash",2.5,"cd.RedBlackTree.leftRotate",2.5,"cd.Vector2D.compareNumbers",2.4,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree.forEach",1.6,"cd.Vector2D.compareTo",1.6,"cd.RedBlackTree$Node.successor",1.5,"som.Vector.<init>",1.4,"cd.RedBlackTree.treeMinimum",1.4,"cd.Vector2D.plus",1.3,"som.Vector.append",1.2,"cd.RedBlackTree.get",1.2,"cd.Vector2D.minus",1.2
150_9_DeltaBlue_NoSlowdown.xml,150,9,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.2,"deltablue.Plan.execute",10.4,"som.Vector.forEach",6.5,"deltablue.EqualityConstraint.execute",5.0,"deltablue.ScaleConstraint.execute",2.5,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.6,"java.util.Vector.add",1.6,"deltablue.AbstractConstraint.satisfy",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.ScaleConstraint.recalculate",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.projectionTest",0.5,"deltablue.Variable.setWalkStrength",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4,"deltablue.Planner.removePropagateFrom",0.4
150_9_DeltaBlue_Slowdown.xml,150,9,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",62.7,"deltablue.Plan.execute",7.9,"deltablue.EqualityConstraint.execute",6.1,"som.Vector.forEach",4.8,"deltablue.ScaleConstraint.execute",2.4,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.0,"java.util.Vector.add",1.0,"deltablue.ScaleConstraint.recalculate",0.9,"som.Vector.removeFirst",0.8,"som.Vector.<init>",0.8,"deltablue.BinaryConstraint.getOutput",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.AbstractConstraint.satisfy",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Variable.getValue",0.5,"som.Vector.lambda$remove$0",0.5,"som.Vector.with",0.4
150_9_Havlak_NoSlowdown.xml,150,9,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",20.0,"havlak.HavlakLoopFinder.findLoops",5.9,"som.Vector.append",5.8,"som.Vector.forEach",4.5,"havlak.UnionFindNode.initNode",3.9,"havlak.HavlakLoopFinder.doDFS",2.2,"som.Vector.at",2.2,"havlak.HavlakLoopFinder.stepD",1.9,"havlak.HavlakLoopFinder$5.apply",1.8,"som.Dictionary.at",1.3,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.1,"havlak.HavlakLoopFinder$2.apply",0.9,"havlak.HavlakLoopFinder.stepEProcessNonBackPreds",0.9,"som.Set.<init>",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder$2.apply",0.7
150_9_Havlak_Slowdown.xml,150,9,Havlak,Slowdown,"som.Vector.hasSome",34.9,"som.Vector.<init>",22.5,"havlak.HavlakLoopFinder.findLoops",7.7,"som.Vector.append",3.9,"havlak.HavlakLoopFinder.doDFS",3.6,"som.Vector.at",3.5,"som.Vector.forEach",3.3,"havlak.UnionFindNode.initNode",1.8,"havlak.HavlakLoopFinder$5.apply",1.8,"havlak.UnionFindNode.findSet",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.2,"havlak.UnionFindNode.getBb",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"som.Vector.size",0.8,"havlak.HavlakLoopFinder$1.apply",0.8,"som.Dictionary.at",0.7,"havlak.HavlakLoopFinder.stepD",0.6,"som.Set.<init>",0.6,"som.Dictionary.atPut",0.5,"som.Dictionary.getBucketIdx",0.5
150_9_Json_NoSlowdown.xml,150,9,Json,NoSlowdown,"java.lang.String.equals",34.7,"java.lang.Character.toString",20.1,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.toString",4.5,"java.lang.StringBuilder.append",3.5,"java.lang.String.charAt",2.6,"json.JsonPureStringParser.subStringFromTo",2.4,"som.Vector.<init>",2.4,"json.JsonPureStringParser.readStringInternal",2.3,"java.lang.String.hashCode",2.3,"som.Vector.append",2.2,"java.lang.StringBuilder.<init>",1.8,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.readArray",1.6,"json.JsonPureStringParser.isWhiteSpace",1.4,"json.JsonPureStringParser.endCapture",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.3,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.readChar",0.8,"java.lang.String.length",0.6
150_9_Json_Slowdown.xml,150,9,Json,Slowdown,"java.lang.String.equals",36.6,"java.lang.Character.toString",20.0,"json.JsonPureStringParser.read",5.9,"java.lang.String.charAt",4.3,"json.JsonPureStringParser.readStringInternal",2.9,"json.JsonPureStringParser.subStringFromTo",2.9,"java.lang.StringBuilder.append",2.8,"java.lang.StringBuilder.toString",2.6,"java.lang.String.hashCode",2.3,"json.JsonPureStringParser.isWhiteSpace",2.3,"java.lang.StringBuilder.<init>",1.8,"som.Vector.append",1.7,"json.JsonPureStringParser.readValue",1.7,"json.JsonPureStringParser.readArray",1.6,"som.Vector.<init>",1.4,"json.JsonPureStringParser.isDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.3,"java.lang.String.length",1.0,"json.JsonPureStringParser.readDigit",0.8,"json.JsonObject$HashIndexTable.<init>",0.8
150_9_List_NoSlowdown.xml,150,9,List,NoSlowdown,"List$Element.getNext",46.3,"List.isShorterThan",43.4,"List.tail",9.6,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List.benchmark",0.0,"List$Element.length",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_List_Slowdown.xml,150,9,List,Slowdown,"List.isShorterThan",68.1,"List$Element.getNext",21.7,"List.tail",9.9,"List.makeList",0.2,"java.lang.Integer.valueOf",0.0,"java.io.PrintStream.println",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Mandelbrot_NoSlowdown.xml,150,9,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Mandelbrot_Slowdown.xml,150,9,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_NBody_NoSlowdown.xml,150,9,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.1,"nbody.Body.setVX",12.1,"nbody.Body.setVY",3.0,"nbody.Body.getZ",2.8,"nbody.Body.getVX",2.6,"nbody.Body.getX",2.1,"nbody.Body.getVY",2.1,"nbody.Body.getY",2.0,"nbody.Body.getVZ",1.9,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.5,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.7,"NBody.innerBenchmarkLoop",0.3,"Run.printResult",0.1,"nbody.Body.getMass",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"",0,"",0
150_9_NBody_Slowdown.xml,150,9,NBody,Slowdown,"nbody.NBodySystem.advance",27.0,"nbody.Body.getX",17.2,"NBody.innerBenchmarkLoop",16.4,"nbody.Body.getZ",15.3,"nbody.Body.getY",13.6,"nbody.Body.setVX",4.5,"nbody.Body.setVY",1.2,"nbody.Body.getVX",1.1,"java.lang.Math.sqrt",1.1,"nbody.Body.getVZ",0.8,"nbody.Body.setVZ",0.6,"nbody.Body.getVY",0.5,"nbody.Body.setX",0.3,"nbody.Body.setZ",0.3,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.setY",0.0,"",0
150_9_Permute_NoSlowdown.xml,150,9,Permute,NoSlowdown,"Permute.permute",69.5,"Permute.swap",30.3,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Permute_Slowdown.xml,150,9,Permute,Slowdown,"Permute.permute",63.3,"Permute.swap",36.5,"Run.measure",0.2,"Permute.benchmark",0.0,"Run.printResult",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Queens_NoSlowdown.xml,150,9,Queens,NoSlowdown,"Queens.getRowColumn",54.8,"Queens.placeQueen",31.6,"Queens.setRowColumn",10.8,"Queens.queens",1.7,"java.util.Arrays.fill",0.6,"Queens.benchmark",0.3,"java.util.Arrays.fill",0.1,"Run.printResult",0.1,"Queens.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Queens_Slowdown.xml,150,9,Queens,Slowdown,"Queens.getRowColumn",60.2,"Queens.placeQueen",23.6,"Queens.setRowColumn",14.9,"Queens.queens",0.8,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Richards_NoSlowdown.xml,150,9,Richards,NoSlowdown,"richards.Scheduler.schedule",24.4,"richards.TaskControlBlock.runTask",18.1,"richards.Scheduler$HandlerProcessFunction.apply",10.1,"richards.TaskState.isTaskHoldingOrWaiting",7.7,"richards.Scheduler$DeviceProcessFunction.apply",5.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler$IdleProcessFunction.apply",3.3,"richards.Scheduler.findTask",2.5,"richards.TaskState.isWaitingWithPacket",2.2,"richards.Packet.setLink",2.0,"richards.RBObject.append",2.0,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.TaskControlBlock.getIdentity",1.6,"richards.Scheduler$WorkerProcessFunction.apply",1.5,"richards.Scheduler.queuePacket",1.3,"richards.TaskControlBlock.getLink",1.3,"richards.IdleTaskDataRecord.setControl",1.2,"richards.TaskState.setTaskHolding",1.1,"richards.Packet.getDatum",1.0,"richards.HandlerTaskDataRecord.deviceIn",0.9
150_9_Richards_Slowdown.xml,150,9,Richards,Slowdown,"richards.Scheduler.schedule",27.2,"richards.TaskControlBlock.runTask",21.1,"richards.Scheduler$HandlerProcessFunction.apply",9.1,"richards.TaskState.isTaskHoldingOrWaiting",6.9,"richards.Scheduler$DeviceProcessFunction.apply",5.6,"richards.Packet.setLink",4.3,"richards.Scheduler.findTask",3.0,"richards.TaskControlBlock.addInputAndCheckPriority",2.8,"richards.TaskState.isWaitingWithPacket",2.1,"richards.TaskControlBlock.getIdentity",2.0,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.Scheduler.queuePacket",1.4,"richards.Scheduler$IdleProcessFunction.apply",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.RBObject.append",1.1,"richards.Packet.getDatum",1.0,"richards.Scheduler$WorkerProcessFunction.apply",0.8,"richards.IdleTaskDataRecord.setControl",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.TaskState.setTaskHolding",0.7
150_9_Sieve_NoSlowdown.xml,150,9,Sieve,NoSlowdown,"Sieve.sieve",88.8,"java.util.Arrays.fill",9.8,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.2,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Sieve_Slowdown.xml,150,9,Sieve,Slowdown,"Sieve.sieve",91.4,"java.util.Arrays.fill",7.4,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Storage_NoSlowdown.xml,150,9,Storage,NoSlowdown,"Storage.buildTreeDepth",79.1,"som.Arrays.setAll",12.4,"som.Random.next",6.8,"Storage.lambda$buildTreeDepth$0",1.5,"java.io.PrintStream.println",0.1,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Storage.benchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Storage_Slowdown.xml,150,9,Storage,Slowdown,"Storage.buildTreeDepth",82.2,"som.Arrays.setAll",12.5,"som.Random.next",4.5,"Storage.lambda$buildTreeDepth$0",0.7,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.runBenchmark",0.0,"Storage.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Towers_NoSlowdown.xml,150,9,Towers,NoSlowdown,"Towers.popDiskFrom",30.3,"Towers.moveDisks",21.7,"Towers.pushDisk",18.8,"Towers$TowersDisk.setNext",18.1,"Towers.moveTopDisk",7.4,"Towers$TowersDisk.getSize",3.4,"Run.printResult",0.1,"Towers.benchmark",0.1,"Run.runBenchmark",0.0,"Towers.buildTowerAt",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
150_9_Towers_Slowdown.xml,150,9,Towers,Slowdown,"Towers.popDiskFrom",33.7,"Towers.moveDisks",20.7,"Towers$TowersDisk.setNext",18.4,"Towers.pushDisk",16.2,"Towers.moveTopDisk",9.3,"Towers$TowersDisk.getSize",1.7,"java.io.PrintStream.println",0.0,"Towers.benchmark",0.0,"Towers.buildTowerAt",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Bounce_NoSlowdown.xml,50,10,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.2,"Bounce.benchmark",26.1,"java.lang.Math.abs",4.6,"Bounce$Ball.<init>",3.4,"Bounce.lambda$benchmark$0",1.3,"java.util.Arrays.setAll",1.2,"som.Random.next",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Bounce.verifyResult",0.1,"Run.printResult",0.1,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Bounce_Slowdown.xml,50,10,Bounce,Slowdown,"Bounce$Ball.bounce",59.4,"Bounce.benchmark",31.9,"Bounce.lambda$benchmark$0",2.8,"java.lang.Math.abs",2.6,"Bounce$Ball.<init>",1.9,"java.util.Arrays.setAll",0.9,"som.Random.next",0.5,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_CD_NoSlowdown.xml,50,10,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",15.6,"cd.CollisionDetector.isInVoxel",12.6,"cd.RedBlackTree.put",10.4,"cd.CallSign.compareTo",8.4,"cd.RedBlackTree.findNode",6.4,"cd.Vector2D.compareTo",3.7,"cd.RedBlackTree.treeMinimum",3.2,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.9,"cd.CollisionDetector.handleNewFrame",2.8,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.recurse",2.2,"cd.RedBlackTree.leftRotate",2.2,"som.Vector.append",2.1,"cd.RedBlackTree$Node.successor",2.1,"som.Vector.<init>",2.0,"cd.CollisionDetector.voxelHash",1.6,"cd.Simulator.simulate",1.3,"cd.Vector2D.minus",1.2
50_10_CD_Slowdown.xml,50,10,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.4,"cd.CollisionDetector.isInVoxel",14.2,"cd.RedBlackTree.put",10.6,"cd.RedBlackTree.findNode",8.7,"cd.CallSign.compareTo",7.2,"cd.Vector2D.compareTo",3.4,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareTo",2.7,"cd.Vector2D.compareNumbers",2.5,"cd.RedBlackTree.leftRotate",2.3,"som.Vector.append",2.2,"cd.RedBlackTree.treeMinimum",2.1,"cd.RedBlackTree.forEach",1.9,"cd.CollisionDetector.recurse",1.9,"cd.CollisionDetector.handleNewFrame",1.9,"cd.RedBlackTree$Node.successor",1.6,"som.Vector.<init>",1.4,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.plus",1.3,"cd.Vector2D.minus",1.1
50_10_DeltaBlue_NoSlowdown.xml,50,10,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.5,"deltablue.Plan.execute",12.8,"som.Vector.forEach",6.7,"deltablue.EqualityConstraint.execute",6.5,"deltablue.ScaleConstraint.execute",4.3,"deltablue.Planner.addPropagate",2.1,"java.util.Vector.add",1.5,"deltablue.AbstractConstraint.satisfy",1.4,"deltablue.ScaleConstraint.recalculate",1.3,"som.Vector.append",1.2,"deltablue.Planner.makePlan",1.0,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.8,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Variable.setWalkStrength",0.5
50_10_DeltaBlue_Slowdown.xml,50,10,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",51.0,"deltablue.Plan.execute",13.2,"deltablue.EqualityConstraint.execute",7.6,"som.Vector.forEach",6.2,"deltablue.ScaleConstraint.execute",3.3,"deltablue.Planner.addPropagate",1.9,"deltablue.AbstractConstraint.satisfy",1.3,"java.util.Vector.add",1.3,"som.Vector.append",1.2,"som.Vector.lambda$remove$0",0.9,"deltablue.Planner.projectionTest",0.8,"deltablue.Planner.makePlan",0.7,"som.Vector.<init>",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Variable.setValue",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.removePropagateFrom",0.5,"som.Vector.removeFirst",0.5
50_10_Havlak_NoSlowdown.xml,50,10,Havlak,NoSlowdown,"som.Vector.hasSome",31.2,"som.Vector.<init>",19.2,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",5.9,"havlak.UnionFindNode.initNode",3.9,"som.Vector.forEach",3.7,"havlak.HavlakLoopFinder.stepD",2.7,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.2,"havlak.HavlakLoopFinder.doDFS",2.2,"som.Dictionary.at",1.5,"havlak.UnionFindNode.findSet",1.2,"havlak.LoopStructureGraph$2.apply",1.1,"som.Vector.size",1.0,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Vector.at",1.0,"som.Dictionary.transferEntries",0.8,"havlak.HavlakLoopFinder.isAncestor",0.7,"havlak.LoopStructureGraph$2.apply",0.7,"som.Set.<init>",0.7,"havlak.HavlakLoopFinder$1.apply",0.7
50_10_Havlak_Slowdown.xml,50,10,Havlak,Slowdown,"som.Vector.hasSome",39.1,"som.Vector.<init>",15.6,"havlak.HavlakLoopFinder.findLoops",7.2,"som.Vector.append",5.4,"som.Vector.forEach",3.5,"havlak.UnionFindNode.initNode",2.9,"havlak.HavlakLoopFinder.doDFS",2.3,"havlak.HavlakLoopFinder.stepD",1.7,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.6,"havlak.HavlakLoopFinder$2.apply",1.3,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.0,"som.Dictionary.at",1.0,"havlak.HavlakLoopFinder.identifyEdges",1.0,"java.lang.Integer.valueOf",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"som.Vector.at",0.8,"havlak.HavlakLoopFinder$2.apply",0.8,"som.Dictionary.transferEntries",0.7,"som.Set.<init>",0.7
50_10_Json_NoSlowdown.xml,50,10,Json,NoSlowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",20.1,"json.JsonPureStringParser.read",8.1,"java.lang.StringBuilder.append",3.1,"java.lang.StringBuilder.toString",2.9,"java.lang.String.charAt",2.8,"java.lang.String.hashCode",2.7,"json.JsonPureStringParser.readStringInternal",2.6,"som.Vector.<init>",2.2,"json.JsonPureStringParser.subStringFromTo",2.1,"som.Vector.append",1.9,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.endCapture",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.readDigit",1.6,"java.lang.StringBuilder.<init>",1.5,"json.JsonPureStringParser.isWhiteSpace",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.readChar",0.9,"java.lang.String.length",0.6
50_10_Json_Slowdown.xml,50,10,Json,Slowdown,"java.lang.String.equals",35.7,"java.lang.Character.toString",18.6,"json.JsonPureStringParser.read",7.4,"java.lang.StringBuilder.toString",3.6,"java.lang.String.charAt",3.6,"java.lang.StringBuilder.append",3.3,"json.JsonPureStringParser.subStringFromTo",3.2,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.String.hashCode",2.2,"som.Vector.<init>",2.1,"som.Vector.append",2.1,"java.lang.StringBuilder.<init>",2.0,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.skipWhiteSpace",1.3,"java.lang.String.length",1.2,"json.JsonPureStringParser.readDigit",1.0,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.endCapture",0.9
50_10_List_NoSlowdown.xml,50,10,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",43.6,"List.tail",9.7,"List.makeList",0.4,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.0,"List.benchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_List_Slowdown.xml,50,10,List,Slowdown,"List.isShorterThan",59.8,"List$Element.getNext",31.9,"List.tail",7.8,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Mandelbrot_NoSlowdown.xml,50,10,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.8,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Mandelbrot_Slowdown.xml,50,10,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_NBody_NoSlowdown.xml,50,10,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.9,"nbody.Body.setVX",12.0,"nbody.Body.setVY",3.4,"nbody.Body.getZ",2.6,"nbody.Body.getVX",2.6,"nbody.Body.getX",2.2,"nbody.Body.getVZ",2.2,"nbody.Body.getY",2.0,"nbody.Body.getVY",1.8,"nbody.Body.setVZ",1.3,"java.lang.Math.sqrt",1.2,"nbody.Body.setX",0.7,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0
50_10_NBody_Slowdown.xml,50,10,NBody,Slowdown,"nbody.NBodySystem.advance",45.2,"nbody.Body.getZ",9.8,"nbody.Body.getY",9.6,"NBody.innerBenchmarkLoop",8.9,"nbody.Body.getX",8.8,"nbody.Body.setVX",7.5,"nbody.Body.setVY",2.1,"java.lang.Math.sqrt",1.9,"nbody.Body.getVX",1.8,"nbody.Body.getVZ",1.5,"nbody.Body.getVY",1.0,"nbody.Body.setVZ",0.9,"nbody.Body.setX",0.5,"nbody.Body.setZ",0.4,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"",0
50_10_Permute_NoSlowdown.xml,50,10,Permute,NoSlowdown,"Permute.permute",69.8,"Permute.swap",30.0,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Permute_Slowdown.xml,50,10,Permute,Slowdown,"Permute.permute",68.5,"Permute.swap",31.1,"Run.measure",0.3,"Permute.verifyResult",0.1,"Run.printResult",0.1,"Permute.benchmark",0.0,"Run.doRuns",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Queens_NoSlowdown.xml,50,10,Queens,NoSlowdown,"Queens.getRowColumn",56.2,"Queens.placeQueen",31.3,"Queens.setRowColumn",9.9,"Queens.queens",1.9,"java.util.Arrays.fill",0.3,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Queens_Slowdown.xml,50,10,Queens,Slowdown,"Queens.getRowColumn",61.3,"Queens.placeQueen",24.7,"Queens.setRowColumn",12.4,"Queens.queens",1.0,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.util.Arrays.fill",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Richards_NoSlowdown.xml,50,10,Richards,NoSlowdown,"richards.Scheduler.schedule",24.4,"richards.TaskControlBlock.runTask",18.4,"richards.Scheduler$HandlerProcessFunction.apply",9.3,"richards.TaskState.isTaskHoldingOrWaiting",7.3,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.TaskControlBlock.addInputAndCheckPriority",3.5,"richards.Scheduler.findTask",2.8,"richards.TaskControlBlock.getIdentity",2.5,"richards.Scheduler$IdleProcessFunction.apply",2.5,"richards.TaskState.isWaitingWithPacket",2.4,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.RBObject.append",1.9,"richards.Packet.setLink",1.8,"richards.TaskControlBlock.getLink",1.5,"richards.Scheduler.queuePacket",1.5,"richards.IdleTaskDataRecord.setControl",1.4,"richards.TaskState.setTaskHolding",1.3,"richards.Scheduler$WorkerProcessFunction.apply",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Packet.getIdentity",0.9
50_10_Richards_Slowdown.xml,50,10,Richards,Slowdown,"richards.Scheduler.schedule",26.7,"richards.TaskControlBlock.runTask",19.7,"richards.Scheduler$HandlerProcessFunction.apply",7.9,"richards.TaskState.isTaskHoldingOrWaiting",6.5,"richards.Scheduler$DeviceProcessFunction.apply",5.4,"richards.Packet.setLink",4.5,"richards.TaskControlBlock.addInputAndCheckPriority",4.4,"richards.Scheduler.findTask",2.6,"richards.Scheduler$IdleProcessFunction.apply",2.0,"richards.TaskState.isWaitingWithPacket",1.9,"richards.TaskControlBlock.getIdentity",1.7,"richards.DeviceTaskDataRecord.setPending",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.IdleTaskDataRecord.setControl",1.2,"richards.Scheduler.queuePacket",1.1,"richards.TaskControlBlock.getLink",1.0,"richards.Packet.getDatum",0.9,"richards.RBObject.append",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.7
50_10_Sieve_NoSlowdown.xml,50,10,Sieve,NoSlowdown,"Sieve.sieve",89.4,"java.util.Arrays.fill",9.7,"Sieve.benchmark",0.8,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Sieve_Slowdown.xml,50,10,Sieve,Slowdown,"Sieve.sieve",90.5,"java.util.Arrays.fill",8.6,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"Run.doRuns",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Storage_NoSlowdown.xml,50,10,Storage,NoSlowdown,"Storage.buildTreeDepth",60.3,"som.Arrays.setAll",35.4,"som.Random.next",2.3,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Storage_Slowdown.xml,50,10,Storage,Slowdown,"Storage.buildTreeDepth",60.7,"som.Arrays.setAll",34.2,"som.Random.next",3.8,"Storage.lambda$buildTreeDepth$0",1.2,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Towers_NoSlowdown.xml,50,10,Towers,NoSlowdown,"Towers.popDiskFrom",31.8,"Towers.moveDisks",20.9,"Towers.pushDisk",18.6,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",7.3,"Towers$TowersDisk.getSize",3.8,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"Towers.buildTowerAt",0.1,"Run.reportBenchmark",0.0,"Towers.verifyResult",0.0,"Towers.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_10_Towers_Slowdown.xml,50,10,Towers,Slowdown,"Towers.popDiskFrom",33.1,"Towers.pushDisk",19.8,"Towers.moveDisks",18.9,"Towers$TowersDisk.setNext",18.1,"Towers.moveTopDisk",8.3,"Towers$TowersDisk.getSize",1.7,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Towers.benchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Bounce_NoSlowdown.xml,50,1,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.6,"Bounce.benchmark",25.4,"java.lang.Math.abs",3.9,"Bounce$Ball.<init>",3.5,"java.util.Arrays.setAll",1.3,"Bounce.lambda$benchmark$0",1.1,"som.Random.next",1.0,"Bounce.verifyResult",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.1,"Run.measure",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0
50_1_Bounce_Slowdown.xml,50,1,Bounce,Slowdown,"Bounce$Ball.bounce",60.2,"Bounce.benchmark",31.2,"java.lang.Math.abs",2.7,"Bounce.lambda$benchmark$0",2.6,"Bounce$Ball.<init>",1.6,"java.util.Arrays.setAll",1.0,"som.Random.next",0.6,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_CD_NoSlowdown.xml,50,1,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",15.7,"cd.CollisionDetector.isInVoxel",12.5,"cd.RedBlackTree.put",10.6,"cd.CallSign.compareTo",7.9,"cd.RedBlackTree.findNode",6.7,"cd.Vector2D.compareTo",4.0,"cd.CallSign.compareTo",3.4,"cd.Vector2D.compareNumbers",3.3,"cd.CollisionDetector.recurse",2.7,"cd.RedBlackTree.treeMinimum",2.5,"cd.Vector2D.compareTo",2.5,"som.Vector.append",2.3,"cd.RedBlackTree.forEach",2.3,"cd.CollisionDetector.handleNewFrame",2.1,"som.Vector.<init>",2.1,"cd.RedBlackTree.leftRotate",1.8,"cd.CollisionDetector.voxelHash",1.6,"cd.RedBlackTree$Node.successor",1.5,"cd.Simulator.simulate",1.5,"cd.Vector2D.minus",1.2
50_1_CD_Slowdown.xml,50,1,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.5,"cd.CollisionDetector.isInVoxel",14.4,"cd.RedBlackTree.put",11.3,"cd.RedBlackTree.findNode",8.8,"cd.CallSign.compareTo",6.4,"cd.Vector2D.compareTo",3.4,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.8,"cd.Vector2D.compareNumbers",2.4,"cd.RedBlackTree.leftRotate",2.4,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree.treeMinimum",2.1,"cd.RedBlackTree.forEach",1.9,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.append",1.8,"cd.CollisionDetector.handleNewFrame",1.7,"som.Vector.<init>",1.6,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.minus",1.3,"cd.Vector2D.<init>",1.2
50_1_DeltaBlue_NoSlowdown.xml,50,1,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",50.6,"deltablue.Plan.execute",13.4,"som.Vector.forEach",7.3,"deltablue.EqualityConstraint.execute",6.3,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",2.1,"java.util.Vector.add",1.4,"som.Vector.append",1.3,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.8,"som.Vector.<init>",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
50_1_DeltaBlue_Slowdown.xml,50,1,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",55.2,"deltablue.Plan.execute",11.7,"som.Vector.forEach",6.5,"deltablue.EqualityConstraint.execute",5.4,"deltablue.ScaleConstraint.execute",3.0,"deltablue.Planner.addPropagate",1.9,"som.Vector.append",1.2,"java.util.Vector.add",1.2,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.<init>",0.8,"som.Vector.lambda$remove$0",0.8,"deltablue.Planner.addConstraintsConsumingTo",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.Variable.setValue",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Variable.getStay",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"som.Vector.removeFirst",0.5
50_1_Havlak_NoSlowdown.xml,50,1,Havlak,NoSlowdown,"som.Vector.hasSome",31.7,"som.Vector.<init>",19.4,"havlak.HavlakLoopFinder.findLoops",8.0,"som.Vector.append",5.7,"havlak.UnionFindNode.initNode",3.9,"som.Vector.forEach",3.8,"havlak.HavlakLoopFinder.stepD",2.6,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.1,"havlak.HavlakLoopFinder.doDFS",1.8,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.1,"havlak.LoopStructureGraph$2.apply",1.1,"som.Dictionary.at",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.HavlakLoopFinder.isAncestor",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"som.Vector.at",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.7,"som.Set.<init>",0.7,"som.Dictionary.transferEntries",0.7
50_1_Havlak_Slowdown.xml,50,1,Havlak,Slowdown,"som.Vector.hasSome",41.8,"som.Vector.<init>",13.5,"havlak.HavlakLoopFinder.findLoops",7.2,"som.Vector.append",5.6,"som.Vector.forEach",3.4,"havlak.UnionFindNode.initNode",2.5,"havlak.HavlakLoopFinder.doDFS",2.3,"som.Vector.size",1.5,"havlak.HavlakLoopFinder$2.apply",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.HavlakLoopFinder.stepD",1.2,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Dictionary.at",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"java.lang.Integer.valueOf",0.8,"som.Vector.at",0.8,"som.Dictionary.getBucket",0.8,"havlak.LoopStructureGraph$2.apply",0.7,"havlak.HavlakLoopFinder.isAncestor",0.6
50_1_Json_NoSlowdown.xml,50,1,Json,NoSlowdown,"java.lang.String.equals",34.5,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.append",3.8,"java.lang.StringBuilder.toString",3.5,"json.JsonPureStringParser.subStringFromTo",2.8,"json.JsonPureStringParser.readStringInternal",2.7,"som.Vector.<init>",2.7,"som.Vector.append",2.5,"java.lang.String.charAt",2.4,"java.lang.String.hashCode",2.3,"json.JsonPureStringParser.readDigit",1.9,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.readArray",1.7,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.endCapture",1.4,"json.JsonPureStringParser.readValue",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.isDigit",0.8
50_1_Json_Slowdown.xml,50,1,Json,Slowdown,"java.lang.String.equals",36.6,"java.lang.Character.toString",17.6,"json.JsonPureStringParser.read",6.7,"java.lang.String.charAt",4.4,"java.lang.StringBuilder.append",3.3,"java.lang.StringBuilder.toString",3.2,"json.JsonPureStringParser.subStringFromTo",3.2,"som.Vector.append",2.6,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.String.hashCode",2.0,"som.Vector.<init>",2.0,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readArray",1.8,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readDigit",1.3,"java.lang.String.length",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.2,"json.JsonPureStringParser.readChar",0.9
50_1_List_NoSlowdown.xml,50,1,List,NoSlowdown,"List$Element.getNext",45.5,"List.isShorterThan",43.8,"List.tail",9.8,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"java.io.PrintStream.println",0.0,"List$Element.length",0.0,"List.verifyResult",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_List_Slowdown.xml,50,1,List,Slowdown,"List.isShorterThan",59.7,"List$Element.getNext",31.9,"List.tail",7.8,"List.makeList",0.4,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Mandelbrot_NoSlowdown.xml,50,1,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.1,"Harness.processArguments",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Mandelbrot_Slowdown.xml,50,1,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_NBody_NoSlowdown.xml,50,1,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.4,"nbody.Body.setVX",11.9,"nbody.Body.setVY",2.9,"nbody.Body.getZ",2.8,"nbody.Body.getVX",2.8,"nbody.Body.getX",2.5,"nbody.Body.getVZ",1.9,"java.lang.Math.sqrt",1.8,"nbody.Body.getVY",1.7,"nbody.Body.getY",1.7,"nbody.Body.setVZ",1.7,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"java.lang.ClassLoader.loadClass",0.0,"Run.printTotal",0.0,"nbody.Body.getMass",0.0,"",0
50_1_NBody_Slowdown.xml,50,1,NBody,Slowdown,"nbody.NBodySystem.advance",44.7,"nbody.Body.getZ",10.2,"nbody.Body.getX",9.4,"nbody.Body.getY",9.2,"NBody.innerBenchmarkLoop",9.1,"nbody.Body.setVX",7.5,"nbody.Body.getVX",2.1,"java.lang.Math.sqrt",2.0,"nbody.Body.setVY",1.9,"nbody.Body.getVZ",1.3,"nbody.Body.getVY",1.0,"nbody.Body.setVZ",0.8,"nbody.Body.setX",0.4,"nbody.Body.setZ",0.4,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0
50_1_Permute_NoSlowdown.xml,50,1,Permute,NoSlowdown,"Permute.permute",71.4,"Permute.swap",28.5,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Run.printResult",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Permute_Slowdown.xml,50,1,Permute,Slowdown,"Permute.permute",67.6,"Permute.swap",31.6,"Run.measure",0.4,"Permute.verifyResult",0.2,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.doRuns",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Queens_NoSlowdown.xml,50,1,Queens,NoSlowdown,"Queens.getRowColumn",55.8,"Queens.placeQueen",30.3,"Queens.setRowColumn",10.8,"Queens.queens",2.1,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Queens_Slowdown.xml,50,1,Queens,Slowdown,"Queens.getRowColumn",61.0,"Queens.placeQueen",25.3,"Queens.setRowColumn",11.8,"Queens.queens",1.3,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.1,"java.util.Arrays.fill",0.1,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Richards_NoSlowdown.xml,50,1,Richards,NoSlowdown,"richards.Scheduler.schedule",23.6,"richards.TaskControlBlock.runTask",17.9,"richards.Scheduler$HandlerProcessFunction.apply",9.2,"richards.TaskState.isTaskHoldingOrWaiting",7.5,"richards.Scheduler$DeviceProcessFunction.apply",5.1,"richards.TaskControlBlock.addInputAndCheckPriority",4.0,"richards.Scheduler$IdleProcessFunction.apply",2.7,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.3,"richards.RBObject.append",2.1,"richards.Packet.setLink",2.1,"richards.TaskControlBlock.getLink",1.9,"richards.DeviceTaskDataRecord.setPending",1.9,"richards.IdleTaskDataRecord.setControl",1.8,"richards.TaskControlBlock.getIdentity",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.3,"richards.Scheduler.queuePacket",1.3,"richards.TaskState.setTaskHolding",1.3,"richards.Packet.getIdentity",0.9
50_1_Richards_Slowdown.xml,50,1,Richards,Slowdown,"richards.Scheduler.schedule",26.9,"richards.TaskControlBlock.runTask",19.5,"richards.Scheduler$HandlerProcessFunction.apply",8.7,"richards.TaskState.isTaskHoldingOrWaiting",7.1,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.Packet.setLink",4.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler.findTask",2.7,"richards.TaskControlBlock.getIdentity",2.3,"richards.TaskState.isWaitingWithPacket",2.0,"richards.Scheduler$IdleProcessFunction.apply",1.6,"richards.DeviceTaskDataRecord.setPending",1.5,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.IdleTaskDataRecord.setControl",1.2,"richards.Scheduler$WorkerProcessFunction.apply",1.2,"richards.TaskControlBlock.getLink",1.0,"richards.RBObject.append",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.TaskState.setTaskHolding",0.8,"richards.Packet.getDatum",0.8
50_1_Sieve_NoSlowdown.xml,50,1,Sieve,NoSlowdown,"Sieve.sieve",88.5,"java.util.Arrays.fill",10.4,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Sieve.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Sieve_Slowdown.xml,50,1,Sieve,Slowdown,"Sieve.sieve",90.3,"java.util.Arrays.fill",8.8,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Storage_NoSlowdown.xml,50,1,Storage,NoSlowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",34.9,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",2.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Storage_Slowdown.xml,50,1,Storage,Slowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",34.2,"som.Random.next",3.5,"Storage.lambda$buildTreeDepth$0",1.2,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Towers_NoSlowdown.xml,50,1,Towers,NoSlowdown,"Towers.popDiskFrom",32.4,"Towers.moveDisks",20.3,"Towers.pushDisk",18.5,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",7.3,"Towers$TowersDisk.getSize",3.9,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"Run.lambda$getSuiteFromName$13",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_1_Towers_Slowdown.xml,50,1,Towers,Slowdown,"Towers.popDiskFrom",33.2,"Towers.pushDisk",20.4,"Towers.moveDisks",18.7,"Towers$TowersDisk.setNext",18.0,"Towers.moveTopDisk",8.0,"Towers$TowersDisk.getSize",1.6,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Towers.benchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Bounce_NoSlowdown.xml,50,2,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.6,"Bounce.benchmark",26.5,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.4,"java.util.Arrays.setAll",1.0,"Bounce.lambda$benchmark$0",1.0,"som.Random.next",0.9,"java.io.PrintStream.println",0.1,"java.lang.Integer.valueOf",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Bounce_Slowdown.xml,50,2,Bounce,Slowdown,"Bounce$Ball.bounce",60.6,"Bounce.benchmark",29.9,"Bounce.lambda$benchmark$0",3.2,"java.lang.Math.abs",2.5,"Bounce$Ball.<init>",1.9,"java.util.Arrays.setAll",1.2,"som.Random.next",0.6,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_CD_NoSlowdown.xml,50,2,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.8,"cd.CollisionDetector.isInVoxel",12.6,"cd.RedBlackTree.put",10.0,"cd.CallSign.compareTo",7.1,"cd.RedBlackTree.findNode",6.8,"cd.Vector2D.compareTo",4.0,"cd.CallSign.compareTo",3.6,"cd.Vector2D.compareTo",2.9,"cd.Vector2D.compareNumbers",2.9,"cd.RedBlackTree.treeMinimum",2.8,"cd.RedBlackTree.leftRotate",2.5,"som.Vector.append",2.5,"cd.CollisionDetector.recurse",2.5,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.handleNewFrame",2.3,"som.Vector.<init>",1.9,"cd.RedBlackTree$Node.successor",1.7,"cd.CollisionDetector.voxelHash",1.4,"cd.Simulator.simulate",1.4,"cd.Vector2D.<init>",1.2
50_2_CD_Slowdown.xml,50,2,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.8,"cd.CollisionDetector.isInVoxel",14.0,"cd.RedBlackTree.put",11.4,"cd.RedBlackTree.findNode",8.9,"cd.CallSign.compareTo",7.3,"cd.Vector2D.compareTo",3.7,"cd.CallSign.compareTo",2.9,"cd.Vector2D.compareTo",2.7,"cd.Vector2D.compareNumbers",2.6,"som.Vector.append",2.1,"cd.RedBlackTree.leftRotate",2.1,"cd.CollisionDetector.recurse",1.9,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.<init>",1.7,"cd.RedBlackTree.forEach",1.7,"cd.RedBlackTree.treeMinimum",1.6,"cd.CollisionDetector.handleNewFrame",1.5,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.minus",1.2,"cd.RedBlackTree$Node.<init>",1.1
50_2_DeltaBlue_NoSlowdown.xml,50,2,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.0,"deltablue.Plan.execute",12.2,"som.Vector.forEach",6.9,"deltablue.EqualityConstraint.execute",6.7,"deltablue.ScaleConstraint.execute",4.3,"deltablue.Planner.addPropagate",2.1,"java.util.Vector.add",1.3,"som.Vector.append",1.3,"deltablue.AbstractConstraint.satisfy",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.ScaleConstraint.recalculate",1.0,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
50_2_DeltaBlue_Slowdown.xml,50,2,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",55.7,"deltablue.Plan.execute",10.6,"deltablue.EqualityConstraint.execute",6.0,"som.Vector.forEach",5.8,"deltablue.ScaleConstraint.execute",3.1,"deltablue.Planner.addPropagate",2.1,"som.Vector.append",1.5,"java.util.Vector.add",1.3,"deltablue.AbstractConstraint.satisfy",1.2,"som.Vector.lambda$remove$0",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Variable.setValue",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"som.Vector.<init>",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.BinaryConstraint.getOutput",0.5,"som.Vector.removeFirst",0.5
50_2_Havlak_NoSlowdown.xml,50,2,Havlak,NoSlowdown,"som.Vector.hasSome",31.6,"som.Vector.<init>",18.5,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",6.1,"som.Vector.forEach",4.0,"havlak.UnionFindNode.initNode",3.9,"havlak.HavlakLoopFinder.stepD",2.7,"havlak.HavlakLoopFinder.doDFS",1.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.9,"som.Dictionary.at",1.3,"havlak.LoopStructureGraph$2.apply",1.2,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.2,"som.Vector.at",1.0,"havlak.HavlakLoopFinder$2.apply",0.9,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"havlak.LoopStructureGraph$2.apply",0.7,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder$2.apply",0.7
50_2_Havlak_Slowdown.xml,50,2,Havlak,Slowdown,"som.Vector.hasSome",41.7,"som.Vector.<init>",13.7,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",5.4,"som.Vector.forEach",3.6,"havlak.UnionFindNode.initNode",2.5,"havlak.HavlakLoopFinder.doDFS",2.3,"som.Vector.size",1.4,"havlak.HavlakLoopFinder$2.apply",1.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.HavlakLoopFinder.stepD",1.3,"som.Dictionary.at",1.2,"havlak.HavlakLoopFinder.identifyEdges",1.0,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.UnionFindNode.findSet",0.9,"som.Vector.at",0.9,"java.lang.Integer.valueOf",0.7,"som.Set.<init>",0.7,"havlak.LoopStructureGraph$2.apply",0.7,"som.Dictionary.getBucketIdx",0.7
50_2_Json_NoSlowdown.xml,50,2,Json,NoSlowdown,"java.lang.String.equals",36.7,"java.lang.Character.toString",17.7,"json.JsonPureStringParser.read",7.6,"java.lang.StringBuilder.toString",4.2,"java.lang.StringBuilder.append",3.3,"json.JsonPureStringParser.readStringInternal",3.0,"som.Vector.append",2.4,"java.lang.String.hashCode",2.3,"json.JsonPureStringParser.subStringFromTo",2.3,"java.lang.String.charAt",2.1,"som.Vector.<init>",2.0,"java.lang.StringBuilder.<init>",1.8,"json.JsonPureStringParser.readArray",1.8,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.endCapture",1.5,"json.JsonPureStringParser.readValue",1.4,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.isDigit",0.9,"json.JsonPureStringParser.readChar",0.8
50_2_Json_Slowdown.xml,50,2,Json,Slowdown,"java.lang.String.equals",35.8,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",6.4,"java.lang.String.charAt",3.8,"java.lang.StringBuilder.toString",3.3,"java.lang.StringBuilder.append",3.1,"json.JsonPureStringParser.readStringInternal",2.8,"json.JsonPureStringParser.subStringFromTo",2.7,"java.lang.String.hashCode",2.3,"som.Vector.<init>",2.3,"java.lang.StringBuilder.<init>",2.2,"som.Vector.append",2.1,"json.JsonPureStringParser.readValue",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.isWhiteSpace",1.3,"java.lang.String.length",1.2,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.isDigit",1.1,"json.JsonPureStringParser.readChar",1.1
50_2_List_NoSlowdown.xml,50,2,List,NoSlowdown,"List$Element.getNext",46.5,"List.isShorterThan",43.6,"List.tail",9.1,"List.makeList",0.4,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"Run.printResult",0.1,"List.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_List_Slowdown.xml,50,2,List,Slowdown,"List.isShorterThan",59.4,"List$Element.getNext",32.2,"List.tail",7.9,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Mandelbrot_NoSlowdown.xml,50,2,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",100.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Mandelbrot_Slowdown.xml,50,2,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_NBody_NoSlowdown.xml,50,2,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.4,"nbody.Body.setVX",12.4,"nbody.Body.setVY",3.0,"nbody.Body.getVX",2.8,"nbody.Body.getZ",2.4,"nbody.Body.getX",2.3,"nbody.Body.getVY",2.0,"nbody.Body.getVZ",2.0,"nbody.Body.getY",1.9,"java.lang.Math.sqrt",1.4,"nbody.Body.setVZ",1.3,"nbody.Body.setZ",0.8,"nbody.Body.setX",0.8,"NBody.innerBenchmarkLoop",0.3,"Run.printResult",0.1,"nbody.Body.getMass",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
50_2_NBody_Slowdown.xml,50,2,NBody,Slowdown,"nbody.NBodySystem.advance",44.6,"nbody.Body.getZ",10.6,"NBody.innerBenchmarkLoop",9.4,"nbody.Body.getX",9.1,"nbody.Body.getY",9.1,"nbody.Body.setVX",7.6,"nbody.Body.setVY",2.0,"nbody.Body.getVX",2.0,"java.lang.Math.sqrt",1.7,"nbody.Body.getVZ",1.2,"nbody.Body.getVY",1.0,"nbody.Body.setVZ",0.8,"nbody.Body.setZ",0.5,"nbody.Body.setX",0.4,"Run.printResult",0.0,"nbody.Body.setY",0.0,"Run.printTotal",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0,"",0
50_2_Permute_NoSlowdown.xml,50,2,Permute,NoSlowdown,"Permute.permute",70.6,"Permute.swap",29.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Permute_Slowdown.xml,50,2,Permute,Slowdown,"Permute.permute",69.1,"Permute.swap",30.3,"Run.measure",0.5,"Permute.verifyResult",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Queens_NoSlowdown.xml,50,2,Queens,NoSlowdown,"Queens.getRowColumn",55.8,"Queens.placeQueen",30.0,"Queens.setRowColumn",11.5,"Queens.queens",1.7,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Queens_Slowdown.xml,50,2,Queens,Slowdown,"Queens.getRowColumn",59.9,"Queens.placeQueen",26.1,"Queens.setRowColumn",12.2,"Queens.queens",0.9,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.3,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Queens.verifyResult",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.util.Arrays.fill",0.0,"java.lang.Boolean.booleanValue",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Richards_NoSlowdown.xml,50,2,Richards,NoSlowdown,"richards.Scheduler.schedule",23.5,"richards.TaskControlBlock.runTask",17.7,"richards.Scheduler$HandlerProcessFunction.apply",11.0,"richards.TaskState.isTaskHoldingOrWaiting",7.6,"richards.Scheduler$DeviceProcessFunction.apply",5.7,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler$IdleProcessFunction.apply",2.8,"richards.Scheduler.findTask",2.4,"richards.TaskState.isWaitingWithPacket",2.3,"richards.TaskControlBlock.getIdentity",1.9,"richards.Packet.setLink",1.8,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.IdleTaskDataRecord.setControl",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.7,"richards.Scheduler.queuePacket",1.5,"richards.RBObject.append",1.5,"richards.TaskControlBlock.getLink",1.4,"richards.TaskState.setTaskHolding",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",0.8
50_2_Richards_Slowdown.xml,50,2,Richards,Slowdown,"richards.Scheduler.schedule",26.5,"richards.TaskControlBlock.runTask",21.3,"richards.Scheduler$HandlerProcessFunction.apply",8.3,"richards.TaskState.isTaskHoldingOrWaiting",6.8,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.Packet.setLink",4.0,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler.findTask",2.9,"richards.TaskControlBlock.getIdentity",2.1,"richards.Scheduler$IdleProcessFunction.apply",2.0,"richards.TaskState.isWaitingWithPacket",1.8,"richards.IdleTaskDataRecord.setControl",1.3,"richards.DeviceTaskDataRecord.setPending",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Scheduler$WorkerProcessFunction.apply",1.0,"richards.RBObject.append",0.9,"richards.Scheduler.queuePacket",0.9,"richards.TaskControlBlock.getLink",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.HandlerTaskDataRecord.workInAdd",0.7
50_2_Sieve_NoSlowdown.xml,50,2,Sieve,NoSlowdown,"Sieve.sieve",89.4,"java.util.Arrays.fill",9.2,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.1,"Sieve.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Sieve_Slowdown.xml,50,2,Sieve,Slowdown,"Sieve.sieve",90.0,"java.util.Arrays.fill",9.0,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Storage_NoSlowdown.xml,50,2,Storage,NoSlowdown,"Storage.buildTreeDepth",60.4,"som.Arrays.setAll",35.4,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Storage.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Storage_Slowdown.xml,50,2,Storage,Slowdown,"Storage.buildTreeDepth",59.4,"som.Arrays.setAll",35.2,"som.Random.next",4.0,"Storage.lambda$buildTreeDepth$0",1.3,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Towers_NoSlowdown.xml,50,2,Towers,NoSlowdown,"Towers.popDiskFrom",32.9,"Towers.moveDisks",20.8,"Towers.pushDisk",18.7,"Towers$TowersDisk.setNext",17.3,"Towers.moveTopDisk",6.9,"Towers$TowersDisk.getSize",3.2,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_2_Towers_Slowdown.xml,50,2,Towers,Slowdown,"Towers.popDiskFrom",32.7,"Towers.pushDisk",20.7,"Towers$TowersDisk.setNext",18.3,"Towers.moveDisks",18.1,"Towers.moveTopDisk",8.1,"Towers$TowersDisk.getSize",1.9,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0
50_3_Bounce_NoSlowdown.xml,50,3,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.6,"Bounce.benchmark",25.9,"java.lang.Math.abs",4.1,"Bounce$Ball.<init>",3.2,"Bounce.lambda$benchmark$0",1.0,"java.util.Arrays.setAll",1.0,"som.Random.next",1.0,"java.io.PrintStream.println",0.1,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Bounce_Slowdown.xml,50,3,Bounce,Slowdown,"Bounce$Ball.bounce",59.2,"Bounce.benchmark",31.6,"Bounce.lambda$benchmark$0",2.9,"java.lang.Math.abs",2.7,"Bounce$Ball.<init>",1.9,"java.util.Arrays.setAll",1.0,"som.Random.next",0.5,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_CD_NoSlowdown.xml,50,3,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",17.0,"cd.CollisionDetector.isInVoxel",12.2,"cd.RedBlackTree.put",10.4,"cd.CallSign.compareTo",7.8,"cd.RedBlackTree.findNode",6.6,"cd.Vector2D.compareTo",3.8,"cd.Vector2D.compareTo",3.1,"cd.RedBlackTree.treeMinimum",3.1,"cd.Vector2D.compareNumbers",3.0,"cd.RedBlackTree.forEach",2.9,"cd.CollisionDetector.handleNewFrame",2.7,"cd.CallSign.compareTo",2.6,"cd.CollisionDetector.recurse",2.5,"som.Vector.append",2.2,"som.Vector.<init>",2.0,"cd.RedBlackTree.leftRotate",1.9,"cd.RedBlackTree$Node.successor",1.7,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.minus",1.2,"cd.Vector2D.<init>",1.2
50_3_CD_Slowdown.xml,50,3,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.1,"cd.CollisionDetector.isInVoxel",15.0,"cd.RedBlackTree.put",11.0,"cd.RedBlackTree.findNode",9.1,"cd.CallSign.compareTo",6.8,"cd.Vector2D.compareTo",3.5,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareTo",2.7,"cd.Vector2D.compareNumbers",2.4,"cd.RedBlackTree.leftRotate",2.2,"som.Vector.append",2.1,"cd.CollisionDetector.recurse",2.0,"cd.RedBlackTree.treeMinimum",1.9,"cd.RedBlackTree$Node.successor",1.8,"cd.RedBlackTree.forEach",1.6,"cd.CollisionDetector.handleNewFrame",1.6,"som.Vector.<init>",1.5,"cd.CollisionDetector.voxelHash",1.3,"cd.Vector2D.minus",1.1,"cd.RedBlackTree$Node.<init>",1.1
50_3_DeltaBlue_NoSlowdown.xml,50,3,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.2,"deltablue.Plan.execute",12.6,"som.Vector.forEach",6.8,"deltablue.EqualityConstraint.execute",6.2,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",2.0,"deltablue.AbstractConstraint.satisfy",1.4,"som.Vector.append",1.3,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.2,"java.util.Vector.add",1.2,"deltablue.Planner.makePlan",0.9,"deltablue.Planner.projectionTest",0.7,"som.Vector.<init>",0.7,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.4,"deltablue.Variable.setWalkStrength",0.4
50_3_DeltaBlue_Slowdown.xml,50,3,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",55.4,"deltablue.Plan.execute",11.4,"som.Vector.forEach",5.8,"deltablue.EqualityConstraint.execute",5.5,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.9,"som.Vector.append",1.4,"java.util.Vector.add",1.3,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.Variable.setValue",0.8,"som.Vector.lambda$remove$0",0.8,"som.Vector.<init>",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.removePropagateFrom",0.6,"som.Vector.removeFirst",0.6,"deltablue.BinaryConstraint.getOutput",0.5
50_3_Havlak_NoSlowdown.xml,50,3,Havlak,NoSlowdown,"som.Vector.hasSome",31.7,"som.Vector.<init>",18.9,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",5.7,"havlak.UnionFindNode.initNode",4.1,"som.Vector.forEach",3.7,"havlak.HavlakLoopFinder.stepD",2.5,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.0,"som.Dictionary.at",1.5,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.2,"havlak.LoopStructureGraph$2.apply",1.2,"havlak.HavlakLoopFinder$2.apply",1.1,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder.isAncestor",0.8,"som.Vector.at",0.8,"havlak.LoopStructureGraph$2.apply",0.8,"havlak.HavlakLoopFinder$1.apply",0.8,"som.Dictionary.transferEntries",0.7
50_3_Havlak_Slowdown.xml,50,3,Havlak,Slowdown,"som.Vector.hasSome",41.8,"som.Vector.<init>",13.9,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",5.6,"som.Vector.forEach",3.4,"havlak.HavlakLoopFinder.doDFS",2.5,"havlak.UnionFindNode.initNode",2.5,"havlak.HavlakLoopFinder$2.apply",1.5,"som.Vector.size",1.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.3,"havlak.HavlakLoopFinder.stepD",1.2,"som.Dictionary.at",1.0,"havlak.UnionFindNode.findSet",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.HavlakLoopFinder$2.apply",0.8,"som.Vector.at",0.8,"som.Dictionary.getBucket",0.8,"java.lang.Integer.valueOf",0.7,"havlak.LoopStructureGraph$2.apply",0.7,"som.Set.<init>",0.7
50_3_Json_NoSlowdown.xml,50,3,Json,NoSlowdown,"java.lang.String.equals",35.1,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",7.8,"java.lang.StringBuilder.toString",3.8,"java.lang.StringBuilder.append",3.7,"json.JsonPureStringParser.subStringFromTo",2.8,"java.lang.String.charAt",2.6,"java.lang.String.hashCode",2.4,"som.Vector.append",2.4,"json.JsonPureStringParser.readStringInternal",2.4,"som.Vector.<init>",2.3,"json.JsonPureStringParser.endCapture",1.9,"json.JsonPureStringParser.isWhiteSpace",1.8,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readDigit",1.3,"json.JsonPureStringParser.readChar",1.1,"json.JsonPureStringParser.readArray",1.0,"json.JsonPureStringParser.isDigit",1.0
50_3_Json_Slowdown.xml,50,3,Json,Slowdown,"java.lang.String.equals",36.4,"java.lang.Character.toString",18.4,"json.JsonPureStringParser.read",6.9,"java.lang.String.charAt",3.8,"java.lang.StringBuilder.append",3.5,"java.lang.StringBuilder.toString",3.4,"json.JsonPureStringParser.subStringFromTo",2.9,"json.JsonPureStringParser.readStringInternal",2.6,"som.Vector.<init>",2.3,"java.lang.StringBuilder.<init>",2.0,"som.Vector.append",2.0,"java.lang.String.hashCode",2.0,"json.JsonPureStringParser.isWhiteSpace",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readValue",1.2,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.readChar",1.1,"json.JsonPureStringParser.isDigit",1.0,"java.lang.String.length",1.0
50_3_List_NoSlowdown.xml,50,3,List,NoSlowdown,"List$Element.getNext",45.8,"List.isShorterThan",43.7,"List.tail",9.7,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_List_Slowdown.xml,50,3,List,Slowdown,"List.isShorterThan",59.3,"List$Element.getNext",31.9,"List.tail",8.3,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Mandelbrot_NoSlowdown.xml,50,3,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.8,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Mandelbrot_Slowdown.xml,50,3,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.measure",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_NBody_NoSlowdown.xml,50,3,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.7,"nbody.Body.setVX",12.3,"nbody.Body.setVY",3.2,"nbody.Body.getZ",3.1,"nbody.Body.getVX",2.8,"nbody.Body.getX",2.7,"nbody.Body.getY",2.0,"nbody.Body.getVY",1.9,"nbody.Body.getVZ",1.9,"nbody.Body.setVZ",1.3,"java.lang.Math.sqrt",1.3,"nbody.Body.setX",0.6,"NBody.innerBenchmarkLoop",0.6,"nbody.Body.setZ",0.5,"nbody.Body.getMass",0.1,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"",0,"",0
50_3_NBody_Slowdown.xml,50,3,NBody,Slowdown,"nbody.NBodySystem.advance",45.4,"nbody.Body.getZ",10.5,"nbody.Body.getY",9.5,"nbody.Body.getX",9.2,"NBody.innerBenchmarkLoop",8.5,"nbody.Body.setVX",7.1,"nbody.Body.getVX",2.1,"nbody.Body.setVY",2.0,"java.lang.Math.sqrt",1.8,"nbody.Body.getVZ",1.2,"nbody.Body.getVY",1.1,"nbody.Body.setVZ",0.8,"nbody.Body.setZ",0.5,"nbody.Body.setX",0.3,"nbody.Body.getMass",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0
50_3_Permute_NoSlowdown.xml,50,3,Permute,NoSlowdown,"Permute.permute",70.4,"Permute.swap",29.4,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Permute_Slowdown.xml,50,3,Permute,Slowdown,"Permute.permute",67.4,"Permute.swap",31.9,"Run.measure",0.5,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.1,"Permute.verifyResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Queens_NoSlowdown.xml,50,3,Queens,NoSlowdown,"Queens.getRowColumn",55.0,"Queens.placeQueen",31.3,"Queens.setRowColumn",11.0,"Queens.queens",1.8,"java.util.Arrays.fill",0.6,"Queens.benchmark",0.1,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Queens_Slowdown.xml,50,3,Queens,Slowdown,"Queens.getRowColumn",60.0,"Queens.placeQueen",24.5,"Queens.setRowColumn",13.5,"Queens.queens",1.2,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.1,"Run.runBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Richards_NoSlowdown.xml,50,3,Richards,NoSlowdown,"richards.Scheduler.schedule",25.3,"richards.TaskControlBlock.runTask",18.4,"richards.Scheduler$HandlerProcessFunction.apply",8.8,"richards.TaskState.isTaskHoldingOrWaiting",7.8,"richards.Scheduler$DeviceProcessFunction.apply",5.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",2.8,"richards.Scheduler.findTask",2.6,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Scheduler$WorkerProcessFunction.apply",1.9,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.Packet.setLink",1.8,"richards.TaskControlBlock.getLink",1.8,"richards.IdleTaskDataRecord.setControl",1.6,"richards.RBObject.append",1.5,"richards.TaskControlBlock.getIdentity",1.5,"richards.TaskState.setTaskHolding",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.Scheduler.queuePacket",0.9,"richards.Scheduler.holdSelf",0.8
50_3_Richards_Slowdown.xml,50,3,Richards,Slowdown,"richards.Scheduler.schedule",27.1,"richards.TaskControlBlock.runTask",20.0,"richards.Scheduler$HandlerProcessFunction.apply",8.2,"richards.TaskState.isTaskHoldingOrWaiting",6.4,"richards.Scheduler$DeviceProcessFunction.apply",6.0,"richards.TaskControlBlock.addInputAndCheckPriority",4.6,"richards.Packet.setLink",4.2,"richards.Scheduler.findTask",2.8,"richards.Scheduler$IdleProcessFunction.apply",2.2,"richards.TaskControlBlock.getIdentity",1.9,"richards.TaskState.isWaitingWithPacket",1.9,"richards.DeviceTaskDataRecord.setPending",1.2,"richards.IdleTaskDataRecord.setControl",1.0,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Scheduler$WorkerProcessFunction.apply",1.0,"richards.Packet.getDatum",1.0,"richards.RBObject.append",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.Scheduler.queuePacket",0.8,"richards.TaskControlBlock.getLink",0.7
50_3_Sieve_NoSlowdown.xml,50,3,Sieve,NoSlowdown,"Sieve.sieve",88.9,"java.util.Arrays.fill",9.9,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Sieve_Slowdown.xml,50,3,Sieve,Slowdown,"Sieve.sieve",90.5,"java.util.Arrays.fill",8.5,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Storage_NoSlowdown.xml,50,3,Storage,NoSlowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",35.1,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.8,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Storage_Slowdown.xml,50,3,Storage,Slowdown,"Storage.buildTreeDepth",61.2,"som.Arrays.setAll",34.0,"som.Random.next",3.6,"Storage.lambda$buildTreeDepth$0",1.2,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Towers_NoSlowdown.xml,50,3,Towers,NoSlowdown,"Towers.popDiskFrom",30.5,"Towers.moveDisks",20.9,"Towers$TowersDisk.setNext",18.9,"Towers.pushDisk",18.4,"Towers.moveTopDisk",7.6,"Towers$TowersDisk.getSize",3.5,"Towers.benchmark",0.1,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_3_Towers_Slowdown.xml,50,3,Towers,Slowdown,"Towers.popDiskFrom",32.7,"Towers.pushDisk",20.1,"Towers.moveDisks",18.9,"Towers$TowersDisk.setNext",18.1,"Towers.moveTopDisk",8.1,"Towers$TowersDisk.getSize",1.9,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Bounce_NoSlowdown.xml,50,4,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.7,"Bounce.benchmark",25.2,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.5,"java.util.Arrays.setAll",1.3,"Bounce.lambda$benchmark$0",1.1,"som.Random.next",0.8,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Bounce.verifyResult",0.0,"Run.doRuns",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0
50_4_Bounce_Slowdown.xml,50,4,Bounce,Slowdown,"Bounce$Ball.bounce",59.8,"Bounce.benchmark",31.3,"java.lang.Math.abs",2.8,"Bounce.lambda$benchmark$0",2.6,"Bounce$Ball.<init>",2.0,"java.util.Arrays.setAll",1.0,"som.Random.next",0.4,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_CD_NoSlowdown.xml,50,4,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.6,"cd.CollisionDetector.isInVoxel",12.8,"cd.RedBlackTree.put",10.8,"cd.CallSign.compareTo",7.1,"cd.RedBlackTree.findNode",6.8,"cd.Vector2D.compareTo",4.0,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareNumbers",3.3,"cd.Vector2D.compareTo",3.1,"cd.RedBlackTree.treeMinimum",2.7,"cd.RedBlackTree.leftRotate",2.5,"som.Vector.append",2.4,"cd.RedBlackTree.forEach",2.4,"cd.CollisionDetector.handleNewFrame",2.3,"cd.CollisionDetector.recurse",2.3,"cd.RedBlackTree$Node.successor",1.9,"som.Vector.<init>",1.9,"cd.Vector2D.plus",1.5,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.<init>",1.2
50_4_CD_Slowdown.xml,50,4,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.4,"cd.CollisionDetector.isInVoxel",13.9,"cd.RedBlackTree.put",10.9,"cd.RedBlackTree.findNode",9.1,"cd.CallSign.compareTo",7.4,"cd.Vector2D.compareTo",3.7,"cd.CallSign.compareTo",3.1,"cd.Vector2D.compareNumbers",2.6,"cd.Vector2D.compareTo",2.6,"cd.RedBlackTree.leftRotate",2.5,"som.Vector.append",2.2,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree.treeMinimum",2.0,"cd.RedBlackTree$Node.successor",2.0,"cd.RedBlackTree.forEach",1.8,"cd.CollisionDetector.handleNewFrame",1.6,"som.Vector.<init>",1.5,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.minus",1.2,"cd.Vector2D.plus",1.2
50_4_DeltaBlue_NoSlowdown.xml,50,4,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",52.7,"deltablue.Plan.execute",12.2,"som.Vector.forEach",6.5,"deltablue.EqualityConstraint.execute",5.7,"deltablue.ScaleConstraint.execute",4.0,"deltablue.Planner.addPropagate",2.1,"som.Vector.append",1.4,"deltablue.AbstractConstraint.satisfy",1.3,"java.util.Vector.add",1.2,"deltablue.ScaleConstraint.recalculate",1.1,"som.Vector.lambda$remove$0",0.9,"deltablue.Planner.makePlan",0.8,"som.Vector.<init>",0.7,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.projectionTest",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4
50_4_DeltaBlue_Slowdown.xml,50,4,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",49.8,"deltablue.Plan.execute",14.1,"deltablue.EqualityConstraint.execute",6.9,"som.Vector.forEach",6.6,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",1.8,"java.util.Vector.add",1.3,"som.Vector.append",1.2,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.lambda$remove$0",1.0,"deltablue.Variable.getStay",0.8,"som.Vector.<init>",0.7,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Variable.setValue",0.6,"deltablue.AbstractConstraint.inputsKnown",0.5,"som.Vector.removeFirst",0.5
50_4_Havlak_NoSlowdown.xml,50,4,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",19.0,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",6.1,"som.Vector.forEach",4.0,"havlak.UnionFindNode.initNode",3.9,"havlak.HavlakLoopFinder.stepD",2.6,"havlak.HavlakLoopFinder.doDFS",2.3,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.9,"som.Dictionary.at",1.4,"som.Vector.size",1.3,"havlak.UnionFindNode.findSet",1.2,"havlak.HavlakLoopFinder$2.apply",0.9,"havlak.LoopStructureGraph$2.apply",0.9,"som.Set.<init>",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"havlak.HavlakLoopFinder.isAncestor",0.8,"som.Vector.at",0.8,"som.Dictionary.transferEntries",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.7
50_4_Havlak_Slowdown.xml,50,4,Havlak,Slowdown,"som.Vector.hasSome",39.2,"som.Vector.<init>",14.9,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",5.3,"som.Vector.forEach",3.5,"havlak.UnionFindNode.initNode",3.1,"havlak.HavlakLoopFinder.doDFS",2.4,"havlak.HavlakLoopFinder.stepD",2.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.6,"havlak.HavlakLoopFinder$2.apply",1.5,"som.Vector.size",1.3,"som.Dictionary.at",1.1,"havlak.HavlakLoopFinder.identifyEdges",1.0,"havlak.UnionFindNode.findSet",1.0,"havlak.LoopStructureGraph$2.apply",0.8,"som.Set.<init>",0.8,"java.lang.Integer.valueOf",0.7,"som.Vector.at",0.7,"som.Dictionary.getBucket",0.7,"havlak.HavlakLoopFinder$2.apply",0.7
50_4_Json_NoSlowdown.xml,50,4,Json,NoSlowdown,"java.lang.String.equals",36.0,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",8.3,"java.lang.StringBuilder.toString",4.0,"java.lang.StringBuilder.append",3.1,"java.lang.String.charAt",3.1,"json.JsonPureStringParser.readStringInternal",2.7,"som.Vector.append",2.6,"java.lang.String.hashCode",2.3,"json.JsonPureStringParser.subStringFromTo",2.2,"som.Vector.<init>",2.0,"json.JsonPureStringParser.isWhiteSpace",1.8,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readValue",1.3,"json.JsonPureStringParser.endCapture",1.2,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.readChar",0.9,"json.JsonPureStringParser.isDigit",0.6
50_4_Json_Slowdown.xml,50,4,Json,Slowdown,"java.lang.String.equals",37.5,"java.lang.Character.toString",19.8,"json.JsonPureStringParser.read",6.7,"java.lang.String.charAt",3.4,"java.lang.StringBuilder.append",3.4,"java.lang.StringBuilder.toString",2.8,"json.JsonPureStringParser.subStringFromTo",2.6,"json.JsonPureStringParser.readStringInternal",2.3,"som.Vector.<init>",2.2,"java.lang.String.hashCode",2.1,"som.Vector.append",2.0,"java.lang.StringBuilder.<init>",2.0,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readArray",1.4,"json.JsonPureStringParser.endCapture",1.1,"json.JsonPureStringParser.readChar",1.1,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.readDigit",1.1,"json.JsonPureStringParser.isDigit",1.1
50_4_List_NoSlowdown.xml,50,4,List,NoSlowdown,"List$Element.getNext",44.8,"List.isShorterThan",44.4,"List.tail",10.0,"List.makeList",0.4,"java.lang.Integer.valueOf",0.2,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_List_Slowdown.xml,50,4,List,Slowdown,"List.isShorterThan",59.5,"List$Element.getNext",31.9,"List.tail",8.3,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"Run.printResult",0.0,"List$Element.length",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Mandelbrot_NoSlowdown.xml,50,4,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.1,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Mandelbrot_Slowdown.xml,50,4,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_NBody_NoSlowdown.xml,50,4,NBody,NoSlowdown,"nbody.NBodySystem.advance",67.5,"nbody.Body.setVX",12.0,"nbody.Body.setVY",2.8,"nbody.Body.getVX",2.5,"nbody.Body.getX",2.4,"nbody.Body.getZ",2.4,"nbody.Body.getY",2.3,"nbody.Body.getVY",1.8,"nbody.Body.getVZ",1.8,"java.lang.Math.sqrt",1.5,"nbody.Body.setVZ",1.2,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.5,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"",0,"",0,"",0
50_4_NBody_Slowdown.xml,50,4,NBody,Slowdown,"nbody.NBodySystem.advance",45.2,"nbody.Body.getZ",10.4,"nbody.Body.getX",9.2,"nbody.Body.getY",9.2,"NBody.innerBenchmarkLoop",8.6,"nbody.Body.setVX",7.5,"java.lang.Math.sqrt",2.2,"nbody.Body.setVY",2.0,"nbody.Body.getVX",1.7,"nbody.Body.getVZ",1.3,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.8,"nbody.Body.setZ",0.6,"nbody.Body.setX",0.5,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.measure",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0,"",0
50_4_Permute_NoSlowdown.xml,50,4,Permute,NoSlowdown,"Permute.permute",69.8,"Permute.swap",30.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Permute_Slowdown.xml,50,4,Permute,Slowdown,"Permute.permute",67.7,"Permute.swap",31.4,"Run.measure",0.5,"Permute.verifyResult",0.2,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Queens_NoSlowdown.xml,50,4,Queens,NoSlowdown,"Queens.getRowColumn",52.7,"Queens.placeQueen",34.1,"Queens.setRowColumn",10.5,"Queens.queens",1.6,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.3,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.Boolean.booleanValue",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Queens_Slowdown.xml,50,4,Queens,Slowdown,"Queens.getRowColumn",60.6,"Queens.placeQueen",24.8,"Queens.setRowColumn",12.7,"Queens.queens",1.2,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Richards_NoSlowdown.xml,50,4,Richards,NoSlowdown,"richards.Scheduler.schedule",24.5,"richards.TaskControlBlock.runTask",18.1,"richards.Scheduler$HandlerProcessFunction.apply",9.9,"richards.TaskState.isTaskHoldingOrWaiting",7.7,"richards.Scheduler$DeviceProcessFunction.apply",4.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler$IdleProcessFunction.apply",3.1,"richards.Packet.setLink",2.0,"richards.RBObject.append",1.9,"richards.TaskState.isWaitingWithPacket",1.9,"richards.Scheduler.findTask",1.8,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.IdleTaskDataRecord.setControl",1.7,"richards.TaskControlBlock.getLink",1.7,"richards.TaskControlBlock.getIdentity",1.5,"richards.Scheduler.queuePacket",1.3,"richards.Scheduler$WorkerProcessFunction.apply",1.2,"richards.TaskState.setTaskHolding",1.2,"richards.HandlerTaskDataRecord.deviceIn",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.9
50_4_Richards_Slowdown.xml,50,4,Richards,Slowdown,"richards.Scheduler.schedule",27.0,"richards.TaskControlBlock.runTask",19.3,"richards.Scheduler$HandlerProcessFunction.apply",9.0,"richards.TaskState.isTaskHoldingOrWaiting",6.3,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.Packet.setLink",4.5,"richards.TaskControlBlock.addInputAndCheckPriority",3.9,"richards.Scheduler.findTask",2.7,"richards.Scheduler$IdleProcessFunction.apply",2.0,"richards.TaskState.isWaitingWithPacket",2.0,"richards.TaskControlBlock.getIdentity",1.6,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.4,"richards.IdleTaskDataRecord.setControl",1.2,"richards.Scheduler$WorkerProcessFunction.apply",1.1,"richards.TaskState.setTaskHolding",1.0,"richards.TaskControlBlock.getLink",1.0,"richards.Scheduler.queuePacket",0.9,"richards.HandlerTaskDataRecord.deviceInAdd",0.9,"richards.Packet.getDatum",0.8
50_4_Sieve_NoSlowdown.xml,50,4,Sieve,NoSlowdown,"Sieve.sieve",88.8,"java.util.Arrays.fill",9.8,"Sieve.benchmark",1.3,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Sieve_Slowdown.xml,50,4,Sieve,Slowdown,"Sieve.sieve",90.4,"java.util.Arrays.fill",8.6,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Storage_NoSlowdown.xml,50,4,Storage,NoSlowdown,"Storage.buildTreeDepth",59.9,"som.Arrays.setAll",36.1,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Storage.benchmark",0.0,"Storage.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Storage_Slowdown.xml,50,4,Storage,Slowdown,"Storage.buildTreeDepth",61.2,"som.Arrays.setAll",33.8,"som.Random.next",3.7,"Storage.lambda$buildTreeDepth$0",1.2,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Towers_NoSlowdown.xml,50,4,Towers,NoSlowdown,"Towers.popDiskFrom",32.4,"Towers.moveDisks",19.7,"Towers.pushDisk",18.7,"Towers$TowersDisk.setNext",17.9,"Towers.moveTopDisk",7.6,"Towers$TowersDisk.getSize",3.5,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_4_Towers_Slowdown.xml,50,4,Towers,Slowdown,"Towers.popDiskFrom",32.7,"Towers.pushDisk",20.9,"Towers.moveDisks",18.1,"Towers$TowersDisk.setNext",17.7,"Towers.moveTopDisk",8.6,"Towers$TowersDisk.getSize",1.8,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"Towers.buildTowerAt",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Bounce_NoSlowdown.xml,50,5,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.5,"Bounce.benchmark",26.0,"java.lang.Math.abs",4.3,"Bounce$Ball.<init>",3.5,"java.util.Arrays.setAll",1.3,"Bounce.lambda$benchmark$0",1.2,"som.Random.next",1.0,"Run.printResult",0.1,"Bounce.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Bounce_Slowdown.xml,50,5,Bounce,Slowdown,"Bounce$Ball.bounce",60.8,"Bounce.benchmark",30.1,"Bounce.lambda$benchmark$0",3.0,"java.lang.Math.abs",2.9,"Bounce$Ball.<init>",1.7,"java.util.Arrays.setAll",1.0,"som.Random.next",0.5,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_CD_NoSlowdown.xml,50,5,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.1,"cd.CollisionDetector.isInVoxel",12.3,"cd.RedBlackTree.put",9.6,"cd.CallSign.compareTo",7.6,"cd.RedBlackTree.findNode",7.1,"cd.Vector2D.compareTo",3.7,"cd.CallSign.compareTo",3.3,"cd.Vector2D.compareNumbers",3.0,"cd.RedBlackTree.treeMinimum",2.9,"cd.Vector2D.compareTo",2.9,"cd.CollisionDetector.handleNewFrame",2.8,"cd.CollisionDetector.recurse",2.6,"cd.RedBlackTree.forEach",2.4,"som.Vector.append",2.3,"cd.RedBlackTree$Node.successor",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",1.9,"cd.CollisionDetector.voxelHash",1.5,"cd.Vector2D.plus",1.4,"cd.Vector2D.minus",1.4
50_5_CD_Slowdown.xml,50,5,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.8,"cd.CollisionDetector.isInVoxel",14.2,"cd.RedBlackTree.put",10.8,"cd.RedBlackTree.findNode",9.2,"cd.CallSign.compareTo",6.8,"cd.Vector2D.compareTo",3.3,"cd.CallSign.compareTo",2.9,"cd.Vector2D.compareNumbers",2.6,"cd.Vector2D.compareTo",2.4,"cd.RedBlackTree.leftRotate",2.2,"cd.RedBlackTree.treeMinimum",2.1,"som.Vector.append",2.1,"cd.CollisionDetector.recurse",2.0,"cd.CollisionDetector.handleNewFrame",1.9,"cd.RedBlackTree.forEach",1.9,"som.Vector.<init>",1.7,"cd.RedBlackTree$Node.successor",1.5,"cd.CollisionDetector.voxelHash",1.3,"cd.Vector2D.plus",1.3,"cd.Simulator.simulate",1.1
50_5_DeltaBlue_NoSlowdown.xml,50,5,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",52.3,"deltablue.Plan.execute",12.1,"som.Vector.forEach",6.8,"deltablue.EqualityConstraint.execute",6.0,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.1,"java.util.Vector.add",1.3,"som.Vector.append",1.3,"deltablue.AbstractConstraint.satisfy",1.2,"deltablue.ScaleConstraint.recalculate",1.2,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.9,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.removePropagateFrom",0.6,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.Variable.setWalkStrength",0.4
50_5_DeltaBlue_Slowdown.xml,50,5,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",54.7,"deltablue.Plan.execute",11.7,"som.Vector.forEach",6.3,"deltablue.EqualityConstraint.execute",6.0,"deltablue.ScaleConstraint.execute",2.9,"deltablue.Planner.addPropagate",1.8,"java.util.Vector.add",1.3,"som.Vector.append",1.1,"deltablue.AbstractConstraint.satisfy",1.0,"som.Vector.lambda$remove$0",0.8,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Variable.setValue",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Variable.getStay",0.6,"deltablue.Planner.removePropagateFrom",0.5
50_5_Havlak_NoSlowdown.xml,50,5,Havlak,NoSlowdown,"som.Vector.hasSome",31.8,"som.Vector.<init>",18.7,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",5.9,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",4.1,"havlak.HavlakLoopFinder.stepD",2.3,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.9,"som.Dictionary.at",1.5,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.1,"havlak.LoopStructureGraph$2.apply",1.0,"som.Vector.at",1.0,"havlak.HavlakLoopFinder$2.apply",0.9,"som.Dictionary.transferEntries",0.9,"havlak.HavlakLoopFinder$2.apply",0.8,"havlak.LoopStructureGraph$2.apply",0.8,"havlak.HavlakLoopFinder.isAncestor",0.7,"havlak.HavlakLoopFinder.identifyEdges",0.7
50_5_Havlak_Slowdown.xml,50,5,Havlak,Slowdown,"som.Vector.hasSome",38.9,"som.Vector.<init>",15.3,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",5.3,"som.Vector.forEach",3.5,"havlak.UnionFindNode.initNode",3.2,"havlak.HavlakLoopFinder.doDFS",2.3,"havlak.HavlakLoopFinder.stepD",2.1,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.5,"som.Vector.size",1.4,"havlak.HavlakLoopFinder$2.apply",1.4,"havlak.HavlakLoopFinder.identifyEdges",1.0,"som.Dictionary.at",1.0,"havlak.UnionFindNode.findSet",0.9,"havlak.LoopStructureGraph$2.apply",0.9,"som.Vector.at",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"som.Set.<init>",0.7,"havlak.HavlakLoopFinder$1.apply",0.6
50_5_Json_NoSlowdown.xml,50,5,Json,NoSlowdown,"java.lang.String.equals",37.2,"java.lang.Character.toString",19.2,"json.JsonPureStringParser.read",7.9,"java.lang.StringBuilder.append",3.8,"java.lang.StringBuilder.toString",3.2,"java.lang.String.charAt",3.1,"json.JsonPureStringParser.readStringInternal",2.7,"som.Vector.append",2.4,"json.JsonPureStringParser.subStringFromTo",2.0,"java.lang.String.hashCode",1.9,"som.Vector.<init>",1.8,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.endCapture",1.4,"json.JsonPureStringParser.readDigit",1.2,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.skipWhiteSpace",0.9,"java.lang.String.length",0.5
50_5_Json_Slowdown.xml,50,5,Json,Slowdown,"java.lang.String.equals",37.4,"java.lang.Character.toString",17.7,"json.JsonPureStringParser.read",6.7,"java.lang.String.charAt",4.3,"java.lang.StringBuilder.toString",3.5,"java.lang.StringBuilder.append",3.0,"json.JsonPureStringParser.subStringFromTo",2.8,"som.Vector.<init>",2.7,"json.JsonPureStringParser.readStringInternal",2.1,"som.Vector.append",2.1,"java.lang.String.hashCode",1.9,"java.lang.StringBuilder.<init>",1.9,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.isWhiteSpace",1.4,"json.JsonPureStringParser.readValue",1.4,"java.lang.String.length",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.isDigit",1.1,"json.JsonPureStringParser.readDigit",1.0,"json.JsonPureStringParser.readChar",0.9
50_5_List_NoSlowdown.xml,50,5,List,NoSlowdown,"List$Element.getNext",45.0,"List.isShorterThan",44.3,"List.tail",9.8,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_List_Slowdown.xml,50,5,List,Slowdown,"List.isShorterThan",59.2,"List$Element.getNext",32.2,"List.tail",8.2,"List.makeList",0.2,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Mandelbrot_NoSlowdown.xml,50,5,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Mandelbrot_Slowdown.xml,50,5,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",100.0,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_NBody_NoSlowdown.xml,50,5,NBody,NoSlowdown,"nbody.NBodySystem.advance",67.1,"nbody.Body.setVX",12.3,"nbody.Body.setVY",3.3,"nbody.Body.getVX",2.6,"nbody.Body.getX",2.4,"nbody.Body.getZ",2.2,"nbody.Body.getY",2.0,"nbody.Body.getVZ",1.9,"nbody.Body.getVY",1.7,"nbody.Body.setVZ",1.5,"java.lang.Math.sqrt",1.4,"nbody.Body.setX",0.6,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.1,"nbody.Body.getMass",0.1,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0
50_5_NBody_Slowdown.xml,50,5,NBody,Slowdown,"nbody.NBodySystem.advance",45.0,"nbody.Body.getZ",10.6,"nbody.Body.getY",9.3,"NBody.innerBenchmarkLoop",9.2,"nbody.Body.getX",8.4,"nbody.Body.setVX",7.7,"nbody.Body.setVY",2.3,"nbody.Body.getVX",2.0,"java.lang.Math.sqrt",1.8,"nbody.Body.getVZ",1.2,"nbody.Body.getVY",0.8,"nbody.Body.setVZ",0.7,"nbody.Body.setX",0.5,"nbody.Body.setZ",0.5,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0,"",0,"",0
50_5_Permute_NoSlowdown.xml,50,5,Permute,NoSlowdown,"Permute.permute",71.2,"Permute.swap",28.6,"java.io.PrintStream.println",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Permute_Slowdown.xml,50,5,Permute,Slowdown,"Permute.permute",68.1,"Permute.swap",31.3,"Run.measure",0.4,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Queens_NoSlowdown.xml,50,5,Queens,NoSlowdown,"Queens.getRowColumn",55.5,"Queens.placeQueen",31.5,"Queens.setRowColumn",10.5,"Queens.queens",1.6,"java.util.Arrays.fill",0.5,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Queens_Slowdown.xml,50,5,Queens,Slowdown,"Queens.getRowColumn",60.5,"Queens.placeQueen",25.9,"Queens.setRowColumn",11.8,"Queens.queens",1.2,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"Queens.verifyResult",0.0,"java.util.Arrays.fill",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Richards_NoSlowdown.xml,50,5,Richards,NoSlowdown,"richards.Scheduler.schedule",23.8,"richards.TaskControlBlock.runTask",18.5,"richards.Scheduler$HandlerProcessFunction.apply",9.6,"richards.TaskState.isTaskHoldingOrWaiting",8.2,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.TaskControlBlock.addInputAndCheckPriority",3.6,"richards.Scheduler$IdleProcessFunction.apply",3.2,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Packet.setLink",2.3,"richards.Scheduler.findTask",1.9,"richards.Scheduler$WorkerProcessFunction.apply",1.8,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.TaskState.setTaskHolding",1.6,"richards.TaskControlBlock.getLink",1.6,"richards.RBObject.append",1.5,"richards.TaskControlBlock.getIdentity",1.5,"richards.IdleTaskDataRecord.setControl",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.Scheduler.queuePacket",1.2,"richards.Packet.getIdentity",0.8
50_5_Richards_Slowdown.xml,50,5,Richards,Slowdown,"richards.Scheduler.schedule",26.9,"richards.TaskControlBlock.runTask",19.8,"richards.Scheduler$HandlerProcessFunction.apply",8.4,"richards.TaskState.isTaskHoldingOrWaiting",6.7,"richards.Scheduler$DeviceProcessFunction.apply",4.8,"richards.Packet.setLink",4.3,"richards.TaskControlBlock.addInputAndCheckPriority",4.1,"richards.Scheduler.findTask",3.0,"richards.Scheduler$IdleProcessFunction.apply",2.1,"richards.TaskState.isWaitingWithPacket",1.9,"richards.TaskControlBlock.getIdentity",1.8,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.2,"richards.IdleTaskDataRecord.setControl",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.Scheduler.queuePacket",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.Packet.getDatum",0.8,"richards.TaskState.setTaskHolding",0.8,"richards.RBObject.append",0.8
50_5_Sieve_NoSlowdown.xml,50,5,Sieve,NoSlowdown,"Sieve.sieve",88.5,"java.util.Arrays.fill",10.2,"Sieve.benchmark",1.2,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.runBenchmark",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Sieve_Slowdown.xml,50,5,Sieve,Slowdown,"Sieve.sieve",90.5,"java.util.Arrays.fill",8.7,"Sieve.benchmark",0.7,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Storage_NoSlowdown.xml,50,5,Storage,NoSlowdown,"Storage.buildTreeDepth",59.4,"som.Arrays.setAll",36.1,"som.Random.next",2.3,"Storage.lambda$buildTreeDepth$0",2.0,"Run.printResult",0.0,"Storage.benchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Storage_Slowdown.xml,50,5,Storage,Slowdown,"Storage.buildTreeDepth",60.3,"som.Arrays.setAll",34.6,"som.Random.next",3.7,"Storage.lambda$buildTreeDepth$0",1.3,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Towers_NoSlowdown.xml,50,5,Towers,NoSlowdown,"Towers.popDiskFrom",31.5,"Towers.moveDisks",20.2,"Towers.pushDisk",19.4,"Towers$TowersDisk.setNext",17.5,"Towers.moveTopDisk",7.7,"Towers$TowersDisk.getSize",3.4,"java.io.PrintStream.println",0.1,"Towers.buildTowerAt",0.1,"Towers.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_5_Towers_Slowdown.xml,50,5,Towers,Slowdown,"Towers.popDiskFrom",32.9,"Towers.pushDisk",19.8,"Towers.moveDisks",18.9,"Towers$TowersDisk.setNext",18.6,"Towers.moveTopDisk",7.7,"Towers$TowersDisk.getSize",2.0,"java.io.PrintStream.println",0.1,"Towers.buildTowerAt",0.0,"Towers.benchmark",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Bounce_NoSlowdown.xml,50,6,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.4,"Bounce.benchmark",25.6,"java.lang.Math.abs",4.1,"Bounce$Ball.<init>",3.0,"Bounce.lambda$benchmark$0",1.4,"java.util.Arrays.setAll",1.3,"som.Random.next",1.0,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Bounce.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Bounce_Slowdown.xml,50,6,Bounce,Slowdown,"Bounce$Ball.bounce",60.3,"Bounce.benchmark",31.1,"java.lang.Math.abs",2.8,"Bounce.lambda$benchmark$0",2.6,"Bounce$Ball.<init>",1.8,"java.util.Arrays.setAll",0.9,"som.Random.next",0.3,"Run.printResult",0.0,"Bounce.verifyResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_CD_NoSlowdown.xml,50,6,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",16.4,"cd.CollisionDetector.isInVoxel",12.9,"cd.RedBlackTree.put",10.5,"cd.CallSign.compareTo",7.9,"cd.RedBlackTree.findNode",6.9,"cd.Vector2D.compareTo",3.7,"cd.Vector2D.compareNumbers",3.2,"cd.CallSign.compareTo",3.0,"cd.RedBlackTree.treeMinimum",3.0,"cd.Vector2D.compareTo",2.8,"som.Vector.append",2.7,"cd.RedBlackTree.forEach",2.5,"cd.CollisionDetector.recurse",2.4,"cd.CollisionDetector.handleNewFrame",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.<init>",1.9,"cd.RedBlackTree$Node.successor",1.9,"cd.CollisionDetector.voxelHash",1.4,"cd.Vector2D.<init>",1.2,"cd.Simulator.simulate",1.2
50_6_CD_Slowdown.xml,50,6,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.5,"cd.CollisionDetector.isInVoxel",14.0,"cd.RedBlackTree.put",11.2,"cd.RedBlackTree.findNode",8.9,"cd.CallSign.compareTo",6.8,"cd.Vector2D.compareTo",3.4,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.8,"cd.Vector2D.compareNumbers",2.3,"cd.RedBlackTree.leftRotate",2.3,"cd.RedBlackTree.treeMinimum",2.2,"cd.CollisionDetector.recurse",2.1,"cd.RedBlackTree.forEach",1.9,"cd.RedBlackTree$Node.successor",1.8,"som.Vector.append",1.8,"cd.CollisionDetector.handleNewFrame",1.7,"som.Vector.<init>",1.5,"cd.CollisionDetector.voxelHash",1.4,"cd.RedBlackTree$Node.<init>",1.1,"cd.Vector2D.plus",1.1
50_6_DeltaBlue_NoSlowdown.xml,50,6,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.8,"deltablue.Plan.execute",12.3,"som.Vector.forEach",6.6,"deltablue.EqualityConstraint.execute",6.1,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",1.9,"som.Vector.append",1.5,"java.util.Vector.add",1.3,"deltablue.AbstractConstraint.satisfy",1.3,"deltablue.ScaleConstraint.recalculate",1.1,"som.Vector.lambda$remove$0",1.1,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.AbstractConstraint.inputsKnown",0.4,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.4
50_6_DeltaBlue_Slowdown.xml,50,6,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",49.8,"deltablue.Plan.execute",14.3,"deltablue.EqualityConstraint.execute",6.9,"som.Vector.forEach",6.7,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.3,"java.util.Vector.add",1.2,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.lambda$remove$0",0.9,"som.Vector.<init>",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Variable.setValue",0.5,"deltablue.Variable.getStay",0.5
50_6_Havlak_NoSlowdown.xml,50,6,Havlak,NoSlowdown,"som.Vector.hasSome",35.9,"som.Vector.<init>",14.8,"havlak.HavlakLoopFinder.findLoops",7.4,"som.Vector.append",6.4,"som.Vector.forEach",4.2,"havlak.UnionFindNode.initNode",3.1,"havlak.HavlakLoopFinder.doDFS",2.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.8,"havlak.HavlakLoopFinder.stepD",1.7,"havlak.UnionFindNode.findSet",1.5,"som.Dictionary.at",1.4,"som.Vector.size",1.2,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Vector.at",1.0,"som.Dictionary.transferEntries",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.LoopStructureGraph$2.apply",0.9,"java.lang.Integer.valueOf",0.8,"som.Set.<init>",0.8,"havlak.LoopStructureGraph$2.apply",0.8
50_6_Havlak_Slowdown.xml,50,6,Havlak,Slowdown,"som.Vector.hasSome",41.9,"som.Vector.<init>",13.3,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",5.4,"som.Vector.forEach",3.1,"havlak.HavlakLoopFinder.doDFS",2.6,"havlak.UnionFindNode.initNode",2.3,"havlak.HavlakLoopFinder$2.apply",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.4,"havlak.HavlakLoopFinder.stepD",1.3,"som.Vector.size",1.1,"havlak.UnionFindNode.findSet",1.0,"som.Vector.at",1.0,"havlak.HavlakLoopFinder.identifyEdges",1.0,"som.Dictionary.at",1.0,"havlak.HavlakLoopFinder$2.apply",0.9,"java.lang.Integer.valueOf",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"som.Set.<init>",0.7,"som.Dictionary.atPut",0.6
50_6_Json_NoSlowdown.xml,50,6,Json,NoSlowdown,"java.lang.String.equals",35.8,"java.lang.Character.toString",18.6,"json.JsonPureStringParser.read",7.6,"java.lang.StringBuilder.append",3.5,"java.lang.StringBuilder.toString",3.4,"json.JsonPureStringParser.subStringFromTo",3.0,"java.lang.String.charAt",2.8,"json.JsonPureStringParser.readStringInternal",2.6,"som.Vector.append",2.6,"java.lang.String.hashCode",2.5,"som.Vector.<init>",2.3,"json.JsonPureStringParser.isWhiteSpace",2.1,"json.JsonPureStringParser.readArray",1.9,"json.JsonPureStringParser.readValue",1.4,"java.lang.StringBuilder.<init>",1.4,"json.JsonPureStringParser.readDigit",1.4,"json.JsonPureStringParser.endCapture",1.3,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.readChar",0.8,"json.JsonPureStringParser.isDigit",0.8
50_6_Json_Slowdown.xml,50,6,Json,Slowdown,"java.lang.String.equals",35.3,"java.lang.Character.toString",19.5,"json.JsonPureStringParser.read",6.8,"java.lang.String.charAt",3.9,"java.lang.StringBuilder.append",3.1,"json.JsonPureStringParser.subStringFromTo",2.8,"java.lang.StringBuilder.toString",2.6,"som.Vector.append",2.6,"json.JsonPureStringParser.readStringInternal",2.5,"som.Vector.<init>",2.4,"java.lang.StringBuilder.<init>",2.0,"json.JsonPureStringParser.readValue",1.9,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.isWhiteSpace",1.7,"json.JsonPureStringParser.readArray",1.7,"java.lang.String.length",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.2,"json.JsonPureStringParser.endCapture",1.2,"json.JsonPureStringParser.readChar",1.1,"json.JsonPureStringParser.readDigit",1.1
50_6_List_NoSlowdown.xml,50,6,List,NoSlowdown,"List$Element.getNext",46.4,"List.isShorterThan",43.6,"List.tail",9.1,"List.makeList",0.5,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"List.benchmark",0.1,"List.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_List_Slowdown.xml,50,6,List,Slowdown,"List.isShorterThan",59.3,"List$Element.getNext",32.0,"List.tail",8.3,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Mandelbrot_NoSlowdown.xml,50,6,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Mandelbrot_Slowdown.xml,50,6,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_NBody_NoSlowdown.xml,50,6,NBody,NoSlowdown,"nbody.NBodySystem.advance",65.3,"nbody.Body.setVX",12.3,"nbody.Body.setVY",3.3,"nbody.Body.getVX",2.8,"nbody.Body.getX",2.8,"nbody.Body.getZ",2.7,"nbody.Body.getVZ",1.9,"nbody.Body.getY",1.9,"nbody.Body.getVY",1.8,"nbody.Body.setVZ",1.7,"java.lang.Math.sqrt",1.4,"nbody.Body.setZ",0.7,"nbody.Body.setX",0.6,"NBody.innerBenchmarkLoop",0.4,"java.io.PrintStream.println",0.1,"nbody.Body.getMass",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0
50_6_NBody_Slowdown.xml,50,6,NBody,Slowdown,"nbody.NBodySystem.advance",44.3,"nbody.Body.getZ",10.2,"nbody.Body.getX",9.4,"NBody.innerBenchmarkLoop",9.3,"nbody.Body.getY",9.3,"nbody.Body.setVX",7.3,"nbody.Body.setVY",2.1,"nbody.Body.getVX",2.1,"java.lang.Math.sqrt",1.9,"nbody.Body.getVZ",1.3,"nbody.Body.setVZ",0.9,"nbody.Body.getVY",0.9,"nbody.Body.setZ",0.6,"nbody.Body.setX",0.4,"java.lang.ClassLoader.loadClass",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"nbody.Body.getMass",0.0,"nbody.Body.setY",0.0
50_6_Permute_NoSlowdown.xml,50,6,Permute,NoSlowdown,"Permute.permute",71.5,"Permute.swap",28.2,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Permute.benchmark",0.0,"Permute.verifyResult",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Permute_Slowdown.xml,50,6,Permute,Slowdown,"Permute.permute",68.5,"Permute.swap",30.8,"Run.measure",0.5,"Permute.verifyResult",0.2,"Permute.benchmark",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Queens_NoSlowdown.xml,50,6,Queens,NoSlowdown,"Queens.getRowColumn",55.7,"Queens.placeQueen",31.5,"Queens.setRowColumn",10.3,"Queens.queens",1.7,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.2,"java.io.PrintStream.println",0.1,"Run.printResult",0.1,"java.util.Arrays.fill",0.1,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Queens_Slowdown.xml,50,6,Queens,Slowdown,"Queens.getRowColumn",60.6,"Queens.placeQueen",25.8,"Queens.setRowColumn",11.9,"Queens.queens",1.0,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Richards_NoSlowdown.xml,50,6,Richards,NoSlowdown,"richards.Scheduler.schedule",23.5,"richards.TaskControlBlock.runTask",18.1,"richards.Scheduler$HandlerProcessFunction.apply",9.5,"richards.TaskState.isTaskHoldingOrWaiting",8.0,"richards.Scheduler$DeviceProcessFunction.apply",5.3,"richards.TaskControlBlock.addInputAndCheckPriority",4.4,"richards.Scheduler$IdleProcessFunction.apply",3.2,"richards.TaskState.isWaitingWithPacket",2.4,"richards.Packet.setLink",2.2,"richards.Scheduler.findTask",2.2,"richards.TaskControlBlock.getIdentity",2.2,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.IdleTaskDataRecord.setControl",1.5,"richards.Scheduler.queuePacket",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.RBObject.append",1.4,"richards.TaskControlBlock.getLink",1.3,"richards.TaskState.setTaskHolding",1.2,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Packet.getIdentity",0.8
50_6_Richards_Slowdown.xml,50,6,Richards,Slowdown,"richards.Scheduler.schedule",27.0,"richards.TaskControlBlock.runTask",19.5,"richards.Scheduler$HandlerProcessFunction.apply",8.9,"richards.TaskState.isTaskHoldingOrWaiting",6.8,"richards.Scheduler$DeviceProcessFunction.apply",5.6,"richards.Packet.setLink",4.2,"richards.TaskControlBlock.addInputAndCheckPriority",4.1,"richards.Scheduler.findTask",3.0,"richards.Scheduler$IdleProcessFunction.apply",2.2,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskState.isWaitingWithPacket",1.8,"richards.Scheduler$WorkerProcessFunction.apply",1.4,"richards.DeviceTaskDataRecord.setPending",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.IdleTaskDataRecord.setControl",1.1,"richards.TaskControlBlock.getLink",0.9,"richards.Scheduler.queuePacket",0.8,"richards.Packet.getDatum",0.8,"richards.RBObject.append",0.8,"richards.HandlerTaskDataRecord.workIn",0.7
50_6_Sieve_NoSlowdown.xml,50,6,Sieve,NoSlowdown,"Sieve.sieve",88.9,"java.util.Arrays.fill",9.9,"Sieve.benchmark",1.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Sieve_Slowdown.xml,50,6,Sieve,Slowdown,"Sieve.sieve",90.7,"java.util.Arrays.fill",8.4,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.doRuns",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Sieve.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Storage_NoSlowdown.xml,50,6,Storage,NoSlowdown,"Storage.buildTreeDepth",60.8,"som.Arrays.setAll",35.4,"som.Random.next",2.2,"Storage.lambda$buildTreeDepth$0",1.6,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.runBenchmark",0.0,"Storage.verifyResult",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Storage_Slowdown.xml,50,6,Storage,Slowdown,"Storage.buildTreeDepth",61.0,"som.Arrays.setAll",33.8,"som.Random.next",3.9,"Storage.lambda$buildTreeDepth$0",1.2,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Towers_NoSlowdown.xml,50,6,Towers,NoSlowdown,"Towers.popDiskFrom",32.1,"Towers.moveDisks",21.0,"Towers.pushDisk",19.0,"Towers$TowersDisk.setNext",18.1,"Towers.moveTopDisk",6.1,"Towers$TowersDisk.getSize",3.5,"Run.printResult",0.1,"Towers.buildTowerAt",0.1,"Run.runBenchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_6_Towers_Slowdown.xml,50,6,Towers,Slowdown,"Towers.popDiskFrom",32.5,"Towers.pushDisk",20.8,"Towers.moveDisks",18.6,"Towers$TowersDisk.setNext",17.8,"Towers.moveTopDisk",8.5,"Towers$TowersDisk.getSize",1.6,"Towers.buildTowerAt",0.1,"Run.measure",0.0,"Run.printResult",0.0,"Towers.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Bounce_NoSlowdown.xml,50,7,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.3,"Bounce.benchmark",25.7,"java.lang.Math.abs",4.2,"Bounce$Ball.<init>",3.6,"java.util.Arrays.setAll",1.6,"Bounce.lambda$benchmark$0",1.4,"som.Random.next",1.0,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Bounce.verifyResult",0.1,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Bounce_Slowdown.xml,50,7,Bounce,Slowdown,"Bounce$Ball.bounce",59.7,"Bounce.benchmark",31.7,"Bounce.lambda$benchmark$0",2.7,"java.lang.Math.abs",2.7,"Bounce$Ball.<init>",1.6,"java.util.Arrays.setAll",1.0,"som.Random.next",0.5,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_CD_NoSlowdown.xml,50,7,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",15.9,"cd.CollisionDetector.isInVoxel",12.9,"cd.RedBlackTree.put",9.8,"cd.CallSign.compareTo",7.4,"cd.RedBlackTree.findNode",7.2,"cd.Vector2D.compareTo",3.6,"som.Vector.append",3.2,"cd.Vector2D.compareTo",3.0,"cd.Vector2D.compareNumbers",2.9,"cd.CallSign.compareTo",2.8,"cd.CollisionDetector.recurse",2.7,"cd.RedBlackTree.treeMinimum",2.6,"cd.RedBlackTree.forEach",2.6,"cd.CollisionDetector.handleNewFrame",2.3,"cd.RedBlackTree.leftRotate",2.2,"cd.RedBlackTree$Node.successor",2.1,"som.Vector.<init>",1.8,"cd.CollisionDetector.voxelHash",1.7,"cd.Vector2D.plus",1.3,"cd.Vector2D.minus",1.2
50_7_CD_Slowdown.xml,50,7,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.2,"cd.CollisionDetector.isInVoxel",13.8,"cd.RedBlackTree.put",11.7,"cd.RedBlackTree.findNode",9.0,"cd.CallSign.compareTo",6.8,"cd.Vector2D.compareTo",3.7,"cd.CallSign.compareTo",3.2,"cd.Vector2D.compareTo",2.7,"cd.RedBlackTree.leftRotate",2.6,"cd.Vector2D.compareNumbers",2.5,"som.Vector.append",2.2,"cd.RedBlackTree.treeMinimum",1.9,"cd.RedBlackTree$Node.successor",1.9,"cd.CollisionDetector.recurse",1.8,"cd.CollisionDetector.handleNewFrame",1.8,"som.Vector.<init>",1.5,"cd.RedBlackTree.forEach",1.5,"cd.CollisionDetector.voxelHash",1.3,"cd.Vector2D.plus",1.2,"cd.Vector2D.minus",1.1
50_7_DeltaBlue_NoSlowdown.xml,50,7,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",57.1,"deltablue.Plan.execute",10.3,"som.Vector.forEach",6.2,"deltablue.EqualityConstraint.execute",5.3,"deltablue.ScaleConstraint.execute",2.6,"deltablue.Planner.addPropagate",2.0,"som.Vector.append",1.7,"java.util.Vector.add",1.6,"deltablue.AbstractConstraint.satisfy",1.1,"deltablue.ScaleConstraint.recalculate",0.8,"som.Vector.lambda$remove$0",0.8,"som.Vector.<init>",0.8,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.6,"deltablue.Planner.projectionTest",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.Variable.setWalkStrength",0.4
50_7_DeltaBlue_Slowdown.xml,50,7,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",50.5,"deltablue.Plan.execute",13.3,"deltablue.EqualityConstraint.execute",7.1,"som.Vector.forEach",6.2,"deltablue.ScaleConstraint.execute",4.1,"deltablue.Planner.addPropagate",1.8,"som.Vector.append",1.3,"deltablue.AbstractConstraint.satisfy",1.1,"java.util.Vector.add",1.1,"som.Vector.lambda$remove$0",1.0,"deltablue.Variable.setValue",0.8,"deltablue.Planner.makePlan",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.7,"deltablue.Planner.removePropagateFrom",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Variable.getStay",0.6,"som.Vector.<init>",0.6,"deltablue.BinaryConstraint.getOutput",0.5
50_7_Havlak_NoSlowdown.xml,50,7,Havlak,NoSlowdown,"som.Vector.hasSome",35.8,"som.Vector.<init>",15.1,"havlak.HavlakLoopFinder.findLoops",7.1,"som.Vector.append",6.1,"som.Vector.forEach",4.1,"havlak.UnionFindNode.initNode",2.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.2,"havlak.HavlakLoopFinder.doDFS",2.0,"havlak.HavlakLoopFinder.stepD",1.6,"som.Dictionary.at",1.6,"havlak.UnionFindNode.findSet",1.4,"som.Vector.size",1.4,"havlak.HavlakLoopFinder$2.apply",1.0,"som.Vector.at",1.0,"havlak.LoopStructureGraph$2.apply",1.0,"som.Dictionary.transferEntries",0.8,"havlak.HavlakLoopFinder.identifyEdges",0.8,"som.Set.<init>",0.8,"havlak.LoopStructureGraph$2.apply",0.8,"java.lang.Integer.valueOf",0.7
50_7_Havlak_Slowdown.xml,50,7,Havlak,Slowdown,"som.Vector.hasSome",39.2,"som.Vector.<init>",15.1,"havlak.HavlakLoopFinder.findLoops",7.5,"som.Vector.append",5.2,"som.Vector.forEach",3.5,"havlak.UnionFindNode.initNode",3.2,"havlak.HavlakLoopFinder.doDFS",2.1,"havlak.HavlakLoopFinder.stepD",2.0,"som.Vector.size",1.6,"havlak.HavlakLoopFinder$2.apply",1.5,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.5,"som.Dictionary.at",1.0,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.UnionFindNode.findSet",0.9,"som.Vector.at",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"som.Dictionary.getBucket",0.8,"havlak.HavlakLoopFinder$2.apply",0.7,"som.Dictionary.transferEntries",0.6,"havlak.LoopStructureGraph$2.apply",0.6
50_7_Json_NoSlowdown.xml,50,7,Json,NoSlowdown,"java.lang.String.equals",35.9,"java.lang.Character.toString",19.6,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.toString",4.0,"java.lang.StringBuilder.append",3.9,"java.lang.String.charAt",2.8,"json.JsonPureStringParser.subStringFromTo",2.4,"json.JsonPureStringParser.readStringInternal",2.3,"som.Vector.append",2.2,"som.Vector.<init>",2.1,"java.lang.String.hashCode",2.0,"json.JsonPureStringParser.readArray",1.8,"java.lang.StringBuilder.<init>",1.7,"json.JsonPureStringParser.readValue",1.7,"json.JsonPureStringParser.endCapture",1.6,"json.JsonPureStringParser.isWhiteSpace",1.4,"json.JsonPureStringParser.readDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",0.9,"json.JsonPureStringParser.isDigit",0.7,"json.JsonPureStringParser.readChar",0.7
50_7_Json_Slowdown.xml,50,7,Json,Slowdown,"java.lang.String.equals",36.2,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",6.7,"java.lang.String.charAt",3.5,"java.lang.StringBuilder.toString",3.2,"java.lang.StringBuilder.append",3.0,"json.JsonPureStringParser.subStringFromTo",2.8,"som.Vector.<init>",2.4,"java.lang.String.hashCode",2.3,"som.Vector.append",2.2,"java.lang.StringBuilder.<init>",2.2,"json.JsonPureStringParser.readStringInternal",2.2,"json.JsonPureStringParser.readValue",1.9,"json.JsonPureStringParser.isWhiteSpace",1.7,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.skipWhiteSpace",1.1,"java.lang.String.length",1.1,"json.JsonPureStringParser.isDigit",1.1,"json.JsonPureStringParser.readDigit",1.0,"json.JsonPureStringParser.readChar",0.9
50_7_List_NoSlowdown.xml,50,7,List,NoSlowdown,"List$Element.getNext",45.8,"List.isShorterThan",43.9,"List.tail",9.5,"List.makeList",0.4,"List$Element.length",0.2,"java.lang.Integer.valueOf",0.2,"List.benchmark",0.0,"Run.printResult",0.0,"List.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_List_Slowdown.xml,50,7,List,Slowdown,"List.isShorterThan",59.6,"List$Element.getNext",31.6,"List.tail",8.3,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"Run.printResult",0.0,"List$Element.length",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Mandelbrot_NoSlowdown.xml,50,7,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Mandelbrot_Slowdown.xml,50,7,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_NBody_NoSlowdown.xml,50,7,NBody,NoSlowdown,"nbody.NBodySystem.advance",67.1,"nbody.Body.setVX",12.0,"nbody.Body.setVY",3.0,"nbody.Body.getZ",2.9,"nbody.Body.getVX",2.7,"nbody.Body.getX",2.6,"nbody.Body.getY",1.7,"nbody.Body.getVZ",1.7,"nbody.Body.getVY",1.6,"java.lang.Math.sqrt",1.5,"nbody.Body.setVZ",1.4,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.4,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Harness.processArguments",0.0,"Run.printResult",0.0,"nbody.Body.setY",0.0,"",0
50_7_NBody_Slowdown.xml,50,7,NBody,Slowdown,"nbody.NBodySystem.advance",45.0,"nbody.Body.getZ",10.3,"nbody.Body.getY",9.7,"NBody.innerBenchmarkLoop",9.4,"nbody.Body.getX",8.6,"nbody.Body.setVX",7.0,"nbody.Body.setVY",2.1,"nbody.Body.getVX",1.9,"java.lang.Math.sqrt",1.8,"nbody.Body.getVZ",1.1,"nbody.Body.getVY",1.0,"nbody.Body.setVZ",1.0,"nbody.Body.setZ",0.5,"nbody.Body.setX",0.4,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"nbody.Body.getMass",0.0,"",0,"",0,"",0
50_7_Permute_NoSlowdown.xml,50,7,Permute,NoSlowdown,"Permute.permute",71.2,"Permute.swap",28.5,"Permute.verifyResult",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Permute_Slowdown.xml,50,7,Permute,Slowdown,"Permute.permute",69.2,"Permute.swap",30.1,"Run.measure",0.4,"Permute.verifyResult",0.2,"Run.printResult",0.1,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Run.reportBenchmark",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Queens_NoSlowdown.xml,50,7,Queens,NoSlowdown,"Queens.getRowColumn",54.5,"Queens.placeQueen",32.1,"Queens.setRowColumn",10.3,"Queens.queens",2.0,"java.util.Arrays.fill",0.7,"Run.printResult",0.1,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.reportBenchmark",0.1,"java.util.Arrays.fill",0.1,"Queens.verifyResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Queens_Slowdown.xml,50,7,Queens,Slowdown,"Queens.getRowColumn",59.8,"Queens.placeQueen",25.4,"Queens.setRowColumn",12.9,"Queens.queens",1.3,"java.util.Arrays.fill",0.3,"Queens.benchmark",0.2,"java.util.Arrays.fill",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Queens.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Richards_NoSlowdown.xml,50,7,Richards,NoSlowdown,"richards.Scheduler.schedule",24.5,"richards.TaskControlBlock.runTask",17.3,"richards.Scheduler$HandlerProcessFunction.apply",10.1,"richards.TaskState.isTaskHoldingOrWaiting",8.3,"richards.Scheduler$DeviceProcessFunction.apply",4.7,"richards.TaskControlBlock.addInputAndCheckPriority",4.0,"richards.Scheduler$IdleProcessFunction.apply",3.0,"richards.Scheduler.findTask",2.6,"richards.TaskState.isWaitingWithPacket",2.3,"richards.DeviceTaskDataRecord.setPending",2.0,"richards.TaskControlBlock.getIdentity",1.9,"richards.Packet.setLink",1.8,"richards.RBObject.append",1.7,"richards.TaskControlBlock.getLink",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.IdleTaskDataRecord.setControl",1.3,"richards.Scheduler.queuePacket",1.1,"richards.TaskState.setTaskHolding",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.Packet.getDatum",1.0
50_7_Richards_Slowdown.xml,50,7,Richards,Slowdown,"richards.Scheduler.schedule",26.7,"richards.TaskControlBlock.runTask",19.7,"richards.Scheduler$HandlerProcessFunction.apply",8.6,"richards.TaskState.isTaskHoldingOrWaiting",7.1,"richards.Scheduler$DeviceProcessFunction.apply",5.6,"richards.Packet.setLink",4.2,"richards.TaskControlBlock.addInputAndCheckPriority",4.2,"richards.Scheduler.findTask",2.9,"richards.Scheduler$IdleProcessFunction.apply",2.0,"richards.TaskState.isWaitingWithPacket",1.9,"richards.TaskControlBlock.getIdentity",1.4,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.HandlerTaskDataRecord.deviceIn",1.2,"richards.Scheduler$WorkerProcessFunction.apply",1.1,"richards.Scheduler.queuePacket",1.1,"richards.TaskState.setTaskHolding",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",1.0,"richards.IdleTaskDataRecord.setControl",1.0,"richards.RBObject.append",0.9,"richards.TaskControlBlock.getLink",0.8
50_7_Sieve_NoSlowdown.xml,50,7,Sieve,NoSlowdown,"Sieve.sieve",88.9,"java.util.Arrays.fill",9.8,"Sieve.benchmark",1.1,"java.io.PrintStream.println",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.0,"Sieve.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Sieve_Slowdown.xml,50,7,Sieve,Slowdown,"Sieve.sieve",90.8,"java.util.Arrays.fill",8.3,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Sieve.verifyResult",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Storage_NoSlowdown.xml,50,7,Storage,NoSlowdown,"Storage.buildTreeDepth",60.0,"som.Arrays.setAll",35.9,"som.Random.next",2.0,"Storage.lambda$buildTreeDepth$0",1.9,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.printTotal",0.0,"Storage.benchmark",0.0,"Storage.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Storage_Slowdown.xml,50,7,Storage,Slowdown,"Storage.buildTreeDepth",60.9,"som.Arrays.setAll",33.9,"som.Random.next",3.7,"Storage.lambda$buildTreeDepth$0",1.4,"Storage.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Towers_NoSlowdown.xml,50,7,Towers,NoSlowdown,"Towers.popDiskFrom",32.4,"Towers.moveDisks",21.4,"Towers.pushDisk",18.3,"Towers$TowersDisk.setNext",17.3,"Towers.moveTopDisk",6.9,"Towers$TowersDisk.getSize",3.7,"Run.printResult",0.1,"Towers.buildTowerAt",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_7_Towers_Slowdown.xml,50,7,Towers,Slowdown,"Towers.popDiskFrom",33.3,"Towers.moveDisks",19.7,"Towers.pushDisk",19.6,"Towers$TowersDisk.setNext",17.4,"Towers.moveTopDisk",8.4,"Towers$TowersDisk.getSize",1.4,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"Towers.benchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Bounce_NoSlowdown.xml,50,8,Bounce,NoSlowdown,"Bounce$Ball.bounce",62.6,"Bounce.benchmark",26.5,"java.lang.Math.abs",4.2,"Bounce$Ball.<init>",3.5,"Bounce.lambda$benchmark$0",1.3,"java.util.Arrays.setAll",1.1,"som.Random.next",0.7,"Bounce.verifyResult",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Bounce_Slowdown.xml,50,8,Bounce,Slowdown,"Bounce$Ball.bounce",59.9,"Bounce.benchmark",31.5,"Bounce.lambda$benchmark$0",2.6,"java.lang.Math.abs",2.6,"Bounce$Ball.<init>",1.9,"java.util.Arrays.setAll",0.9,"som.Random.next",0.5,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"java.lang.Integer.valueOf",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_CD_NoSlowdown.xml,50,8,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",15.8,"cd.CollisionDetector.isInVoxel",12.6,"cd.RedBlackTree.put",10.5,"cd.CallSign.compareTo",7.1,"cd.RedBlackTree.findNode",6.4,"cd.Vector2D.compareTo",3.7,"cd.CallSign.compareTo",3.4,"cd.Vector2D.compareNumbers",3.1,"cd.RedBlackTree.treeMinimum",2.9,"cd.CollisionDetector.recurse",2.8,"cd.Vector2D.compareTo",2.7,"cd.CollisionDetector.handleNewFrame",2.5,"cd.RedBlackTree.forEach",2.2,"cd.RedBlackTree.leftRotate",2.1,"som.Vector.append",2.1,"cd.RedBlackTree$Node.successor",2.0,"som.Vector.<init>",1.8,"cd.CollisionDetector.voxelHash",1.7,"cd.Vector2D.plus",1.5,"cd.Vector2D.minus",1.4
50_8_CD_Slowdown.xml,50,8,CD,Slowdown,"cd.RedBlackTree.treeInsert",18.5,"cd.CollisionDetector.isInVoxel",13.8,"cd.RedBlackTree.put",11.4,"cd.RedBlackTree.findNode",8.4,"cd.CallSign.compareTo",7.0,"cd.Vector2D.compareTo",3.6,"cd.CallSign.compareTo",3.0,"cd.Vector2D.compareTo",2.8,"cd.RedBlackTree.leftRotate",2.4,"cd.Vector2D.compareNumbers",2.4,"cd.RedBlackTree.treeMinimum",2.2,"cd.RedBlackTree$Node.successor",2.1,"cd.CollisionDetector.recurse",2.1,"som.Vector.append",2.1,"cd.RedBlackTree.forEach",2.0,"cd.CollisionDetector.handleNewFrame",1.8,"som.Vector.<init>",1.5,"cd.Vector2D.plus",1.4,"cd.CollisionDetector.voxelHash",1.2,"cd.RedBlackTree.get",1.1
50_8_DeltaBlue_NoSlowdown.xml,50,8,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.6,"deltablue.Plan.execute",12.3,"som.Vector.forEach",7.1,"deltablue.EqualityConstraint.execute",6.2,"deltablue.ScaleConstraint.execute",4.3,"deltablue.Planner.addPropagate",2.2,"java.util.Vector.add",1.3,"som.Vector.append",1.3,"deltablue.ScaleConstraint.recalculate",1.3,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.lambda$remove$0",1.0,"deltablue.Planner.makePlan",0.8,"som.Vector.<init>",0.7,"deltablue.Planner.projectionTest",0.7,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.BinaryConstraint.isSatisfied",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5,"deltablue.AbstractConstraint.inputsKnown",0.3
50_8_DeltaBlue_Slowdown.xml,50,8,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",50.8,"deltablue.Plan.execute",13.9,"deltablue.EqualityConstraint.execute",7.6,"som.Vector.forEach",6.5,"deltablue.ScaleConstraint.execute",3.3,"deltablue.Planner.addPropagate",1.9,"java.util.Vector.add",1.2,"deltablue.AbstractConstraint.satisfy",1.1,"som.Vector.append",1.1,"som.Vector.lambda$remove$0",0.8,"deltablue.Planner.projectionTest",0.7,"som.Vector.<init>",0.7,"deltablue.AbstractConstraint.inputsKnown",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Variable.setValue",0.6,"deltablue.ScaleConstraint.recalculate",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.5,"deltablue.Variable.getStay",0.5,"deltablue.Planner.removePropagateFrom",0.5
50_8_Havlak_NoSlowdown.xml,50,8,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",19.4,"havlak.HavlakLoopFinder.findLoops",7.6,"som.Vector.append",5.4,"som.Vector.forEach",4.1,"havlak.UnionFindNode.initNode",3.8,"havlak.HavlakLoopFinder.stepD",2.4,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.2,"havlak.HavlakLoopFinder.doDFS",2.0,"som.Dictionary.at",1.3,"som.Vector.size",1.3,"havlak.UnionFindNode.findSet",1.1,"havlak.LoopStructureGraph$2.apply",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.HavlakLoopFinder.isAncestor",1.0,"som.Vector.at",0.8,"som.Set.<init>",0.8,"havlak.HavlakLoopFinder$2.apply",0.8,"havlak.LoopStructureGraph$2.apply",0.7,"som.Dictionary.transferEntries",0.7
50_8_Havlak_Slowdown.xml,50,8,Havlak,Slowdown,"som.Vector.hasSome",39.1,"som.Vector.<init>",15.1,"havlak.HavlakLoopFinder.findLoops",7.1,"som.Vector.append",5.3,"som.Vector.forEach",3.6,"havlak.UnionFindNode.initNode",3.0,"havlak.HavlakLoopFinder.doDFS",2.3,"havlak.HavlakLoopFinder.stepD",2.2,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.7,"som.Vector.size",1.5,"havlak.HavlakLoopFinder$2.apply",1.5,"havlak.UnionFindNode.findSet",1.0,"som.Dictionary.at",1.0,"havlak.HavlakLoopFinder.identifyEdges",0.9,"java.lang.Integer.valueOf",0.9,"som.Set.<init>",0.7,"som.Vector.at",0.7,"havlak.HavlakLoopFinder$2.apply",0.7,"havlak.LoopStructureGraph$2.apply",0.6,"som.Dictionary.getBucket",0.6
50_8_Json_NoSlowdown.xml,50,8,Json,NoSlowdown,"java.lang.String.equals",36.3,"java.lang.Character.toString",18.1,"json.JsonPureStringParser.read",8.7,"java.lang.StringBuilder.toString",3.5,"json.JsonPureStringParser.subStringFromTo",3.3,"java.lang.StringBuilder.append",2.9,"json.JsonPureStringParser.readStringInternal",2.9,"som.Vector.append",2.6,"java.lang.String.charAt",2.4,"java.lang.String.hashCode",2.3,"som.Vector.<init>",2.3,"java.lang.StringBuilder.<init>",1.8,"json.JsonPureStringParser.isWhiteSpace",1.6,"json.JsonPureStringParser.readArray",1.6,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.endCapture",1.5,"json.JsonPureStringParser.readDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.4,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.isDigit",0.4
50_8_Json_Slowdown.xml,50,8,Json,Slowdown,"java.lang.String.equals",36.7,"java.lang.Character.toString",18.5,"json.JsonPureStringParser.read",7.0,"java.lang.String.charAt",3.4,"json.JsonPureStringParser.subStringFromTo",3.3,"json.JsonPureStringParser.readStringInternal",3.1,"java.lang.StringBuilder.append",3.1,"java.lang.StringBuilder.toString",2.6,"java.lang.StringBuilder.<init>",2.1,"som.Vector.append",2.1,"som.Vector.<init>",2.0,"java.lang.String.hashCode",2.0,"json.JsonPureStringParser.readValue",1.8,"json.JsonPureStringParser.isWhiteSpace",1.7,"json.JsonPureStringParser.readArray",1.5,"json.JsonPureStringParser.isDigit",1.2,"json.JsonPureStringParser.skipWhiteSpace",1.1,"java.lang.String.length",1.0,"json.JsonPureStringParser.readChar",1.0,"json.JsonPureStringParser.readDigit",1.0
50_8_List_NoSlowdown.xml,50,8,List,NoSlowdown,"List$Element.getNext",45.9,"List.isShorterThan",43.3,"List.tail",9.9,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.measure",0.0,"Run.printResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_List_Slowdown.xml,50,8,List,Slowdown,"List.isShorterThan",59.0,"List$Element.getNext",32.4,"List.tail",8.1,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.0,"List.benchmark",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Mandelbrot_NoSlowdown.xml,50,8,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.8,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Mandelbrot_Slowdown.xml,50,8,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Mandelbrot.verifyResult",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_NBody_NoSlowdown.xml,50,8,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.8,"nbody.Body.setVX",12.2,"nbody.Body.setVY",3.0,"nbody.Body.getVX",2.7,"nbody.Body.getX",2.5,"nbody.Body.getVZ",2.1,"nbody.Body.getZ",2.1,"nbody.Body.getY",1.9,"nbody.Body.setVZ",1.6,"nbody.Body.getVY",1.5,"java.lang.Math.sqrt",1.3,"nbody.Body.setZ",0.8,"nbody.Body.setX",0.7,"NBody.innerBenchmarkLoop",0.5,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0
50_8_NBody_Slowdown.xml,50,8,NBody,Slowdown,"nbody.NBodySystem.advance",45.4,"nbody.Body.getZ",10.0,"nbody.Body.getY",9.6,"nbody.Body.getX",8.9,"NBody.innerBenchmarkLoop",8.3,"nbody.Body.setVX",7.4,"java.lang.Math.sqrt",2.1,"nbody.Body.setVY",2.0,"nbody.Body.getVX",2.0,"nbody.Body.getVZ",1.1,"nbody.Body.getVY",0.9,"nbody.Body.setVZ",0.9,"nbody.Body.setZ",0.6,"nbody.Body.setX",0.6,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"nbody.Body.getMass",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0
50_8_Permute_NoSlowdown.xml,50,8,Permute,NoSlowdown,"Permute.permute",70.0,"Permute.swap",29.8,"java.io.PrintStream.println",0.1,"Permute.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Permute_Slowdown.xml,50,8,Permute,Slowdown,"Permute.permute",67.6,"Permute.swap",31.8,"Run.measure",0.3,"Permute.benchmark",0.1,"Permute.verifyResult",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Benchmark.innerBenchmarkLoop",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Queens_NoSlowdown.xml,50,8,Queens,NoSlowdown,"Queens.getRowColumn",53.7,"Queens.placeQueen",32.2,"Queens.setRowColumn",11.0,"Queens.queens",2.1,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"java.util.Arrays.fill",0.1,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.measure",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Queens_Slowdown.xml,50,8,Queens,Slowdown,"Queens.getRowColumn",62.1,"Queens.placeQueen",24.7,"Queens.setRowColumn",11.5,"Queens.queens",1.2,"java.util.Arrays.fill",0.2,"Queens.benchmark",0.1,"Benchmark.innerBenchmarkLoop",0.0,"Run.printResult",0.0,"java.util.Arrays.fill",0.0,"Queens.verifyResult",0.0,"java.io.PrintStream.println",0.0,"java.lang.Boolean.booleanValue",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Richards_NoSlowdown.xml,50,8,Richards,NoSlowdown,"richards.Scheduler.schedule",25.6,"richards.TaskControlBlock.runTask",17.4,"richards.Scheduler$HandlerProcessFunction.apply",9.3,"richards.TaskState.isTaskHoldingOrWaiting",7.9,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.TaskControlBlock.addInputAndCheckPriority",3.8,"richards.Scheduler$IdleProcessFunction.apply",3.0,"richards.Scheduler.findTask",2.4,"richards.Packet.setLink",2.2,"richards.TaskState.isWaitingWithPacket",2.1,"richards.DeviceTaskDataRecord.setPending",1.9,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskControlBlock.getLink",1.7,"richards.IdleTaskDataRecord.setControl",1.6,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.Scheduler.queuePacket",1.5,"richards.RBObject.append",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.TaskState.setTaskHolding",1.0,"richards.HandlerTaskDataRecord.deviceInAdd",0.9
50_8_Richards_Slowdown.xml,50,8,Richards,Slowdown,"richards.Scheduler.schedule",25.6,"richards.TaskControlBlock.runTask",19.7,"richards.Scheduler$HandlerProcessFunction.apply",8.7,"richards.TaskState.isTaskHoldingOrWaiting",6.9,"richards.Scheduler$DeviceProcessFunction.apply",5.0,"richards.TaskControlBlock.addInputAndCheckPriority",4.9,"richards.Packet.setLink",3.9,"richards.Scheduler.findTask",2.7,"richards.TaskControlBlock.getIdentity",2.0,"richards.Scheduler$IdleProcessFunction.apply",1.9,"richards.TaskState.isWaitingWithPacket",1.9,"richards.DeviceTaskDataRecord.setPending",1.7,"richards.IdleTaskDataRecord.setControl",1.5,"richards.Scheduler$WorkerProcessFunction.apply",1.2,"richards.HandlerTaskDataRecord.deviceInAdd",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.TaskControlBlock.getLink",1.0,"richards.TaskState.setTaskHolding",0.9,"richards.Scheduler.queuePacket",0.7,"richards.Packet.getDatum",0.7
50_8_Sieve_NoSlowdown.xml,50,8,Sieve,NoSlowdown,"Sieve.sieve",89.1,"java.util.Arrays.fill",9.7,"Sieve.benchmark",1.0,"Benchmark.innerBenchmarkLoop",0.1,"Run.measure",0.0,"Run.printResult",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Sieve_Slowdown.xml,50,8,Sieve,Slowdown,"Sieve.sieve",90.6,"java.util.Arrays.fill",8.6,"Sieve.benchmark",0.8,"Benchmark.innerBenchmarkLoop",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Storage_NoSlowdown.xml,50,8,Storage,NoSlowdown,"Storage.buildTreeDepth",60.2,"som.Arrays.setAll",35.7,"som.Random.next",2.1,"Storage.lambda$buildTreeDepth$0",1.9,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.getSuiteFromName",0.0,"Run.printTotal",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Storage_Slowdown.xml,50,8,Storage,Slowdown,"Storage.buildTreeDepth",60.6,"som.Arrays.setAll",34.1,"som.Random.next",4.0,"Storage.lambda$buildTreeDepth$0",1.3,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"Storage.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Towers_NoSlowdown.xml,50,8,Towers,NoSlowdown,"Towers.popDiskFrom",32.1,"Towers.moveDisks",20.7,"Towers.pushDisk",18.6,"Towers$TowersDisk.setNext",18.0,"Towers.moveTopDisk",7.0,"Towers$TowersDisk.getSize",3.5,"Towers.buildTowerAt",0.1,"Run.getSuiteFromName",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0
50_8_Towers_Slowdown.xml,50,8,Towers,Slowdown,"Towers.popDiskFrom",32.6,"Towers.pushDisk",21.3,"Towers.moveDisks",18.2,"Towers$TowersDisk.setNext",18.2,"Towers.moveTopDisk",7.7,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.1,"Run.printResult",0.0,"Towers.benchmark",0.0,"java.io.PrintStream.println",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Bounce_NoSlowdown.xml,50,9,Bounce,NoSlowdown,"Bounce$Ball.bounce",63.1,"Bounce.benchmark",26.2,"java.lang.Math.abs",4.1,"Bounce$Ball.<init>",3.2,"Bounce.lambda$benchmark$0",1.2,"java.util.Arrays.setAll",1.2,"som.Random.next",0.6,"Bounce.verifyResult",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"java.lang.Integer.valueOf",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"som.Random.<init>",0.0,"",0,"",0,"",0,"",0,"",0
50_9_Bounce_Slowdown.xml,50,9,Bounce,Slowdown,"Bounce$Ball.bounce",59.0,"Bounce.benchmark",31.8,"java.lang.Math.abs",3.1,"Bounce.lambda$benchmark$0",2.9,"Bounce$Ball.<init>",1.9,"java.util.Arrays.setAll",0.8,"som.Random.next",0.5,"Bounce.verifyResult",0.0,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_CD_NoSlowdown.xml,50,9,CD,NoSlowdown,"cd.RedBlackTree.treeInsert",17.0,"cd.CollisionDetector.isInVoxel",12.1,"cd.RedBlackTree.put",10.8,"cd.CallSign.compareTo",7.4,"cd.RedBlackTree.findNode",6.6,"cd.Vector2D.compareTo",3.7,"cd.Vector2D.compareNumbers",3.1,"cd.RedBlackTree.treeMinimum",3.0,"cd.CallSign.compareTo",2.9,"cd.Vector2D.compareTo",2.7,"som.Vector.append",2.5,"cd.RedBlackTree.leftRotate",2.4,"cd.CollisionDetector.recurse",2.3,"cd.RedBlackTree.forEach",2.2,"cd.CollisionDetector.handleNewFrame",2.2,"som.Vector.<init>",1.9,"cd.RedBlackTree$Node.successor",1.9,"cd.CollisionDetector.voxelHash",1.6,"cd.Simulator.simulate",1.5,"cd.RedBlackTree.get",1.2
50_9_CD_Slowdown.xml,50,9,CD,Slowdown,"cd.RedBlackTree.treeInsert",19.6,"cd.CollisionDetector.isInVoxel",14.2,"cd.RedBlackTree.put",10.6,"cd.RedBlackTree.findNode",8.8,"cd.CallSign.compareTo",6.8,"cd.Vector2D.compareTo",3.3,"cd.Vector2D.compareTo",2.9,"cd.CallSign.compareTo",2.5,"cd.RedBlackTree.leftRotate",2.4,"cd.CollisionDetector.recurse",2.3,"cd.Vector2D.compareNumbers",2.3,"cd.RedBlackTree.treeMinimum",2.1,"som.Vector.append",1.9,"cd.RedBlackTree$Node.successor",1.9,"cd.CollisionDetector.handleNewFrame",1.8,"cd.RedBlackTree.forEach",1.6,"som.Vector.<init>",1.5,"cd.Vector2D.plus",1.2,"cd.Vector2D.minus",1.2,"cd.CollisionDetector.voxelHash",1.2
50_9_DeltaBlue_NoSlowdown.xml,50,9,DeltaBlue,NoSlowdown,"java.util.Vector$Itr.next",51.2,"deltablue.Plan.execute",12.4,"som.Vector.forEach",6.7,"deltablue.EqualityConstraint.execute",6.4,"deltablue.ScaleConstraint.execute",4.2,"deltablue.Planner.addPropagate",2.2,"som.Vector.append",1.4,"java.util.Vector.add",1.4,"som.Vector.lambda$remove$0",1.1,"deltablue.ScaleConstraint.recalculate",1.1,"deltablue.AbstractConstraint.satisfy",1.1,"deltablue.Planner.makePlan",0.9,"som.Vector.<init>",0.8,"deltablue.Planner.projectionTest",0.7,"deltablue.Planner.addConstraintsConsumingTo",0.6,"deltablue.BinaryConstraint.getOutput",0.6,"deltablue.Planner.removePropagateFrom",0.5,"deltablue.BinaryConstraint.isSatisfied",0.5,"deltablue.AbstractConstraint.inputsKnown",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5
50_9_DeltaBlue_Slowdown.xml,50,9,DeltaBlue,Slowdown,"java.util.Vector$Itr.next",50.2,"deltablue.Plan.execute",13.4,"deltablue.EqualityConstraint.execute",7.2,"som.Vector.forEach",6.9,"deltablue.ScaleConstraint.execute",4.0,"deltablue.Planner.addPropagate",2.0,"som.Vector.append",1.3,"java.util.Vector.add",1.2,"deltablue.AbstractConstraint.satisfy",1.0,"som.Vector.lambda$remove$0",0.9,"deltablue.Variable.getStay",0.7,"deltablue.ScaleConstraint.recalculate",0.7,"deltablue.AbstractConstraint.inputsKnown",0.7,"deltablue.Variable.setValue",0.6,"deltablue.Planner.projectionTest",0.6,"som.Vector.<init>",0.6,"deltablue.Planner.removePropagateFrom",0.6,"deltablue.Planner.makePlan",0.6,"deltablue.Planner.addConstraintsConsumingTo",0.5,"deltablue.Planner.lambda$addConstraintsConsumingTo$2",0.5
50_9_Havlak_NoSlowdown.xml,50,9,Havlak,NoSlowdown,"som.Vector.hasSome",31.5,"som.Vector.<init>",19.4,"havlak.HavlakLoopFinder.findLoops",7.3,"som.Vector.append",5.7,"havlak.UnionFindNode.initNode",4.1,"som.Vector.forEach",4.1,"havlak.HavlakLoopFinder.stepD",2.6,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",2.1,"havlak.HavlakLoopFinder.doDFS",1.9,"som.Dictionary.at",1.5,"som.Vector.size",1.2,"havlak.UnionFindNode.findSet",1.1,"havlak.HavlakLoopFinder$2.apply",1.0,"havlak.LoopStructureGraph$2.apply",1.0,"som.Vector.at",0.9,"havlak.HavlakLoopFinder.isAncestor",0.9,"havlak.HavlakLoopFinder.identifyEdges",0.8,"som.Set.<init>",0.7,"som.Dictionary.transferEntries",0.7,"havlak.LoopStructureGraph$2.apply",0.7
50_9_Havlak_Slowdown.xml,50,9,Havlak,Slowdown,"som.Vector.hasSome",39.2,"som.Vector.<init>",15.7,"havlak.HavlakLoopFinder.findLoops",6.9,"som.Vector.append",5.2,"som.Vector.forEach",3.5,"havlak.UnionFindNode.initNode",3.3,"havlak.HavlakLoopFinder.doDFS",2.4,"havlak.HavlakLoopFinder.stepD",1.9,"havlak.HavlakLoopFinder.lambda$stepEProcessNonBackPreds$1",1.5,"som.Vector.size",1.3,"havlak.HavlakLoopFinder$2.apply",1.3,"som.Dictionary.at",1.1,"havlak.UnionFindNode.findSet",1.0,"havlak.HavlakLoopFinder.identifyEdges",0.9,"havlak.LoopStructureGraph$2.apply",0.8,"som.Vector.at",0.7,"havlak.HavlakLoopFinder$2.apply",0.7,"java.lang.Integer.valueOf",0.7,"havlak.LoopStructureGraph$2.apply",0.6,"som.IdentityDictionary$IdEntry.match",0.6
50_9_Json_NoSlowdown.xml,50,9,Json,NoSlowdown,"java.lang.String.equals",35.5,"java.lang.Character.toString",19.7,"json.JsonPureStringParser.read",8.1,"java.lang.StringBuilder.toString",3.7,"java.lang.StringBuilder.append",3.4,"java.lang.String.charAt",2.7,"json.JsonPureStringParser.readStringInternal",2.6,"java.lang.String.hashCode",2.5,"som.Vector.<init>",2.4,"json.JsonPureStringParser.subStringFromTo",2.4,"som.Vector.append",2.0,"json.JsonPureStringParser.readDigit",1.7,"json.JsonPureStringParser.isWhiteSpace",1.6,"java.lang.StringBuilder.<init>",1.6,"json.JsonPureStringParser.readValue",1.5,"json.JsonPureStringParser.endCapture",1.4,"json.JsonPureStringParser.readArray",1.3,"json.JsonPureStringParser.isDigit",1.0,"json.JsonPureStringParser.skipWhiteSpace",0.9,"json.JsonPureStringParser.readChar",0.9
50_9_Json_Slowdown.xml,50,9,Json,Slowdown,"java.lang.String.equals",37.6,"java.lang.Character.toString",17.9,"json.JsonPureStringParser.read",7.5,"java.lang.StringBuilder.toString",3.5,"java.lang.String.charAt",3.3,"java.lang.StringBuilder.append",3.0,"json.JsonPureStringParser.subStringFromTo",2.9,"json.JsonPureStringParser.readStringInternal",2.4,"som.Vector.append",2.2,"som.Vector.<init>",2.1,"java.lang.StringBuilder.<init>",1.9,"java.lang.String.hashCode",1.8,"json.JsonPureStringParser.readArray",1.7,"json.JsonPureStringParser.readValue",1.6,"json.JsonPureStringParser.isWhiteSpace",1.5,"json.JsonPureStringParser.readDigit",1.4,"json.JsonPureStringParser.skipWhiteSpace",1.1,"json.JsonPureStringParser.endCapture",1.0,"json.JsonPureStringParser.isDigit",1.0,"java.lang.String.length",1.0
50_9_List_NoSlowdown.xml,50,9,List,NoSlowdown,"List$Element.getNext",45.1,"List.isShorterThan",44.2,"List.tail",9.8,"List.makeList",0.5,"java.lang.Integer.valueOf",0.2,"List$Element.length",0.1,"List.benchmark",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"List.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_List_Slowdown.xml,50,9,List,Slowdown,"List.isShorterThan",59.2,"List$Element.getNext",32.1,"List.tail",8.1,"List.makeList",0.3,"java.lang.Integer.valueOf",0.1,"List$Element.length",0.1,"Run.printResult",0.0,"List.benchmark",0.0,"Benchmark.innerBenchmarkLoop",0.0,"List.verifyResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Mandelbrot_NoSlowdown.xml,50,9,Mandelbrot,NoSlowdown,"Mandelbrot.mandelbrot",99.8,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Mandelbrot_Slowdown.xml,50,9,Mandelbrot,Slowdown,"Mandelbrot.mandelbrot",99.9,"Run.printResult",0.0,"Run.printTotal",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.System.nanoTime",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_NBody_NoSlowdown.xml,50,9,NBody,NoSlowdown,"nbody.NBodySystem.advance",66.2,"nbody.Body.setVX",11.9,"nbody.Body.setVY",3.4,"nbody.Body.getZ",2.8,"nbody.Body.getX",2.7,"nbody.Body.getVX",2.1,"nbody.Body.getVY",2.0,"nbody.Body.getVZ",2.0,"nbody.Body.getY",1.9,"nbody.Body.setVZ",1.6,"java.lang.Math.sqrt",1.5,"nbody.Body.setX",0.8,"nbody.Body.setZ",0.6,"NBody.innerBenchmarkLoop",0.3,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"nbody.Body.getMass",0.0,"",0,"",0
50_9_NBody_Slowdown.xml,50,9,NBody,Slowdown,"nbody.NBodySystem.advance",45.4,"nbody.Body.getZ",10.3,"nbody.Body.getY",9.3,"NBody.innerBenchmarkLoop",9.0,"nbody.Body.getX",8.3,"nbody.Body.setVX",7.7,"nbody.Body.setVY",2.1,"java.lang.Math.sqrt",1.9,"nbody.Body.getVX",1.9,"nbody.Body.getVZ",1.3,"nbody.Body.getVY",1.2,"nbody.Body.setVZ",0.7,"nbody.Body.setZ",0.4,"nbody.Body.setX",0.4,"java.io.PrintStream.println",0.0,"Run.printResult",0.0,"nbody.Body.getMass",0.0,"Run.printTotal",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0
50_9_Permute_NoSlowdown.xml,50,9,Permute,NoSlowdown,"Permute.permute",69.5,"Permute.swap",30.3,"Permute.benchmark",0.1,"Run.printResult",0.0,"java.io.PrintStream.println",0.0,"Permute.verifyResult",0.0,"Run.reportBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Permute_Slowdown.xml,50,9,Permute,Slowdown,"Permute.permute",68.6,"Permute.swap",30.8,"Run.measure",0.5,"Permute.benchmark",0.1,"Permute.verifyResult",0.0,"Run.printResult",0.0,"Run.runBenchmark",0.0,"java.io.PrintStream.println",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Queens_NoSlowdown.xml,50,9,Queens,NoSlowdown,"Queens.getRowColumn",55.5,"Queens.placeQueen",31.1,"Queens.setRowColumn",10.8,"Queens.queens",1.5,"java.util.Arrays.fill",0.5,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.2,"java.util.Arrays.fill",0.1,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.1,"Run.reportBenchmark",0.1,"Queens.verifyResult",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Queens_Slowdown.xml,50,9,Queens,Slowdown,"Queens.getRowColumn",61.2,"Queens.placeQueen",24.8,"Queens.setRowColumn",12.1,"Queens.queens",1.2,"java.util.Arrays.fill",0.4,"Queens.benchmark",0.2,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"java.util.Arrays.fill",0.0,"Run.reportBenchmark",0.0,"java.lang.Boolean.booleanValue",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Richards_NoSlowdown.xml,50,9,Richards,NoSlowdown,"richards.Scheduler.schedule",24.4,"richards.TaskControlBlock.runTask",18.2,"richards.Scheduler$HandlerProcessFunction.apply",8.7,"richards.TaskState.isTaskHoldingOrWaiting",7.4,"richards.Scheduler$DeviceProcessFunction.apply",5.2,"richards.TaskControlBlock.addInputAndCheckPriority",3.4,"richards.Scheduler$IdleProcessFunction.apply",3.1,"richards.Scheduler.findTask",2.4,"richards.Scheduler.queuePacket",2.2,"richards.TaskState.isWaitingWithPacket",2.1,"richards.DeviceTaskDataRecord.setPending",1.8,"richards.Packet.setLink",1.8,"richards.RBObject.append",1.8,"richards.TaskControlBlock.getIdentity",1.8,"richards.TaskControlBlock.getLink",1.8,"richards.IdleTaskDataRecord.setControl",1.7,"richards.Scheduler$WorkerProcessFunction.apply",1.6,"richards.TaskState.setTaskHolding",1.3,"richards.HandlerTaskDataRecord.deviceIn",1.1,"richards.HandlerTaskDataRecord.deviceInAdd",0.9
50_9_Richards_Slowdown.xml,50,9,Richards,Slowdown,"richards.Scheduler.schedule",26.5,"richards.TaskControlBlock.runTask",20.9,"richards.Scheduler$HandlerProcessFunction.apply",8.9,"richards.TaskState.isTaskHoldingOrWaiting",6.7,"richards.Scheduler$DeviceProcessFunction.apply",5.5,"richards.Packet.setLink",3.8,"richards.TaskControlBlock.addInputAndCheckPriority",3.7,"richards.Scheduler.findTask",2.8,"richards.TaskState.isWaitingWithPacket",2.2,"richards.Scheduler$IdleProcessFunction.apply",2.0,"richards.TaskControlBlock.getIdentity",1.9,"richards.DeviceTaskDataRecord.setPending",1.4,"richards.Scheduler$WorkerProcessFunction.apply",1.1,"richards.HandlerTaskDataRecord.deviceIn",1.0,"richards.TaskControlBlock.getLink",1.0,"richards.IdleTaskDataRecord.setControl",0.9,"richards.Scheduler.queuePacket",0.9,"richards.RBObject.append",0.8,"richards.HandlerTaskDataRecord.deviceInAdd",0.8,"richards.Packet.getDatum",0.8
50_9_Sieve_NoSlowdown.xml,50,9,Sieve,NoSlowdown,"Sieve.sieve",88.0,"java.util.Arrays.fill",10.9,"Sieve.benchmark",0.9,"Benchmark.innerBenchmarkLoop",0.1,"Run.printResult",0.1,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Sieve.verifyResult",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Sieve_Slowdown.xml,50,9,Sieve,Slowdown,"Sieve.sieve",90.6,"java.util.Arrays.fill",8.3,"Sieve.benchmark",0.9,"Run.printResult",0.1,"Benchmark.innerBenchmarkLoop",0.1,"java.io.PrintStream.println",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Storage_NoSlowdown.xml,50,9,Storage,NoSlowdown,"Storage.buildTreeDepth",60.0,"som.Arrays.setAll",35.6,"som.Random.next",2.5,"Storage.lambda$buildTreeDepth$0",1.6,"Run.printResult",0.1,"Storage.verifyResult",0.1,"java.io.PrintStream.println",0.1,"Run.reportBenchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Storage_Slowdown.xml,50,9,Storage,Slowdown,"Storage.buildTreeDepth",60.3,"som.Arrays.setAll",35.0,"som.Random.next",3.5,"Storage.lambda$buildTreeDepth$0",1.2,"java.io.PrintStream.println",0.0,"Run.measure",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"Run.runBenchmark",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Towers_NoSlowdown.xml,50,9,Towers,NoSlowdown,"Towers.popDiskFrom",30.5,"Towers.moveDisks",21.4,"Towers.pushDisk",19.4,"Towers$TowersDisk.setNext",17.9,"Towers.moveTopDisk",7.0,"Towers$TowersDisk.getSize",3.6,"Towers.buildTowerAt",0.1,"java.io.PrintStream.println",0.1,"Run.printResult",0.0,"Run.runBenchmark",0.0,"Towers.benchmark",0.0,"java.lang.ClassLoader.loadClass",0.0,"java.lang.Integer.valueOf",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
50_9_Towers_Slowdown.xml,50,9,Towers,Slowdown,"Towers.popDiskFrom",32.3,"Towers.pushDisk",21.1,"Towers.moveDisks",18.4,"Towers$TowersDisk.setNext",18.1,"Towers.moveTopDisk",8.2,"Towers$TowersDisk.getSize",1.8,"Towers.buildTowerAt",0.0,"Run.printResult",0.0,"Run.reportBenchmark",0.0,"java.io.PrintStream.println",0.0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0,"",0
